task_id:MbppEval/644
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def reverse_Array_Upto_K(input, k): 
    '''
    Write a python function to reverse an array upto a given position.
    '''
```

----------------------Assistant Message----------------------
```python
def reverse_Array_Upto_K(input, k): 
    '''
    Write a python function to reverse an array upto a given position.
    '''

    '''
    Write a python function to reverse an array upto a given position.
    '''
    # Loop through half of the array
    for i in range(k//2):
        # Swap the elements from start and end
        input[i], input[k-i-1] = input[k-i-1], input[i]
    
    # Return the reversed array upto k
    return input[:k]

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-2<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert reverse_Array_Upto_K([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],1) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def reverse_Array_Upto_K(input, k): 
    '''
    Write a python function to reverse an array upto a given position.
    '''

    '''
    Write a python function to reverse an array upto a given position.
    '''
    # Loop through half of the array
    for i in range(k//2):
        # Swap the elements from start and end
        input[i], input[k-i-1] = input[k-i-1], input[i]
    
    # Return the reversed array upto k
    return input[:k+1]

```
