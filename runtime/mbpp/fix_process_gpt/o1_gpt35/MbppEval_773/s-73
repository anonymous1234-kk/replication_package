task_id:MbppEval/773
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import re
def occurance_substring(text,pattern):
    '''
    Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.
    '''
```

----------------------Assistant Message----------------------
```python
import re
def occurance_substring(text,pattern):
    '''
    Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.
    '''

    # Find all the matches of the pattern in the given text
    matches = re.finditer(pattern, text)

    # If no match is found, return None
    if not matches:
        return None

    # Create a list to store the positions of the matches
    positions = []

    # Loop through all the matches and store their positions in the positions list
    for match in matches:
        positions.append(match.start())

    # Return the positions of the matches
    return positions

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-25<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert occurance_substring('I am a good python Programmer','Python') == None
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert occurance_substring('Hello, World','o') == [4, 8]
assert occurance_substring('Hello, World','W') == [7]
assert occurance_substring('Goodbye, World','W') == [9]
assert occurance_substring(' ',' ') == [0]
assert occurance_substring('Hello, World','H') == [0]
assert occurance_substring('hello world','world') == [6]
assert occurance_substring('Hactoberfest is awesome','actober') == [1]
assert occurance_substring('I am trying to learn python','to learn') == [12]
assert occurance_substring('Computer Science','ter S') == [5]
assert occurance_substring('I am a Teacher','am') == [2]
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import re
def occurance_substring(text, pattern):
    matches = re.finditer(pattern, text)
    if not matches:
        return None
    positions = []
    for match in matches:
        positions.append(match.start())
    return positions
```
