task_id:MbppEval/739
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import math 
def find_Index(n): 
    '''
    Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/
    '''
```

----------------------Assistant Message----------------------
```python
import math 
def find_Index(n): 
    '''
    Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/
    '''
 
    count = 0
    index = 1
    while True:
        # Calculate the triangular number
        triangular_num = (index * (index + 1)) // 2
        
        # Check if the number of digits of the triangular number is n
        if int(math.log10(triangular_num)) + 1 == n:
            return count + 1
        
        # Increment the index and count
        index += 1
        count += 1

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-39<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_Index(math.pi) == 17
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert find_Index(4) == 45
assert find_Index(3) == 14
assert find_Index(2) == 4
assert find_Index(5) == 141
assert find_Index(6) == 447
assert find_Index(7) == 1414
assert find_Index(8) == 4472
assert find_Index(9) == 14142
assert find_Index(10) == 44721
assert find_Index(11) == 141421
assert find_Index(2) == 4
assert find_Index(3) == 14
assert find_Index(4) == 45
assert find_Index(5) == 141
assert find_Index(6) == 447
assert find_Index(7) == 1414
assert find_Index(8) == 4472
assert find_Index(9) == 14142
assert find_Index(10) == 44721
assert find_Index(11) == 141421
assert find_Index(12) == 447214
assert find_Index(13) == 1414214
assert find_Index(3) == 14
assert find_Index(4) == 45
assert find_Index(5) == 141
assert find_Index(2) == 4
assert find_Index(6) == 447
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import math 

def find_Index(n):
    count = 0
    index = 1
    while True:
        triangular_num = (index * (index + 1)) // 2
        if int(math.log10(triangular_num)) + 1 >= n:
            return count + 1
        index += 1
        count += 1
```
