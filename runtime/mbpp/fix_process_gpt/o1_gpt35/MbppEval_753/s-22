task_id:MbppEval/753
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def min_k(test_list, K):
    '''
    Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases
    '''
```

----------------------Assistant Message----------------------
```python
def min_k(test_list, K):
    '''
    Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases
    '''

    test_list.sort(key=lambda x: x[1])
    return [test_list[i] for i in range(K)]

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-13<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_k([(1, 2)],2) == [(1, 2)]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_k(test_list, K):
    '''
    Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases
    '''

    if len(test_list) < K:
        return test_list
    
    test_list.sort(key=lambda x: x[1])
    return [test_list[i] for i in range(K)]
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-36<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_k([(1, 2), (3, 4), (1, 1)],4) == [(1, 1), (1, 2), (3, 4)]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert min_k([(1, 2)],2) == [(1, 2)]
assert min_k([('gaurav', 12), ('akash', 10), ('anand', 14), ('akhil', 25), ('ashish', 30), ('suraj', 20)],5) == [('akash', 10), ('gaurav', 12), ('anand', 14), ('suraj', 20), ('akhil', 25)]
assert min_k([(2, 4), (1, 3), (5, 7), (6, 2)],1) == [(6, 2)]
assert min_k([(2, 4), (1, 3), (5, 7), (6, 2)],2) == [(6, 2), (1, 3)]
assert min_k([(-1, 2), (-3, -4), (1, -1)],2) == [(-3, -4), (1, -1)]
assert min_k([(5, 2), (3, 4), (1, -1)],2) == [(1, -1), (5, 2)]
assert min_k([(1, 2), (3, 4), (1, -1), (0, 0), (2, 2)],5) == [(1, -1), (0, 0), (1, 2), (2, 2), (3, 4)]
assert min_k([(1, 2), (3, 4), (1, -1), (0, 0), (2, 2)],3) == [(1, -1), (0, 0), (1, 2)]
assert min_k([(1, 2), (3, 4), (1, 1)],2) == [(1, 1), (1, 2)]
assert min_k([(1, 2), (3, 4), (2, 1)],2) == [(2, 1), (1, 2)]
assert min_k([(1, 2), (2, 4), (1, 1)],2) == [(1, 1), (1, 2)]
assert min_k([(1, 2), (3, 4), (1, 1)],3) == [(1, 1), (1, 2), (3, 4)]
assert min_k([(1, 2), (3, 4), (1, 1)],1) == [(1, 1)]
assert min_k([(1, 2), (3, 1), (1, 1)],2) == [(3, 1), (1, 1)]
assert min_k([(1, 2), (3, 4), (1, -1), (0, 0)],3) == [(1, -1), (0, 0), (1, 2)]
assert min_k([(1, 2), (3, 4), (1, -1), (0, 0)],2) == [(1, -1), (0, 0)]
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_k(test_list, K):
    if len(test_list) < K:
        return test_list
    
    test_list.sort(key=lambda x: x[1])
    return [test_list[i] for i in range(K)]
```
