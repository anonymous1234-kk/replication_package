task_id:MbppEval/83
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def get_Char(strr):  
    '''
    Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.
    '''
```

----------------------Assistant Message----------------------
```python
def get_Char(strr):  
    '''
    Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.
    '''

    # Find the sum of ASCII values of all characters in the string
    ascii_sum = sum([ord(char) for char in strr])
    
    # Calculate the modulo 26 of the ASCII sum
    char_value = ascii_sum % 26
    
    # Convert the integer ASCII value to character and return it
    return chr(char_value + 65)  # Adding 65 to get the capital letter corresponding to the ASCII value

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-0<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert get_Char('abc') == i
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def get_Char(strr):  
    '''
    Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.
    '''

    # Find the sum of ASCII values of all characters in the string
    ascii_sum = sum([ord(char) for char in strr])
    
    # Calculate the modulo 26 of the ASCII sum
    char_value = ascii_sum % 26
    
    # Convert the integer ASCII value to character and return it
    return chr(char_value + 97)  # Adding 97 to get the lowercase letter corresponding to the ASCII value
```
