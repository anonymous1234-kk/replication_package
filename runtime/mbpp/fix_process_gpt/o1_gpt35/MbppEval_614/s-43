task_id:MbppEval/614
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def cummulative_sum(test_list):
    '''
    Write a function to find the cumulative sum of all the values that are present in the given tuple list.
    '''
```

----------------------Assistant Message----------------------
```python
def cummulative_sum(test_list):
    '''
    Write a function to find the cumulative sum of all the values that are present in the given tuple list.
    '''

    # Initializing the result list with the first element of the input list
    res = [test_list[0]]

    # Looping through the input list starting from the second element
    for i in range(1, len(test_list)):
        # Adding the current element to the previous element in the result list
        res.append(test_list[i] + res[i - 1])

    # Returning the result list
    return res

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-10<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert cummulative_sum([(1, 2), (3, 4), (5, 6)]) == [1, 3, 6, 10, 15, 21]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def cummulative_sum(test_list):
    '''
    Write a function to find the cumulative sum of all the values that are present in the given tuple list.
    '''

    # Initializing the result list with the first element of the input list
    res = [test_list[0][0], test_list[0][1]]

    # Looping through the input list starting from the second element
    for i in range(1, len(test_list)):
        # Adding the current element to the previous element in the result list
        res.append(test_list[i][0] + res[i * 2 - 1])
        res.append(test_list[i][1] + res[i * 2])

    # Returning the result list
    return res

assert cummulative_sum([(1, 2), (3, 4), (5, 6)]) == [1, 3, 6, 10, 15, 21]
```
