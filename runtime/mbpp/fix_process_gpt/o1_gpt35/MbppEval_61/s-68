task_id:MbppEval/61
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
from collections import defaultdict
def count_Substrings(s):
    '''
    Write a python function to count the number of substrings with the sum of digits equal to their length.
    '''
```

----------------------Assistant Message----------------------
```python
from collections import defaultdict
def count_Substrings(s):
    '''
    Write a python function to count the number of substrings with the sum of digits equal to their length.
    '''

    """
    Write a python function to count the number of substrings with the sum of digits equal to their length.
    """
    # Define variables
    count = 0
    sum_dict = defaultdict(int)
    n = len(s)

    # Loop through all possible substrings
    for i in range(n):
        for j in range(i+1, n+1):
            # Compute the sum of digits in the substring
            temp_sum = sum(int(x) for x in s[i:j])
            # Check if the sum of digits is equal to the length of the substring
            if temp_sum == (j-i):
                count += 1
                sum_dict[j] += 1

    # Print the number of substrings and their lengths
    print(f"Number of substrings: {count}")
    print(f"Lengths of substrings: {list(sum_dict.values())}")

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-4<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert count_Substrings('1234567') == 1
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
from collections import defaultdict
def count_Substrings(s):
    '''
    Write a python function to count the number of substrings with the sum of digits equal to their length.
    '''

    count = 0
    sum_dict = defaultdict(int)
    n = len(s)

    for i in range(n):
        for j in range(i+1, n+1):
            temp_sum = sum(int(x) for x in s[i:j])
            if temp_sum == (j-i):
                count += 1
                sum_dict[j-i] += 1

    return count
```
