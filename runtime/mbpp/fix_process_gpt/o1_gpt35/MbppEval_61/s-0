task_id:MbppEval/61
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
from collections import defaultdict
def count_Substrings(s):
    '''
    Write a python function to count the number of substrings with the sum of digits equal to their length.
    '''
```

----------------------Assistant Message----------------------
```python
from collections import defaultdict
def count_Substrings(s):
    '''
    Write a python function to count the number of substrings with the sum of digits equal to their length.
    '''

    # Define a dictionary to store the count of substrings
    count_dict = defaultdict(int)
  
    # Initialize variables
    total_count = 0
    curr_sum = 0

    # Loop through the string characters
    for char in s:
        # Convert the character to an integer
        num = int(char)

        # Calculate the current sum of digits
        curr_sum += num

        # If the current sum is equal to the length of the substring so far,
        # increment the count of substrings with that sum of digits
        if curr_sum == len(str(total_count)):
            count_dict[curr_sum] += 1

        # Increment the total count of substrings with the desired property
        total_count += count_dict[curr_sum]

    # Return the total count of substrings with the desired property
    return total_count

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-0<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert count_Substrings('10') == 1
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert count_Substrings('1234567') == 1
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
from collections import defaultdict
def count_Substrings(s):
    '''
    Write a python function to count the number of substrings with the sum of digits equal to their length.
    '''

    # Define a dictionary to store the count of substrings
    count_dict = defaultdict(int)
  
    # Initialize variables
    total_count = 0
    curr_sum = 0

    # Loop through the string characters
    for char in s:
        # Convert the character to an integer
        num = int(char)

        # Calculate the current sum of digits
        curr_sum += num

        # If the current sum is equal to the length of the substring so far,
        # increment the count of substrings with that sum of digits
        if curr_sum == len(str(total_count)):
            count_dict[curr_sum] += 1

        # Increment the total count of substrings with the desired property
        total_count += count_dict[curr_sum]

    # Return the total count of substrings with the desired property
    return total_count
```
