task_id:MbppEval/595
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
```

----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''

    m = len(str1)
    n = len(str2)
    if m != n:
        return -1
    
    count = 0
    i = 0
    j = 0
    while i < n:
        j = i
        
        while str1[j] != str2[i]:
            j += 1
        
        while i < j:
            temp = str1[j]
            str1 = str1[:j] + str1[i:j] + str1[j+1:]
            str1 = str1[:i] + temp + str1[i+1:]
            j -= 1
            count += 1
        
        i += 1
    
    return count

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-26<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_Swaps('1101010','0011101') == 3
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''

    m = len(str1)
    n = len(str2)
    if m != n:
        return -1
    
    count = 0
    i = 0
    j = 0
    while i < n:
        j = i
        
        while str1[j] != str2[i]:
            j += 1
        
        while i < j:
            temp = str1[j]
            str1 = str1[:j] + str1[i:j] + str1[j+1:]
            str1 = str1[:i] + temp + str1[i+1:]
            j -= 1
            count += 1
        
        i += 1
    
    return count
```
