task_id:MbppEval/595
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
```

----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
 
    # Initialize variables to store the count of 0s and 1s in str1 and str2
    count_0s_str1 = 0
    count_1s_str1 = 0
    count_0s_str2 = 0
    count_1s_str2 = 0
    
    # Loop through the strings and count the number of 0s and 1s in each
    for i in range(len(str1)):
        if str1[i] == '0':
            count_0s_str1 += 1
        else:
            count_1s_str1 += 1
        
        if str2[i] == '0':
            count_0s_str2 += 1
        else:
            count_1s_str2 += 1
    
    # If the number of 0s and 1s in str1 and str2 is not equal, return -1
    if count_0s_str1 != count_0s_str2 or count_1s_str1 != count_1s_str2:
        return -1
    
    # Initialize variables to store the number of swaps required to convert str1 to str2
    swap_count = 0
    zero_count = 0
    
    # Loop through the strings and count the number of swaps required
    for i in range(len(str1)):
        if str1[i] != str2[i]:
            if str1[i] == '0':
                zero_count += 1
            else:
                swap_count += zero_count
    
    # Return the total number of swaps required
    return swap_count

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-26<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_Swaps('1101010','0011101') == 3
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
 
    # Initialize variables to store the count of 0s and 1s in str1 and str2
    count_0s_str1 = 0
    count_1s_str1 = 0
    count_0s_str2 = 0
    count_1s_str2 = 0
    
    # Loop through the strings and count the number of 0s and 1s in each
    for i in range(len(str1)):
        if str1[i] == '0':
            count_0s_str1 += 1
        else:
            count_1s_str1 += 1
        
        if str2[i] == '0':
            count_0s_str2 += 1
        else:
            count_1s_str2 += 1
    
    # If the number of 0s and 1s in str1 and str2 is not equal, return -1
    if count_0s_str1 != count_0s_str2 or count_1s_str1 != count_1s_str2:
        return -1
    
    # Initialize variables to store the number of swaps required to convert str1 to str2
    swap_count = 0
    zero_count = 0
    
    # Loop through the strings and count the number of swaps required
    for i in range(len(str1)):
        if str1[i] != str2[i]:
            if str1[i] == '0':
                zero_count += 1
            else:
                swap_count += zero_count
    
    # Return the total number of swaps required
    return swap_count
```
