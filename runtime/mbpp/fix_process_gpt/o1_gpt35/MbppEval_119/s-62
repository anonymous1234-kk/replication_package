task_id:MbppEval/119
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''
```

----------------------Assistant Message----------------------
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''

    # Traverse through the array
    for i in range(0, len(arr), 2):
        # If the current element is not the same as the next element
        if i+1 >= len(arr) or arr[i] != arr[i+1]:
            # We found the element that appears only once
            return arr[i]

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-39<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert search([1, 1, 2, 2, 2, 3, 50, 50, 60, 60, 140, 150]) == 3
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''

    # Traverse through the array
    for i in range(0, len(arr), 2):
        # If the current element is not the same as the next element
        if i+1 >= len(arr) or arr[i] != arr[i+1]:
            # We found the element that appears only once
            return arr[i]
    return None
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-35<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert search([1, 1, 2, 2, 2, 3, 3, 50, 50, 60, 60, 140]) == 140
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert search([1, 1, 2, 2, 3, 3, 50, 50, 60, 60, 140]) == 140
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''

    # Initialize variables
    low = 0
    high = len(arr) - 1

    # Perform binary search
    while low < high:
        mid = (low + high) // 2

        # Check if mid element is unique
        if arr[mid] != arr[mid - 1] and arr[mid] != arr[mid + 1]:
            return arr[mid]

        # Check if mid element is equal to the element on its left
        if arr[mid] == arr[mid - 1]:
            # If mid is even, unique element is on the right side
            if mid % 2 == 0:
                low = mid + 1
            # If mid is odd, unique element is on the left side
            else:
                high = mid - 1

        # Check if mid element is equal to the element on its right
        elif arr[mid] == arr[mid + 1]:
            # If mid is even, unique element is on the left side
            if mid % 2 == 0:
                high = mid - 1
            # If mid is odd, unique element is on the right side
            else:
                low = mid + 1

    # If no unique element is found, return the last element
    return arr[low]
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-38<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert search([1, 1, 2, 2, 2, 3, 50, 50, 60, 60, 140, 140, 150]) == [3, 150]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert search([1, 1, 2, 2, 3, 3, 50, 50, 60, 60, 140]) == 140
assert search([1, 1, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8]) == 2
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def search(arr):
    for i in range(0, len(arr), 2):
        if i+1 >= len(arr) or arr[i] != arr[i+1]:
            return arr[i]
    return arr[-1] if len(arr) > 0 else None
```
