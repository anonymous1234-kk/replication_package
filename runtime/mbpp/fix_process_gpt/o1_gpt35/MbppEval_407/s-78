task_id:MbppEval/407
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def rearrange_bigger(n):
    '''
    Write a function to create the next bigger number by rearranging the digits of a given number.
    '''
```

----------------------Assistant Message----------------------
```python
def rearrange_bigger(n):
    '''
    Write a function to create the next bigger number by rearranging the digits of a given number.
    '''

    num = list(str(n))
    for i in range(len(num) - 2, -1, -1):
        if num[i] < num[i + 1]:
            index = i + 1 + num[i + 1:].index(max(filter(lambda x: x > num[i], num[i + 1:]))))
            num[i], num[index] = num[index], num[i]
            num[i + 1:] = sorted(num[i + 1:])
            return int(''.join(num))
    return -1

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-1<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert rearrange_bigger(123) == 132
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def rearrange_bigger(n):
    '''
    Write a function to create the next bigger number by rearranging the digits of a given number.
    '''

    num = list(str(n))
    for i in range(len(num) - 2, -1, -1):
        if num[i] < num[i + 1]:
            index = i + 1 + num[i + 1:].index(max(filter(lambda x: x > num[i], num[i + 1:])))
            num[i], num[index] = num[index], num[i]
            num[i + 1:] = sorted(num[i + 1:])
            return int(''.join(num))
    return -1

```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-2<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert rearrange_bigger(132) == 213
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert rearrange_bigger(123) == 132
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def rearrange_bigger(n):
    '''
    Write a function to create the next bigger number by rearranging the digits of a given number.
    '''

    num = list(str(n))
    for i in range(len(num) - 2, -1, -1):
        if num[i] < num[i + 1]:
            index = i + 1 + num[i + 1:].index(max(filter(lambda x: x > num[i], num[i + 1:])))
            num[i], num[index] = num[index], num[i]
            num[i + 1:] = sorted(num[i + 1:])
            return int(''.join(num))
    return -1
```
