task_id:MbppEval/138
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def is_Sum_Of_Powers_Of_Two(n): 
    '''
    Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.
    '''
```

----------------------Assistant Message----------------------
```python
def is_Sum_Of_Powers_Of_Two(n): 
    '''
    Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.
    '''

    # Check if the number is positive
    if n <= 0:
        return False
    # Convert the number to binary representation
    bin_n = bin(n)[2:]
    # Check if the binary representation of the number is made up of only 1s
    if bin_n.count('1') == 1:
        return True
    # Check if the binary representation of the number has only one 1 and the rest are 0s
    elif bin_n.count('1') == 1 and bin_n.count('0') == len(bin_n) - 1:
        return True
    # Check if the number can be represented as the sum of non-zero powers of 2
    else:
        for i in range(len(bin_n)):
            if bin_n[i] == '1':
                if (2 ** (len(bin_n) - i - 1)) <= n:
                    n -= 2 ** (len(bin_n) - i - 1)
                if n == 0:
                    return True
        return False

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-5<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert is_Sum_Of_Powers_Of_Two(11) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def is_Sum_Of_Powers_Of_Two(n): 
    '''
    Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.
    '''

    # Check if the number is positive
    if n <= 0:
        return False
    # Convert the number to binary representation
    bin_n = bin(n)[2:]
    # Check if the binary representation of the number is made up of only 1s
    if bin_n.count('1') == 1 and bin_n.count('0') == len(bin_n) - 1:
        return True
    # Check if the number can be represented as the sum of non-zero powers of 2
    else:
        for i in range(len(bin_n)):
            if bin_n[i] == '1':
                if (2 ** (len(bin_n) - i - 1)) <= n:
                    n -= 2 ** (len(bin_n) - i - 1)
                if n == 0:
                    return True
        return False
```
