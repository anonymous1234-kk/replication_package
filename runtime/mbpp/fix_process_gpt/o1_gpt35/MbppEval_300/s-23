task_id:MbppEval/300
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def count_binary_seq(n): 
    '''
    Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.
    '''
```

----------------------Assistant Message----------------------
```python
def count_binary_seq(n): 
    '''
    Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.
    '''

    def count_util(sum_so_far, i):
        if i == 2*n:
            if sum_so_far == 0:
                return 1
            else:
                return 0
        else:
            if sum_so_far == 0:
                return 2 * count_util(1, i+1)
            else:
                return count_util(sum_so_far+1, i+1) + count_util(sum_so_far-1, i+1)

    return count_util(0, 0)

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-22<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert count_binary_seq(12) == 2704156
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def count_binary_seq(n): 
    '''
    Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.
    '''

    def count_util(sum_so_far, i):
        if i == 2*n:
            if sum_so_far == 0:
                return 1
            else:
                return 0
        else:
            if sum_so_far == 0:
                return 2 * count_util(1, i+1)
            elif sum_so_far == 1:
                return count_util(sum_so_far+1, i+1) + count_util(sum_so_far-1, i+1)
            else:
                return count_util(sum_so_far+1, i+1)

    return count_util(0, 0)
```
