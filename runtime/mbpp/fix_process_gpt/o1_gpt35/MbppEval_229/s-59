task_id:MbppEval/229
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def re_arrange_array(arr, n):
    '''
    Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.
    '''
```

----------------------Assistant Message----------------------
```python
def re_arrange_array(arr, n):
    '''
    Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.
    '''

    # Create empty lists for negative and positive integers
    neg_list = []
    pos_list = []
    
    # Sort integers into negative and positive lists
    for i in range(n):
        if arr[i] < 0:
            neg_list.append(arr[i])
        else:
            pos_list.append(arr[i])
    
    # Copy negative integers back into original array
    j = 0
    for i in range(len(neg_list)):
        arr[j] = neg_list[i]
        j += 1
    
    # Copy positive integers back into original array
    for i in range(len(pos_list)):
        arr[j] = pos_list[i]
        j += 1

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-39<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert re_arrange_array([1, 2, 3, -1, 2],1) == [1, 2, 3, -1, 2]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def re_arrange_array(arr, n):
    neg_list = []
    pos_list = []
    for i in range(n):
        if arr[i] < 0:
            neg_list.append(arr[i])
        else:
            pos_list.append(arr[i])
    j = 0
    for i in range(len(neg_list)):
        arr[j] = neg_list[i]
        j += 1
    for i in range(len(pos_list)):
        arr[j] = pos_list[i]
        j += 1
    return arr
```
