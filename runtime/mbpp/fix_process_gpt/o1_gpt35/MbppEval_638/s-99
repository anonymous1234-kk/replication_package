task_id:MbppEval/638
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import math
def wind_chill(v,t):
    '''
    Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.
    '''
```

----------------------Assistant Message----------------------
```python
import math
def wind_chill(v,t):
    '''
    Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.
    '''

    '''
    Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.
    '''
    # Calculate the wind chill index
    wci = 13.12 + 0.6215 * t - 11.37 * math.pow(v, 0.16) + 0.3965 * t * math.pow(v, 0.16)
    
    # Round the wind chill index to the next integer
    wci = math.ceil(wci)
    
    # Return the wind chill index
    return wci

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-11<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert wind_chill(30,-5) == -13
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert wind_chill(8,15) == 15
assert wind_chill(10,10) == 9
assert wind_chill(10,15) == 15
assert wind_chill(25,5) == 1
assert wind_chill(40,0) == -7
assert wind_chill(15,10) == 8
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import math

def wind_chill(v, t):
    wci = 13.12 + 0.6215 * t - 11.37 * math.pow(v, 0.16) + 0.3965 * t * math.pow(v, 0.16)
    wci = round(wci)
    return wci
```
