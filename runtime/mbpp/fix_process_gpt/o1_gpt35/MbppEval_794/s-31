task_id:MbppEval/794
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import re
def text_starta_endb(text):
    '''
    Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.
    '''
```

----------------------Assistant Message----------------------
```python
import re
def text_starta_endb(text):
    '''
    Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.
    '''

    '''
    Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.
    '''
    pattern = re.compile(r'a.+b$')
    return pattern.match(text) is not None

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-7<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert text_starta_endb('ab') == True
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert text_starta_endb('abab') == True
assert text_starta_endb('acb') == True
assert text_starta_endb('acbacab') == True
assert text_starta_endb('aab') == True
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import re
def text_starta_endb(text):
    '''
    Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.
    '''

    pattern = re.compile(r'a.+?b$')
    return pattern.match(text) is not None
```
