task_id:MbppEval/164
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import math 
def div_sum(n): 
    '''
    Write a function to determine if the sum of the divisors of two integers are the same.
    '''
```

----------------------Assistant Message----------------------
```python
import math 
def div_sum(n): 
    '''
    Write a function to determine if the sum of the divisors of two integers are the same.
    '''
 
    sum1=1
    i=2
    while i<=math.sqrt(n):
        if (n%i==0):
            sum1=sum1+i
            if (n/i!=i):
                sum1=sum1+n/i
        i=i+1
    return sum1

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-24<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert div_sum(5020) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import math 
def div_sum(n): 
    '''
    Write a function to determine if the sum of the divisors of two integers are the same.
    '''
 
    sum1=1
    i=2
    while i<=math.sqrt(n):
        if (n%i==0):
            sum1=sum1+i
            if (n/i!=i):
                sum1=sum1+n/i
        i=i+1
    if sum1 == n:
        return True
    else:
        return False
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-25<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert div_sum(6232) == 6368
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert div_sum(5020) == False
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import math 

def div_sum(n): 
    sum1 = 1
    i = 2
    
    while i <= math.sqrt(n):
        if (n % i == 0):
            sum1 = sum1 + i
            if (n / i != i):
                sum1 = sum1 + n / i
        i = i + 1
    
    if sum1 == n:
        return True
    else:
        return False
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-28<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert div_sum(17296) == 18416
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert div_sum(5020) == False
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import math 
def div_sum(n): 
    '''
    Write a function to determine if the sum of the divisors of two integers are the same.
    '''
 
    def sum_divisors(m):
        sum_div = 1
        i = 2
        while i <= math.sqrt(m):
            if m % i == 0:
                sum_div += i
                if m / i != i:
                    sum_div += m / i
            i += 1
        return sum_div
    
    sum1 = sum_divisors(n)
    sum2 = sum_divisors(sum1)
    
    if sum2 == n and sum1 != sum2:
        return True
    else:
        return False
```
