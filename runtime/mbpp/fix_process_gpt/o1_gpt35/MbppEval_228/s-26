task_id:MbppEval/228
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''
```

----------------------Assistant Message----------------------
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''

    # Left shift 1 to (r-l+1) times and subtract 1 from it.
    # This will create a number with (r-l+1) bits set.
    # Then left shift the resulting number by l-1 times to create a mask.
    mask = ((1 << (r-l+1)) - 1) << (l-1)

    # Perform AND operation between the mask and the given number.
    # If the result is 0, then all the bits in the given range are unset.
    return (n & mask) == 0

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-9<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert all_Bits_Set_In_The_Given_Range(9,0,3) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''

    # Left shift 1 to (r-l+1) times and subtract 1 from it.
    # This will create a number with (r-l+1) bits set.
    # Then left shift the resulting number by l-1 times to create a mask.
    mask = ((1 << (r-l+1)) - 1) << (l-1)

    # Perform AND operation between the mask and the given number.
    # If the result is equal to the mask, then all the bits in the given range are unset.
    return (n & mask) == mask
```
