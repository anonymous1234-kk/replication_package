task_id:MbppEval/228
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''
```

----------------------Assistant Message----------------------
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''

    # Left shift '1' by 'r' times and subtract '1' from it
    # This will create a number with 'r' bits set, starting from the rightmost bit
    # For example, if r = 5, then (1 << r) - 1 = 31, which is 0b11111
    # Then, left shift this number by 'l-1' times to create a range of bits to be checked
    # For example, if l = 3, then (1 << r) - 1 = 31, and (31 << (l-1)) = 0b11100
    mask = ((1 << r) - 1) << (l-1)

    # If bitwise AND of 'n' and 'mask' is zero, then all the bits in the range are unset
    if n & mask == 0:
        return True
    else:
        return False

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-9<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert all_Bits_Set_In_The_Given_Range(9,0,3) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''

    mask = ((1 << (r+1)) - 1) ^ ((1 << l) - 1)

    if n & mask == 0:
        return True
    else:
        return False

```
