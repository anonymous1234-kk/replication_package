task_id:MbppEval/228
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''
```

----------------------Assistant Message----------------------
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''

    # Left shift 1 by (r-l+1) bits and subtract 1 from it to get a number with all bits set in the range
    # For example, if l=3 and r=6, (1<<(6-3+1))-1 would give 0b1111 which is 15 in decimal
    all_set = (1 << (r - l + 1)) - 1
    
    # Left shift 1 by l-1 bits to get a number with only the bit at position l set and AND it with n
    # For example, if l=3, (1<<(3-1)) would give 0b100 which is 4 in decimal
    # If n has the bit at position l set, the result of the AND operation would be non-zero
    # If n doesn't have the bit at position l set, the result of the AND operation would be zero
    # If the result of the AND operation is non-zero, it means that not all bits in the range are unset
    return (n & (1 << (l - 1))) == 0 and (n & all_set) == 0

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-9<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert all_Bits_Set_In_The_Given_Range(9,0,3) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def all_Bits_Set_In_The_Given_Range(n,l,r):  
    '''
    Write a python function to check whether all the bits are unset in the given range or not.
    '''

    # Left shift 1 by (r-l+1) bits and subtract 1 from it to get a number with all bits set in the range
    # For example, if l=3 and r=6, (1<<(6-3+1))-1 would give 0b1111 which is 15 in decimal
    all_set = (1 << (r - l + 1)) - 1
    
    # Left shift 1 by l-1 bits to get a number with only the bit at position l set and AND it with n
    # For example, if l=3, (1<<(3-1)) would give 0b100 which is 4 in decimal
    # If n has the bit at position l set, the result of the AND operation would be non-zero
    # If n doesn't have the bit at position l set, the result of the AND operation would be zero
    # If the result of the AND operation is non-zero, it means that not all bits in the range are unset
    return (n & (1 << (l - 1))) == 0 and (n & all_set) == all_set
```
