task_id:MbppEval/558
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def digit_distance_nums(n1, n2):
    '''
    Write a python function to find the sum of the per-digit difference between two integers.
    '''
```

----------------------Assistant Message----------------------
```python
def digit_distance_nums(n1, n2):
    '''
    Write a python function to find the sum of the per-digit difference between two integers.
    '''

    # Convert integers to strings
    str1 = str(n1)
    str2 = str(n2)
    # Initialize sum of per-digit differences to 0
    sum_diff = 0
    # Loop through each character in the strings
    for i in range(len(str1)):
        # Calculate the absolute difference between the corresponding characters in the two strings
        diff = abs(int(str1[i]) - int(str2[i]))
        # Add the difference to the sum
        sum_diff += diff
    # Return the sum of per-digit differences
    return sum_diff

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-3<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert digit_distance_nums(2000,489) == 23
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert digit_distance_nums(234,489) == 12
assert digit_distance_nums(200,489) == 19
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def digit_distance_nums(n1, n2):
    '''
    Write a python function to find the sum of the per-digit difference between two integers.
    '''

    # Convert integers to strings
    str1 = str(n1)
    str2 = str(n2)
    # Initialize sum of per-digit differences to 0
    sum_diff = 0
    # Calculate the maximum length between the two strings
    max_len = max(len(str1), len(str2))
    # Pad the shorter string with leading zeros to match the length of the longer string
    str1 = str1.zfill(max_len)
    str2 = str2.zfill(max_len)
    # Loop through each character in the strings
    for i in range(len(str1)):
        # Calculate the absolute difference between the corresponding characters in the two strings
        diff = abs(int(str1[i]) - int(str2[i]))
        # Add the difference to the sum
        sum_diff += diff
    # Return the sum of per-digit differences
    return sum_diff
```
