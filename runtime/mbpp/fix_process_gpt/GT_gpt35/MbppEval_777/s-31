task_id:MbppEval/777
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''
```

----------------------Assistant Message----------------------
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''

    # create an empty set to store the repeated elements
    repeated_elements = set()
    
    # create a variable to store the sum of non-repeated elements
    sum_of_non_repeated = 0
    
    # iterate over each element in the array
    for element in arr:
        
        # if the element is not repeated
        if arr.count(element) == 1:
            # add it to the sum_of_non_repeated
            sum_of_non_repeated += element
        else:
            # add the element to the repeated_elements set
            repeated_elements.add(element)
    
    # subtract the sum of repeated elements from the sum of non-repeated elements
    final_sum = sum_of_non_repeated - sum(repeated_elements)
    
    # return the final_sum
    return final_sum

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-2<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_sum([1, 2, 2, 3, 3, 4, 4, 5]) == 15
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''

    repeated_elements = set()
    sum_of_non_repeated = 0
    
    for element in arr:
        if arr.count(element) == 1 and element not in repeated_elements:
            sum_of_non_repeated += element
        else:
            repeated_elements.add(element)
    
    final_sum = sum_of_non_repeated - sum(repeated_elements)
    
    return final_sum
```
