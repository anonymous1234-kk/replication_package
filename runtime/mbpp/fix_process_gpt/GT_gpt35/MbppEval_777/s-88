task_id:MbppEval/777
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''
```

----------------------Assistant Message----------------------
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''
 
    non_repeated = []            # list to store non-repeated elements
    repeated = []                # list to store repeated elements
    for i in arr:                # iterate through the elements of the array
        if i not in non_repeated:   # check if the element is not already in the non_repeated list
            non_repeated.append(i)  # add the element to the non_repeated list
        elif i in non_repeated:     # if the element is already in the non_repeated list
            non_repeated.remove(i)  # remove it from the list of non-repeated elements
            repeated.append(i)      # and add it to the list of repeated elements
    return sum(non_repeated)          # return the sum of non-repeated elements

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-2<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_sum([1, 2, 2, 3, 3, 4, 4, 5]) == 15
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''
 
    non_repeated = []            # list to store non-repeated elements
    repeated = []                # list to store repeated elements
    for i in arr:                # iterate through the elements of the array
        if i not in non_repeated and i not in repeated:   # check if the element is not already in the non_repeated or repeated list
            non_repeated.append(i)  # add the element to the non_repeated list
        elif i in non_repeated:     # if the element is already in the non_repeated list
            non_repeated.remove(i)  # remove it from the list of non-repeated elements
            repeated.append(i)      # and add it to the list of repeated elements
    return sum(non_repeated)          # return the sum of non-repeated elements

assert find_sum([1, 2, 2, 3, 3, 4, 4, 5]) == 15
```
