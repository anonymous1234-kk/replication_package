task_id:MbppEval/777
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''
```

----------------------Assistant Message----------------------
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''

    # Create an empty set to store the repeated elements
    repeated = set()
    # Create a variable to store the sum of non-repeated elements
    result = 0
    # Iterate through the elements in the list
    for num in arr:
        # Check if the element has already been repeated
        if num not in repeated:
            # Check if the element is non-repeated
            if arr.count(num) == 1:
                # Add the non-repeated element to the result
                result += num
            # If the element is repeated, add it to the repeated set
            else:
                repeated.add(num)
    # Return the sum of non-repeated elements
    return result

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-2<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_sum([1, 2, 2, 3, 3, 4, 4, 5]) == 15
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def find_sum(arr): 
    '''
    Write a python function to find the sum of non-repeated elements in a given list.
    '''

    repeated = set()
    result = 0
    for num in arr:
        if num not in repeated:
            if arr.count(num) == 1:
                result += num
            else:
                repeated.add(num)
    return result
```
