task_id:MbppEval/108
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import heapq
def merge_sorted_list(num1,num2,num3):
    '''
    Write a function to merge three lists into a single sorted list.
    '''
```

----------------------Assistant Message----------------------
```python
import heapq
def merge_sorted_list(num1,num2,num3):
    '''
    Write a function to merge three lists into a single sorted list.
    '''

    result = []
    heapq.heapify(num1)
    heapq.heapify(num2)
    heapq.heapify(num3)

    while num1 or num2 or num3:
        smallest = None
        if num1:
            smallest = num1[0]
        if num2:
            if smallest is None or num2[0] < smallest:
                smallest = num2[0]
        if num3:
            if smallest is None or num3[0] < smallest:
                smallest = num3[0]

        if smallest == num1[0]:
            heapq.heappop(num1)
        elif smallest == num2[0]:
            heapq.heappop(num2)
        elif smallest == num3[0]:
            heapq.heappop(num3)

        result.append(smallest)

    return result

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-15<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert merge_sorted_list([2, 3, 4, 5, 6, 7, 8, 9, 10],[],[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import heapq
def merge_sorted_list(num1,num2,num3):
    result = []
    heapq.heapify(num1)
    heapq.heapify(num2)
    heapq.heapify(num3)

    while num1 or num2 or num3:
        smallest = None
        if num1:
            smallest = num1[0]
        if num2 and (smallest is None or num2[0] < smallest):
            smallest = num2[0]
        if num3 and (smallest is None or num3[0] < smallest):
            smallest = num3[0]

        if smallest == num1[0]:
            heapq.heappop(num1)
        elif smallest == num2[0]:
            heapq.heappop(num2)
        elif smallest == num3[0]:
            heapq.heappop(num3)

        result.append(smallest)

    return result
```
