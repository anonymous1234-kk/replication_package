task_id:MbppEval/4
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import heapq as hq
def heap_queue_largest(nums,n):
    '''
    Write a function to find the n largest integers from a given list of numbers, returned in descending order.
    '''
```

----------------------Assistant Message----------------------
```python
import heapq as hq
def heap_queue_largest(nums,n):
    '''
    Write a function to find the n largest integers from a given list of numbers, returned in descending order.
    '''

    largest_nums = []
    for num in nums:
        # Check if the list of largest numbers is smaller than n or if the current number is larger than the smallest number in the heap
        if len(largest_nums) < n or num > largest_nums[0]:
            # Add the current number to the heap of largest numbers
            hq.heappush(largest_nums, num)
            # If the heap of largest numbers is larger than n, remove the smallest number
            if len(largest_nums) > n:
                hq.heappop(largest_nums)
    # Return the largest n numbers in descending order
    return sorted(largest_nums, reverse=True)

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-45<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert heap_queue_largest([10, 20, -30, -50, 60, 70],-1) == []
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert heap_queue_largest([1],2) == [1]
assert heap_queue_largest([],2) == []
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import heapq as hq
def heap_queue_largest(nums,n):
    '''
    Write a function to find the n largest integers from a given list of numbers, returned in descending order.
    '''

    largest_nums = []
    if n <= 0:
        return []

    for num in nums:
        if len(largest_nums) < n or num > largest_nums[0]:
            hq.heappush(largest_nums, num)
            if len(largest_nums) > n:
                hq.heappop(largest_nums)
    return sorted(largest_nums, reverse=True)
```
