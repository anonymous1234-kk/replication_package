task_id:MbppEval/391
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def convert_list_dictionary(l1, l2, l3):
    '''
    Write a function to convert more than one list to nested dictionary.
    '''
```

----------------------Assistant Message----------------------
```python
def convert_list_dictionary(l1, l2, l3):
    '''
    Write a function to convert more than one list to nested dictionary.
    '''

    '''
    Write a function to convert more than one list to nested dictionary.
    '''
    # Use zip() function to combine lists into a list of tuples.
    # Create an empty dictionary to store the result.
    # Iterate over the list of tuples and unpack them into variables.
    # Assign a key-value pair to the inner dictionary for each tuple.
    # Assign the inner dictionary to the outer dictionary using the outer key.
    # Return the outer dictionary.
    
    # Example:
    # Input: l1 = ["a", "b", "c"], l2 = [1, 2, 3], l3 = ["x", "y", "z"]
    # Output: {'a': {1: 'x'}, 'b': {2: 'y'}, 'c': {3: 'z'}}
    
    return {key: {value1: value2} for key, value1, value2 in zip(l1, l2, l3)}

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-3<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert convert_list_dictionary([1, 2, 3],['hi'],['apple', 'banana', 'orange']) == [{1: {'hi': 'apple'}}]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
Here is the fixed code:
```python
def convert_list_dictionary(l1, l2, l3):
    return [{value1: {value2: value3}} for value1, value2, value3 in zip(l1, l2, l3)]
```
