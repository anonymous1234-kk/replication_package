task_id:MbppEval/598
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def armstrong_number(number):
    '''
    Write a function to check whether the given number is armstrong or not.
    '''
```

----------------------Assistant Message----------------------
```python
def armstrong_number(number):
    '''
    Write a function to check whether the given number is armstrong or not.
    '''

    '''
    Write a function to check whether the given number is armstrong or not.
    '''
    # Get the number of digits of the number
    num_digits = len(str(number))
    
    # Initialize the sum of cube of each digit to zero
    arm_sum = 0
    
    # Iterate through each digit of the number
    for digit in str(number):
        # Add the cube of the digit to the sum
        arm_sum += int(digit)**num_digits
        
    # Check if the sum is equal to the number
    if arm_sum == number:
        return True
    else:
        return False

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-21<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert armstrong_number(153.0) == True
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert armstrong_number(10) == False
assert armstrong_number(3) == True
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def armstrong_number(number):
    '''
    Write a function to check whether the given number is armstrong or not.
    '''

    '''
    Write a function to check whether the given number is armstrong or not.
    '''
    # Get the number of digits of the number
    num_digits = len(str(number))
    
    # Initialize the sum of cube of each digit to zero
    arm_sum = 0
    
    # Iterate through each digit of the number
    for digit in str(int(number)):
        # Add the cube of the digit to the sum
        arm_sum += int(digit)**num_digits
        
    # Check if the sum is equal to the number
    if arm_sum == int(number):
        return True
    else:
        return False

```
