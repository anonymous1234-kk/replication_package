task_id:MbppEval/791
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def remove_nested(test_tup):
    '''
    Write a function to remove tuples from the given tuple.
    '''
```

----------------------Assistant Message----------------------
```python
def remove_nested(test_tup):
    '''
    Write a function to remove tuples from the given tuple.
    '''

    # initialize an empty list to store non-tuple elements
    result = []
    
    # loop through each element of the tuple
    for item in test_tup:
        # check if the element is a tuple
        if isinstance(item, tuple):
            # if it is a tuple, loop through the elements of the tuple and add them to the result list
            for sub_item in item:
                result.append(sub_item)
        else:
            # if it is not a tuple, add it to the result list
            result.append(item)
    
    # return the final result as a tuple
    return tuple(result)

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-2<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert remove_nested(((1, 2), (3, 4, 5), 6)) == (6,)
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert remove_nested((1, 2, 3, 4, 5)) == (1, 2, 3, 4, 5)
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def remove_nested(test_tup):
    result = []
    for item in test_tup:
        if isinstance(item, tuple):
            for sub_item in item:
                result.append(sub_item)
        else:
            result.append(item)
    return tuple(result)
```
