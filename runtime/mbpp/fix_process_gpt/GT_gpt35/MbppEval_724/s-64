task_id:MbppEval/724
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def power_base_sum(base, power):
    '''
    Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.
    '''
```

----------------------Assistant Message----------------------
```python
def power_base_sum(base, power):
    '''
    Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.
    '''

    '''
    Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.
    '''
    # Convert base to string and iterate over each digit
    digits = [int(digit) for digit in str(base)]

    # Calculate the sum of digits raised to the power
    digit_sum = sum([digit**power for digit in digits])

    return digit_sum

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-1<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert power_base_sum(3,3) == 9
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def power_base_sum(base, power):
    digits = [int(digit) for digit in str(base)]
    digit_sum = sum([digit**power for digit in digits])
    return digit_sum
```
