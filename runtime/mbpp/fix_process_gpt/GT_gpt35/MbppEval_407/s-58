task_id:MbppEval/407
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def rearrange_bigger(n):
    '''
    Write a function to create the next bigger number by rearranging the digits of a given number.
    '''
```

----------------------Assistant Message----------------------
```python
def rearrange_bigger(n):
    '''
    Write a function to create the next bigger number by rearranging the digits of a given number.
    '''

    num = [int(x) for x in str(n)]
    i = len(num) - 1
    
    # Find the first digit that is smaller than the digit next to it
    while i > 0 and num[i - 1] >= num[i]:
        i -= 1
    
    if i == 0:
        return -1
    
    j = len(num) - 1
    
    # Find the smallest digit to the right of the first digit found earlier
    while num[j] <= num[i - 1]:
        j -= 1
    
    # Swap the two digits
    num[i - 1], num[j] = num[j], num[i - 1]
    
    # Reverse the digits to the right of the first digit found earlier
    num[i:] = reversed(num[i:])
    
    return int(''.join(map(str, num)))

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-6<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert rearrange_bigger(999999999) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert rearrange_bigger(123) == 132
assert rearrange_bigger(132) == 213
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def rearrange_bigger(n):
    '''
    Write a function to create the next bigger number by rearranging the digits of a given number.
    '''

    num = [int(x) for x in str(n)]
    i = len(num) - 1
    
    # Find the first digit that is smaller than the digit next to it
    while i > 0 and num[i - 1] >= num[i]:
        i -= 1
    
    if i == 0:
        return False
    
    j = len(num) - 1
    
    # Find the smallest digit to the right of the first digit found earlier
    while num[j] <= num[i - 1]:
        j -= 1
    
    # Swap the two digits
    num[i - 1], num[j] = num[j], num[i - 1]
    
    # Reverse the digits to the right of the first digit found earlier
    num[i:] = reversed(num[i:])
    
    return int(''.join(map(str, num)))

```
