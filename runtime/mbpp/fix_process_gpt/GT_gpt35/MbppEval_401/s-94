task_id:MbppEval/401
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def add_nested_tuples(test_tup1, test_tup2):
    '''
    Write a function to perform index wise addition of tuple elements in the given two nested tuples.
    '''
```

----------------------Assistant Message----------------------
```python
def add_nested_tuples(test_tup1, test_tup2):
    '''
    Write a function to perform index wise addition of tuple elements in the given two nested tuples.
    '''

    res = ()
    for i in range(len(test_tup1)):
        inner_res = ()
        for j in range(len(test_tup1[i])):
            inner_res += (test_tup1[i][j] + test_tup2[i][j],)
        res += (inner_res,)
    return res

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-47<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert add_nested_tuples((4, 5),()) == ()
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert add_nested_tuples((('a', 'b'), ('c', 'd')),(('e', 'f'), ('g', 'h'))) == (('ae', 'bf'), ('cg', 'dh'))
assert add_nested_tuples((((1, 2, 3), (4, 5, 6)), ((7, 8, 9), (10, 11, 12))),(((13, 14, 15), (16, 17, 18)), ((19, 20, 21), (22, 23, 24)))) == (((1, 2, 3, 13, 14, 15), (4, 5, 6, 16, 17, 18)), ((7, 8, 9, 19, 20, 21), (10, 11, 12, 22, 23, 24)))
assert add_nested_tuples((((1, 2), (3, 4)), ((5, 6), (7, 8))),(((9, 10), (11, 12)), ((13, 14), (15, 16)))) == (((1, 2, 9, 10), (3, 4, 11, 12)), ((5, 6, 13, 14), (7, 8, 15, 16)))
assert add_nested_tuples((((11, 22), (33, 44)), ((55, 66), (77, 88))),(((99, 100), (111, 122)), ((133, 144), (155, 166)))) == (((11, 22, 99, 100), (33, 44, 111, 122)), ((55, 66, 133, 144), (77, 88, 155, 166)))
assert add_nested_tuples((((1, 2, 3, 4), (5, 6, 7, 8)), ((9, 10, 11, 12), (13, 14, 15, 16))),(((17, 18, 19, 20), (21, 22, 23, 24)), ((25, 26, 27, 28), (29, 30, 31, 32)))) == (((1, 2, 3, 4, 17, 18, 19, 20), (5, 6, 7, 8, 21, 22, 23, 24)), ((9, 10, 11, 12, 25, 26, 27, 28), (13, 14, 15, 16, 29, 30, 31, 32)))
assert add_nested_tuples((((1, 2, 3, 4, 5), (6, 7, 8, 9, 10)), ((11, 12, 13, 14, 15), (16, 17, 18, 19, 20))),(((21, 22, 23, 24, 25), (26, 27, 28, 29, 30)), ((31, 32, 33, 34, 35), (36, 37, 38, 39, 40)))) == (((1, 2, 3, 4, 5, 21, 22, 23, 24, 25), (6, 7, 8, 9, 10, 26, 27, 28, 29, 30)), ((11, 12, 13, 14, 15, 31, 32, 33, 34, 35), (16, 17, 18, 19, 20, 36, 37, 38, 39, 40)))
assert add_nested_tuples([(2, 3), (4, 5)],[(1, 2), (3, 4)]) == ((3, 5), (7, 9))
assert add_nested_tuples([(3, 5), (5, 9)],[(1, 2), (3, 4)]) == ((4, 7), (8, 13))
assert add_nested_tuples([(2, 3, 4), (4, 5, 6)],[(1, 2, 3), (3, 4, 5)]) == ((3, 5, 7), (7, 9, 11))
assert add_nested_tuples([(3, 5, 7), (5, 9, 8)],[(1, 2, 3), (3, 4, 5)]) == ((4, 7, 10), (8, 13, 13))
assert add_nested_tuples([(2,), (4,)],[(1,), (3,)]) == ((3,), (7,))
assert add_nested_tuples([(3,), (5,)],[(1,), (3,)]) == ((4,), (8,))
assert add_nested_tuples([(2,), (4,)],[(1,), (3,), (5,)]) == ((3,), (7,))
assert add_nested_tuples([(2,), (4,), (6,)],[(1,), (3,), (5,)]) == ((3,), (7,), (11,))
assert add_nested_tuples([(2, 3, 4), (4, 5, 6), (3, 2)],[(1, 2, 3), (3, 4, 5), (1, 2)]) == ((3, 5, 7), (7, 9, 11), (4, 4))
assert add_nested_tuples([(2, 3, 4), (4, 5, 6), (3, 2)],[(1, 2, 3, 4), (3, 4, 5), (1, 2)]) == ((3, 5, 7), (7, 9, 11), (4, 4))
assert add_nested_tuples(((1, 2, 3), (4, 5, 6)),((1, 2, 3), (4, 5, 6))) == ((2, 4, 6), (8, 10, 12))
assert add_nested_tuples(((1, 2, 3, 4), (5, 6, 7, 8)),((1, 2, 3, 4), (5, 6, 7, 8))) == ((2, 4, 6, 8), (10, 12, 14, 16))
assert add_nested_tuples(((1, 2, 3), (4, 5, 6), (7, 8, 9)),((1, 2, 3), (4, 5, 6), (7, 8, 9))) == ((2, 4, 6), (8, 10, 12), (14, 16, 18))
assert add_nested_tuples(((1, 2), (3, 4)),((1, 2), (3, 4))) == ((2, 4), (6, 8))
assert add_nested_tuples(((1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)),((1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12))) == ((2, 4, 6), (8, 10, 12), (14, 16, 18), (20, 22, 24))
assert add_nested_tuples(((1, 2, 3, 4), (5, 6, 7, 8), (9, 10, 11, 12)),((1, 2, 3, 4), (5, 6, 7, 8), (9, 10, 11, 12))) == ((2, 4, 6, 8), (10, 12, 14, 16), (18, 20, 22, 24))
assert add_nested_tuples(((1, 2, 3), (4, 5, 6)),((7, 8, 9), (10, 11, 12))) == ((8, 10, 12), (14, 16, 18))
assert add_nested_tuples(((1, 2), (3, 4)),((5, 6), (7, 8))) == ((6, 8), (10, 12))
assert add_nested_tuples(((1, 2, 3, 4), (5, 6, 7, 8), (9, 10, 11, 12), (13, 14, 15, 16)),((1, 2, 3, 4), (5, 6, 7, 8), (9, 10, 11, 12), (13, 14, 15, 16))) == ((2, 4, 6, 8), (10, 12, 14, 16), (18, 20, 22, 24), (26, 28, 30, 32))
assert add_nested_tuples(((1, 2, 3), (4, 5, 6), (7, 8, 9)),((1, 2, 3), (4, 5, 6), (7, 8, 9))) == ((2, 4, 6), (8, 10, 12), (14, 16, 18))
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def add_nested_tuples(test_tup1, test_tup2):
    '''
    Write a function to perform index wise addition of tuple elements in the given two nested tuples.
    '''

    res = ()
    for i in range(len(test_tup1)):
        inner_res = ()
        for j in range(len(test_tup1[i])):
            if j < len(test_tup2[i]):
                inner_res += (test_tup1[i][j] + test_tup2[i][j],)
            else:
                inner_res += (test_tup1[i][j],)
        res += (inner_res,)
    return res

```
