task_id:MbppEval/138
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def is_Sum_Of_Powers_Of_Two(n): 
    '''
    Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.
    '''
```

----------------------Assistant Message----------------------
```python
def is_Sum_Of_Powers_Of_Two(n): 
    '''
    Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.
    '''

    if n <= 0:
        return False
    else:
        # Find the highest power of 2 less than or equal to n
        p = int(math.log(n, 2))
        
        while n > 0:
            # Check if 2^p can be used to form n
            if n >= 2**p:
                n -= 2**p
            
            # Decrease p to the next lower power of 2
            p -= 1
        
        # If n is zero, it can be represented as sum of non-zero powers of 2
        return n == 0

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-35<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert is_Sum_Of_Powers_Of_Two(100) == True
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import math

def is_Sum_Of_Powers_Of_Two(n): 
    if n <= 0:
        return False
    else:
        p = int(math.log(n, 2))
        
        while n > 0:
            if n >= 2**p:
                n -= 2**p
            p -= 1
        
        return n == 0
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-8<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert is_Sum_Of_Powers_Of_Two(19) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert is_Sum_Of_Powers_Of_Two(100) == True
assert is_Sum_Of_Powers_Of_Two(10) == True
assert is_Sum_Of_Powers_Of_Two(150) == True
assert is_Sum_Of_Powers_Of_Two(46) == True
assert is_Sum_Of_Powers_Of_Two(90) == True
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import math

def is_Sum_Of_Powers_Of_Two(n): 
    if n <= 0:
        return False
    else:
        p = int(math.log(n, 2))
        
        while n > 0:
            if n >= 2**p:
                n -= 2**p
                if n == 0:
                    return True
            p -= 1
        
        return False
```
