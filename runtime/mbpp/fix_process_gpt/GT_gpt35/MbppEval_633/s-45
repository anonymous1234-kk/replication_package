task_id:MbppEval/633
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def pair_xor_Sum(arr,n) : 
    '''
    Write a python function to find the sum of xor of all pairs of numbers in the given list.
    '''
```

----------------------Assistant Message----------------------
```python
def pair_xor_Sum(arr,n) : 
    '''
    Write a python function to find the sum of xor of all pairs of numbers in the given list.
    '''
 
    # Initialize result variable
    result = 0
  
    # Traverse array elements
    for i in range(n):
        # XOR of current element with result
        result = result ^ arr[i]
  
    # Multiply result with 2
    result = result * 2
  
    return result

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-0<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert pair_xor_Sum([3, 5, 6, 8, 9],5) == 90
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def pair_xor_Sum(arr,n) : 
    '''
    Write a python function to find the sum of xor of all pairs of numbers in the given list.
    '''
 
    # Initialize result variable
    result = 0
  
    # Traverse array elements
    for i in range(n):
        # XOR of current element with result
        result = result ^ arr[i]
  
    # Multiply result with n-1
    result = result * (n-1)
  
    return result
```
