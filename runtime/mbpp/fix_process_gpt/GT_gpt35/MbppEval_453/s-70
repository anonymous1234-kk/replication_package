task_id:MbppEval/453
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import math 
def sumofFactors(n) : 
    '''
    Write a python function to find the sum of even factors of a number.
    '''
```

----------------------Assistant Message----------------------
```python
import math 
def sumofFactors(n) : 
    '''
    Write a python function to find the sum of even factors of a number.
    '''
 
    '''
    Write a python function to find the sum of even factors of a number.
    '''
    sum = 0 
    # Iterate through all possible even numbers as factors of n
    for i in range(2, int(math.sqrt(n)) + 1, 2) : 
        if (n % i == 0) : 
            # If i divides n, add i to sum
            sum += i 
            # If n/i is not equal to i, add n/i to sum
            if (i != n // i) : 
                sum += n // i 
    return sum 

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-1<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert sumofFactors(30) == 48
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import math 

def sumofFactors(n) : 
    sum = 0 
    for i in range(2, int(math.sqrt(n)) + 1) : 
        if (n % i == 0) : 
            if (i % 2 == 0) : 
                sum += i 
            if (i != (n // i) and (n // i) % 2 == 0) : 
                sum += n // i 
    return sum 
```

