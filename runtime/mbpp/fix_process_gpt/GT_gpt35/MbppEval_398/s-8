task_id:MbppEval/398
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def sum_of_digits(nums):
    '''
    Write a function to compute the sum of digits of each number of a given list.
    '''
```

----------------------Assistant Message----------------------
```python
def sum_of_digits(nums):
    '''
    Write a function to compute the sum of digits of each number of a given list.
    '''

    """
    This function takes a list of integers and returns the sum of digits for each element in the list.
    """
    sum_of_digits_list = []
    for num in nums:
        sum_of_digits = 0
        for digit in str(num):
            sum_of_digits += int(digit)
        sum_of_digits_list.append(sum_of_digits)
    return sum_of_digits_list

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-9<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert sum_of_digits([28, 12, 33]) == 19
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def sum_of_digits(nums):
    '''
    Write a function to compute the sum of digits of each number of a given list.
    '''

    sum_of_digits_list = []
    for num in nums:
        sum_of_digits = 0
        while num > 0:
            digit = num % 10
            sum_of_digits += digit
            num //= 10
        sum_of_digits_list.append(sum_of_digits)
    return sum_of_digits_list
```
