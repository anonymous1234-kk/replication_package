task_id:MbppEval/572
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def two_unique_nums(nums):
    '''
    Write a python function to remove duplicate numbers from a given number of lists.
    '''
```

----------------------Assistant Message----------------------
```python
def two_unique_nums(nums):
    '''
    Write a python function to remove duplicate numbers from a given number of lists.
    '''

    '''
    Write a python function to remove duplicate numbers from a given number of lists.
    '''
    unique_nums = []              # list to store unique numbers
    for num in nums:              # iterate through each list in nums
        for n in num:             # iterate through each number in the list
            if n not in unique_nums:    # if the number is not already in unique_nums
                unique_nums.append(n)   # add the number to unique_nums
    return unique_nums             # return the unique numbers list

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-2<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert two_unique_nums([10, 20, 30, 30, 40, 50, 50, 60, 70, 70, 80, 80, 90, 100, 100]) == [10, 20, 40, 60, 90]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
Here is the fixed code:

```python
def two_unique_nums(nums):
    unique_nums = []
    for num in nums:
        for n in num:
            if n not in unique_nums and num.count(n) == 1:
                unique_nums.append(n)
    return unique_nums
```
