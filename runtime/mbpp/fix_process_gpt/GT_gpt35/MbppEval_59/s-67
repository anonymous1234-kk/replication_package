task_id:MbppEval/59
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def is_octagonal(n): 
    '''
    Write a function to find the nth octagonal number.
    '''
```

----------------------Assistant Message----------------------
```python
def is_octagonal(n): 
    '''
    Write a function to find the nth octagonal number.
    '''
 
    # An octagonal number can be represented by the formula 3n^2 - 2n
    # We can calculate the nth octagonal number using this formula
    octagonal_number = 3*n**2 - 2*n
    
    # Check if the calculated number is equal to the given number
    if octagonal_number == n:
        return True
    else:
        return False

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-13<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert is_octagonal(6) == 96
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def is_octagonal(n): 
    '''
    Write a function to find the nth octagonal number.
    '''
 
    # An octagonal number can be represented by the formula 3n^2 - 2n
    # We can calculate the nth octagonal number using this formula
    octagonal_number = 3*n**2 - 2*n
    
    # Return the calculated octagonal number
    return octagonal_number
```
