task_id:MbppEval/229
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def re_arrange_array(arr, n):
    '''
    Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.
    '''
```

----------------------Assistant Message----------------------
```python
def re_arrange_array(arr, n):
    '''
    Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.
    '''

    neg_count = 0
    
    # Count the number of negative elements in the array
    for i in range(n):
        if arr[i] < 0:
            neg_count += 1
    
    # Move negative elements to the beginning of the array
    for i in range(neg_count):
        # Find the next negative element
        while arr[i] >= 0 and neg_count < n:
            arr[i], arr[neg_count] = arr[neg_count], arr[i]
            neg_count += 1
    
    return arr

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-34<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert re_arrange_array([0, 2, 0, -1],4) == [-1, 2, 0, 0]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def re_arrange_array(arr, n):
    neg_count = 0
    for i in range(n):
        if arr[i] < 0:
            neg_count += 1
    for i in range(neg_count):
        while arr[i] >= 0 and neg_count < n:
            arr[i], arr[neg_count] = arr[neg_count], arr[i]
            neg_count += 1
    return arr
```
