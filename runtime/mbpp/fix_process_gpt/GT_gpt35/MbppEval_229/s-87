task_id:MbppEval/229
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def re_arrange_array(arr, n):
    '''
    Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.
    '''
```

----------------------Assistant Message----------------------
```python
def re_arrange_array(arr, n):
    '''
    Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.
    '''

    # create two empty lists to store negative and positive numbers
    neg_nums = []
    pos_nums = []
    
    # iterate over the first n elements of the array
    for i in range(n):
        # check if the number is negative and append it to the negative list
        if arr[i] < 0:
            neg_nums.append(arr[i])
        # check if the number is positive and append it to the positive list
        else:
            pos_nums.append(arr[i])
            
    # concatenate the negative and positive lists and store the result in the original array
    arr[:n] = neg_nums + pos_nums

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-34<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert re_arrange_array([0, 2, 0, -1],4) == [-1, 2, 0, 0]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def re_arrange_array(arr, n):
    '''
    Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.
    '''

    # create two empty lists to store negative and positive numbers
    neg_nums = []
    pos_nums = []
    
    # iterate over the first n elements of the array
    for i in range(n):
        # check if the number is negative and append it to the negative list
        if arr[i] < 0:
            neg_nums.append(arr[i])
    
    # iterate over the first n elements of the array again
    for i in range(n):
        # check if the number is positive and append it to the positive list
        if arr[i] >= 0:
            pos_nums.append(arr[i])
            
    # concatenate the negative and positive lists and store the result in the original array
    arr[:n] = neg_nums + pos_nums
    
    return arr
```
