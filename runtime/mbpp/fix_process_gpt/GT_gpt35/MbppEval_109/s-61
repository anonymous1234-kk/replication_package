task_id:MbppEval/109
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def odd_Equivalent(s,n): 
    '''
    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.
    '''
```

----------------------Assistant Message----------------------
```python
def odd_Equivalent(s,n): 
    '''
    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.
    '''

    # Convert the binary string to a list of integers
    lst = [int(i) for i in s]
    
    # Calculate the length of the list
    length = len(lst)
    
    # Rotate the list n times
    rotated_lst = lst[length-n:] + lst[:length-n]
    
    # Count the number of odd values in the rotated list
    count = 0
    for num in rotated_lst:
        if num % 2 != 0:
            count += 1
    
    # Return the count of odd values
    return count

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-49<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert odd_Equivalent('1010101',3) == 2
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def odd_Equivalent(s,n): 
    '''
    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.
    '''

    # Convert the binary string to a list of integers
    lst = [int(i) for i in s]
    
    # Calculate the length of the list
    length = len(lst)
    
    # Rotate the list n times
    rotated_lst = lst[length-n:] + lst[:length-n]
    
    # Count the number of odd values in the rotated list
    count = 0
    for num in rotated_lst:
        if num % 2 != 0:
            count += 1
    
    # Return the count of odd values
    return count
```

