task_id:MbppEval/614
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def cummulative_sum(test_list):
    '''
    Write a function to find the cumulative sum of all the values that are present in the given tuple list.
    '''
```

----------------------Assistant Message----------------------
```python
def cummulative_sum(test_list):
    '''
    Write a function to find the cumulative sum of all the values that are present in the given tuple list.
    '''

    # initialize a sum variable
    total_sum = 0
    
    # initialize an empty list to hold the cumulative sums
    cumulative_sums = []
    
    # iterate over the items in the input list
    for i in test_list:
        # add the current item to the sum variable
        total_sum += i
        
        # append the current sum to the cumulative_sums list
        cumulative_sums.append(total_sum)
    
    # return the cumulative_sums list
    return cumulative_sums

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-10<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert cummulative_sum([(1, 2), (3, 4), (5, 6)]) == 21
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def cummulative_sum(test_list):
    total_sum = 0
    cumulative_sums = []
    for i in test_list:
        total_sum += sum(i)
        cumulative_sums.append(total_sum)
    return cumulative_sums
```
