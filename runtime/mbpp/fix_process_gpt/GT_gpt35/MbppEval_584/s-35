task_id:MbppEval/584
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
import re
def find_adverbs(text):
    '''
    Write a function to find the first adverb ending with ly and its positions in a given string.
    '''
```

----------------------Assistant Message----------------------
```python
import re
def find_adverbs(text):
    '''
    Write a function to find the first adverb ending with ly and its positions in a given string.
    '''

    '''
    Write a function to find the first adverb ending with ly and its positions in a given string.
    '''
    # Find all the words that end with 'ly' and are preceded by a word boundary
    words = re.findall(r'\b\w+ly\b', text)
    
    # If a word is found, return the first match and its position(s)
    if words:
        adverb = words[0]
        positions = [match.start() for match in re.finditer(adverb, text)]
        return adverb, positions
    
    # If no adverb is found, return None
    else:
        return None

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-3<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_adverbs('She has been living happily since she moved to New York.') == 20-27: happily
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
import re
def find_adverbs(text):
    '''
    Write a function to find the first adverb ending with ly and its positions in a given string.
    '''

    '''
    Write a function to find the first adverb ending with ly and its positions in a given string.
    '''
    # Find all the words that end with 'ly' and are preceded by a word boundary
    words = re.findall(r'\b\w+ly\b', text)
    
    # If a word is found, return the first match and its position(s)
    if words:
        adverb = words[0]
        positions = [match.start() for match in re.finditer(adverb, text)]
        return f"{positions[0]}-{positions[-1]+len(adverb)-1}: {adverb}"
    
    # If no adverb is found, return None
    else:
        return None

```
