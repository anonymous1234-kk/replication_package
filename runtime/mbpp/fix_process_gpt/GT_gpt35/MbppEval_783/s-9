task_id:MbppEval/783
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def rgb_to_hsv(r, g, b):
    '''
    Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/
    '''
```

----------------------Assistant Message----------------------
```python
def rgb_to_hsv(r, g, b):
    '''
    Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/
    '''

    """
    Convert an RGB color value to HSV. Conversion formula
    adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#RGB_to_HSV_alternative.
    Assumes r, g, and b are in range [0, 255] and returns h, s, and v in range [0, 1].
    """
    r, g, b = r / 255.0, g / 255.0, b / 255.0
    cmax = max(r, g, b)
    cmin = min(r, g, b)
    delta = cmax - cmin

    if delta == 0:
        hue = 0
    elif cmax == r:
        hue = ((g - b) / delta) % 6
    elif cmax == g:
        hue = (b - r) / delta + 2
    else:
        hue = (r - g) / delta + 4

    hue = round(hue * 60)
    if hue < 0:
        hue += 360

    if cmax == 0:
        saturation = 0
    else:
        saturation = delta / cmax

    value = cmax

    return hue / 360, saturation, value

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-26<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert rgb_to_hsv(128,128,0) == (60.0, 100.0, 50.19607843137255)
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def rgb_to_hsv(r, g, b):
    '''
    Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/
    '''

    """
    Convert an RGB color value to HSV. Conversion formula
    adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#RGB_to_HSV_alternative.
    Assumes r, g, and b are in range [0, 255] and returns h, s, and v in range [0, 1].
    """
    r, g, b = r / 255.0, g / 255.0, b / 255.0
    cmax = max(r, g, b)
    cmin = min(r, g, b)
    delta = cmax - cmin

    if delta == 0:
        hue = 0
    elif cmax == r:
        hue = ((g - b) / delta) % 6
    elif cmax == g:
        hue = (b - r) / delta + 2
    else:
        hue = (r - g) / delta + 4

    hue = round(hue * 60)
    if hue < 0:
        hue += 360

    if cmax == 0:
        saturation = 0
    else:
        saturation = delta / cmax

    value = cmax

    return hue, saturation * 100, value * 100
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-34<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert rgb_to_hsv(238,18,137) == (327.54545454545456, 92.43697478991596, 93.33333333333333)
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert rgb_to_hsv(128,128,0) == (60.0, 100.0, 50.19607843137255)
assert rgb_to_hsv(255,255,255) == (0, 0.0, 100.0)
assert rgb_to_hsv(255,0,0) == (0.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,0) == (120.0, 100.0, 100.0)
assert rgb_to_hsv(0,0,255) == (240.0, 100.0, 100.0)
assert rgb_to_hsv(255,255,0) == (60.0, 100.0, 100.0)
assert rgb_to_hsv(255,0,255) == (300.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,255) == (180.0, 100.0, 100.0)
assert rgb_to_hsv(255,0,0) == (0.0, 100.0, 100.0)
assert rgb_to_hsv(128,128,128) == (0, 0.0, 50.19607843137255)
assert rgb_to_hsv(0,128,0) == (120.0, 100.0, 50.19607843137255)
assert rgb_to_hsv(0,255,255) == (180.0, 100.0, 100.0)
assert rgb_to_hsv(0,0,255) == (240.0, 100.0, 100.0)
assert rgb_to_hsv(255,255,0) == (60.0, 100.0, 100.0)
assert rgb_to_hsv(255,0,255) == (300.0, 100.0, 100.0)
assert rgb_to_hsv(255,255,255) == (0, 0.0, 100.0)
assert rgb_to_hsv(128,0,128) == (300.0, 100.0, 50.19607843137255)
assert rgb_to_hsv(255,255,255) == (0, 0.0, 100.0)
assert rgb_to_hsv(255,0,0) == (0.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,0) == (120.0, 100.0, 100.0)
assert rgb_to_hsv(0,0,255) == (240.0, 100.0, 100.0)
assert rgb_to_hsv(255,255,0) == (60.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,255) == (180.0, 100.0, 100.0)
assert rgb_to_hsv(255,0,255) == (300.0, 100.0, 100.0)
assert rgb_to_hsv(128,0,128) == (300.0, 100.0, 50.19607843137255)
assert rgb_to_hsv(127,127,127) == (0, 0.0, 49.80392156862745)
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def rgb_to_hsv(r, g, b):
    r, g, b = r / 255.0, g / 255.0, b / 255.0
    cmax = max(r, g, b)
    cmin = min(r, g, b)
    delta = cmax - cmin

    if delta == 0:
        hue = 0
    elif cmax == r:
        hue = ((g - b) / delta) % 6
    elif cmax == g:
        hue = (b - r) / delta + 2
    else:
        hue = (r - g) / delta + 4

    hue = round(hue * 60)
    if hue < 0:
        hue += 360

    if cmax == 0:
        saturation = 0
    else:
        saturation = delta / cmax

    value = cmax

    return hue, round(saturation * 100, 2), round(value * 100, 2)
```
