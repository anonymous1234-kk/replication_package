task_id:MbppEval/783
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def rgb_to_hsv(r, g, b):
    '''
    Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/
    '''
```

----------------------Assistant Message----------------------
```python
def rgb_to_hsv(r, g, b):
    '''
    Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/
    '''

    '''
    Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/
    '''
    # normalize red, green, blue values
    r, g, b = r / 255.0, g / 255.0, b / 255.0
    
    # find maximum and minimum values in r, g, b
    max_val = max(r, g, b)
    min_val = min(r, g, b)
    
    # calculate the difference between max and min values
    diff = max_val - min_val
    
    # initialize hue, saturation, value
    h, s, v = 0, 0, 0
    
    # calculate hue
    if max_val == min_val:
        h = 0
    elif max_val == r and g >= b:
        h = ((g - b) / diff) * 60
    elif max_val == r and g < b:
        h = ((g - b) / diff) * 60 + 360
    elif max_val == g:
        h = ((b - r) / diff) * 60 + 120
    elif max_val == b:
        h = ((r - g) / diff) * 60 + 240
    
    # calculate saturation
    if max_val == 0:
        s = 0
    else:
        s = (diff / max_val) * 100
    
    # calculate value
    v = max_val * 100
    
    return h, s, v

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-42<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert rgb_to_hsv(119,45,25) == (12.7659574468085, 78.99159663865547, 46.666666666666664)
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert rgb_to_hsv(128,128,0) == (60.0, 100.0, 50.19607843137255)
assert rgb_to_hsv(255,255,255) == (0, 0.0, 100.0)
assert rgb_to_hsv(255,0,0) == (0.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,0) == (120.0, 100.0, 100.0)
assert rgb_to_hsv(0,0,255) == (240.0, 100.0, 100.0)
assert rgb_to_hsv(255,255,0) == (60.0, 100.0, 100.0)
assert rgb_to_hsv(255,0,255) == (300.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,255) == (180.0, 100.0, 100.0)
assert rgb_to_hsv(255,0,0) == (0.0, 100.0, 100.0)
assert rgb_to_hsv(128,128,128) == (0, 0.0, 50.19607843137255)
assert rgb_to_hsv(0,128,0) == (120.0, 100.0, 50.19607843137255)
assert rgb_to_hsv(0,255,255) == (180.0, 100.0, 100.0)
assert rgb_to_hsv(0,0,255) == (240.0, 100.0, 100.0)
assert rgb_to_hsv(255,255,0) == (60.0, 100.0, 100.0)
assert rgb_to_hsv(255,0,255) == (300.0, 100.0, 100.0)
assert rgb_to_hsv(255,255,255) == (0, 0.0, 100.0)
assert rgb_to_hsv(128,0,128) == (300.0, 100.0, 50.19607843137255)
assert rgb_to_hsv(255,255,255) == (0, 0.0, 100.0)
assert rgb_to_hsv(255,0,0) == (0.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,0) == (120.0, 100.0, 100.0)
assert rgb_to_hsv(0,0,255) == (240.0, 100.0, 100.0)
assert rgb_to_hsv(255,255,0) == (60.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,255) == (180.0, 100.0, 100.0)
assert rgb_to_hsv(255,0,255) == (300.0, 100.0, 100.0)
assert rgb_to_hsv(128,0,128) == (300.0, 100.0, 50.19607843137255)
assert rgb_to_hsv(127,127,127) == (0, 0.0, 49.80392156862745)
assert rgb_to_hsv(238,18,137) == (327.54545454545456, 92.43697478991596, 93.33333333333333)
assert rgb_to_hsv(255,192,203) == (349.5238095238095, 24.705882352941178, 100.0)
assert rgb_to_hsv(70,130,180) == (207.27272727272728, 61.11111111111111, 70.58823529411765)
assert rgb_to_hsv(255,0,0) == (0.0, 100.0, 100.0)
assert rgb_to_hsv(0,255,0) == (120.0, 100.0, 100.0)
assert rgb_to_hsv(0,0,255) == (240.0, 100.0, 100.0)
assert rgb_to_hsv(128,128,128) == (0, 0.0, 50.19607843137255)
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def rgb_to_hsv(r, g, b):
    r, g, b = r / 255.0, g / 255.0, b / 255.0
    max_val = max(r, g, b)
    min_val = min(r, g, b)
    diff = max_val - min_val
    h, s, v = 0, 0, 0
    if max_val == min_val:
        h = 0
    elif max_val == r and g >= b:
        h = ((g - b) / diff) * 60
    elif max_val == r and g < b:
        h = ((g - b) / diff) * 60 + 360
    elif max_val == g:
        h = ((b - r) / diff) * 60 + 120
    elif max_val == b:
        h = ((r - g) / diff) * 60 + 240
    if max_val == 0:
        s = 0
    else:
        s = (diff / max_val) * 100
    v = max_val * 100
    return round(h, 6), round(s, 6), round(v, 6)
```
