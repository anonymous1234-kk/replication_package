task_id:MbppEval/125
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def find_length(string): 
    '''
    Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.
    '''
```

----------------------Assistant Message----------------------
```python
def find_length(string): 
    '''
    Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.
    '''
 
    max_diff = 0
    count_zero = 0
    count_one = 0
    
    for i in range(len(string)):
        if string[i] == '0':
            count_zero += 1
        elif string[i] == '1':
            count_one += 1
        
        diff = count_zero - count_one
        if diff > max_diff:
            max_diff = diff
        
        if count_zero == count_one:
            count_zero = 0
            count_one = 0
    
    return max_diff

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-10<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_length('11001110101011') == 2
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def find_length(string): 
    '''
    Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.
    '''
 
    max_diff = 0
    count_zero = 0
    count_one = 0
    
    for i in range(len(string)):
        if string[i] == '0':
            count_zero += 1
        elif string[i] == '1':
            count_one += 1
        
        diff = count_zero - count_one
        if diff > max_diff:
            max_diff = diff
        
        if count_zero == count_one:
            count_zero = 0
            count_one = 0
    
    return max_diff
```
