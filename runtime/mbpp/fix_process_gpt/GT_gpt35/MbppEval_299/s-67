task_id:MbppEval/299
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
from collections import defaultdict
def max_aggregate(stdata):
    '''
    Write a function to calculate the maximum aggregate from the list of tuples.
    '''
```

----------------------Assistant Message----------------------
```python
from collections import defaultdict
def max_aggregate(stdata):
    '''
    Write a function to calculate the maximum aggregate from the list of tuples.
    '''

    '''
    Write a function to calculate the maximum aggregate from the list of tuples.
    '''
    # Create a dictionary to store the total marks of each student
    total_marks = defaultdict(int)
    
    # Iterate over the list of tuples
    for st, marks in stdata:
        # Add the marks of the student to their total
        total_marks[st] += marks
        
    # Return the maximum total marks
    return max(total_marks.values())

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-10<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert max_aggregate([(1, 40), (2, 50), (3, 60), (1, 70), (2, 80), (3, 90)]) == (3, 150)
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
from collections import defaultdict
def max_aggregate(stdata):
    '''
    Write a function to calculate the maximum aggregate from the list of tuples.
    '''

    '''
    Write a function to calculate the maximum aggregate from the list of tuples.
    '''
    # Create a dictionary to store the total marks of each student
    total_marks = defaultdict(int)
    
    # Iterate over the list of tuples
    for st, marks in stdata:
        # Add the marks of the student to their total
        total_marks[st] += marks
        
    # Find the student with the maximum total marks
    max_student = max(total_marks, key=total_marks.get)
    
    # Return a tuple with the student and their maximum total marks
    return (max_student, total_marks[max_student])

```
