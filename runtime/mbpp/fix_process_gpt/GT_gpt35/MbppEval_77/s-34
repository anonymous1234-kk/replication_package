task_id:MbppEval/77
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def is_Diff(n): 
    '''
    Write a python function to find whether a number is divisible by 11.
    '''
```

----------------------Assistant Message----------------------
```python
def is_Diff(n): 
    '''
    Write a python function to find whether a number is divisible by 11.
    '''
 
    # A number is divisible by 11 if the difference between 
    # the sum of its digits at odd places and the sum of its 
    # digits at even places is either 0 or a multiple of 11.
    odd_sum = 0
    even_sum = 0
    is_odd = True
    while n > 0:
        digit = n % 10
        if is_odd:
            odd_sum += digit
        else:
            even_sum += digit
        is_odd = not is_odd
        n //= 10
    diff = abs(odd_sum - even_sum)
    return diff == 0 or diff % 11 == 0

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-45<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert is_Diff(-232323232323232323232323) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert is_Diff(132) == True
assert is_Diff(120) == False
assert is_Diff(987654321) == False
assert is_Diff(-121) == True
assert is_Diff(1101) == False
assert is_Diff(987654321) == False
assert is_Diff(55) == True
assert is_Diff(-121) == True
assert is_Diff(-11) == True
assert is_Diff(232323232323232323232323) == False
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def is_Diff(n): 
    '''
    Write a python function to find whether a number is divisible by 11.
    '''
 
    # A number is divisible by 11 if the difference between 
    # the sum of its digits at odd places and the sum of its 
    # digits at even places is either 0 or a multiple of 11.
    odd_sum = 0
    even_sum = 0
    is_odd = True
    n = abs(n)  # Make the number positive to calculate the sum of digits
    while n > 0:
        digit = n % 10
        if is_odd:
            odd_sum += digit
        else:
            even_sum += digit
        is_odd = not is_odd
        n //= 10
    diff = abs(odd_sum - even_sum)
    return diff == 0 or diff % 11 == 0
```
