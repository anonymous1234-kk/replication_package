task_id:MbppEval/126
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def sum(a,b): 
    '''
    Write a python function to find the sum of common divisors of two given numbers.
    '''
```

----------------------Assistant Message----------------------
```python
def sum(a,b): 
    '''
    Write a python function to find the sum of common divisors of two given numbers.
    '''
 
    '''
    Write a python function to find the sum of common divisors of two given numbers.
    '''
    # Find the smaller of the two numbers
    smaller = min(a, b)
    
    # Initialize a variable to keep track of the sum of common divisors
    sum_of_common_divisors = 0
    
    # Loop through all the numbers from 1 to the smaller number
    for i in range(1, smaller + 1):
        
        # Check if i is a divisor of both a and b
        if a % i == 0 and b % i == 0:
            
            # If i is a common divisor, add it to the sum
            sum_of_common_divisors += i
    
    # Return the sum of common divisors
    return sum_of_common_divisors

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-0<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert sum(10,20) == 8
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def sum(a,b): 
    '''
    Write a python function to find the sum of common divisors of two given numbers.
    '''
 
    # Find the smaller of the two numbers
    smaller = min(a, b)
    
    # Initialize a variable to keep track of the sum of common divisors
    sum_of_common_divisors = 0
    
    # Loop through all the numbers from 1 to the smaller number
    for i in range(1, smaller + 1):
        
        # Check if i is a divisor of both a and b
        if a % i == 0 and b % i == 0:
            
            # If i is a common divisor, add it to the sum
            sum_of_common_divisors += i
    
    # Return the sum of common divisors
    return sum_of_common_divisors
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-1<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert sum(48,12) == 16
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def sum(a,b): 
    '''
    Write a python function to find the sum of common divisors of two given numbers.
    '''
 
    '''
    Write a python function to find the sum of common divisors of two given numbers.
    '''
    # Find the smaller of the two numbers
    smaller = min(a, b)
    
    # Initialize a variable to keep track of the sum of common divisors
    sum_of_common_divisors = 0
    
    # Loop through all the numbers from 1 to the smaller number
    for i in range(1, smaller + 1):
        
        # Check if i is a divisor of both a and b
        if a % i == 0 and b % i == 0:
            
            # If i is a common divisor, add it to the sum
            sum_of_common_divisors += i
    
    # Return the sum of common divisors
    return sum_of_common_divisors

```
