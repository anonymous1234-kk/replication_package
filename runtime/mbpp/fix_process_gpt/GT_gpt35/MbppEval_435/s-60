task_id:MbppEval/435
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def last_Digit(n) :
    '''
    Write a python function to find the last digit of a given number.
    '''
```

----------------------Assistant Message----------------------
```python
def last_Digit(n) :
    '''
    Write a python function to find the last digit of a given number.
    '''

    # Extracting the last digit of the given number using the modulo operator.
    # If the number is negative, we convert it to a positive number and then extract the last digit.
    last_digit = abs(n) % 10
    return last_digit

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-18<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert last_Digit(-2.5) == 7.5
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert last_Digit(3.1) == 3.1
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def last_Digit(n) :
    '''
    Write a python function to find the last digit of a given number.
    '''

    # Extracting the last digit of the given number using the modulo operator.
    # If the number is negative, we convert it to a positive number and then extract the last digit.
    last_digit = abs(n) % 10
    return last_digit

```
