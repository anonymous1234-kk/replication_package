task_id:MbppEval/9
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def find_Rotations(str): 
    '''
    Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.
    '''
```

----------------------Assistant Message----------------------
```python
def find_Rotations(str): 
    '''
    Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.
    '''
 
    n = len(str) 
  
    # Creating a temp string with two copies 
    str = str + str 
  
    for i in range(1, n + 1): 
          
        # substring from i index of original string size 
        # such that we get length equal to original string 
        substring = str[i: i + n] 
          
        # If substring matches with original string then 
        # we will come out of the loop 
        if (str == substring): 
            return i
    return n

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-6<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_Rotations('abcabcabc') == 3
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert find_Rotations('abba') == 4
assert find_Rotations('aba') == 3
assert find_Rotations('aaaabbbb') == 8
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def find_Rotations(str): 
    '''
    Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.
    '''

    n = len(str) 

    # Creating a temp string with two copies 
    str = str + str 

    for i in range(1, n + 1): 
          
        # substring from i index of original string size 
        # such that we get length equal to original string 
        substring = str[i: i + n] 
          
        # If substring matches with original string then 
        # we will come out of the loop 
        if (str[:n] == substring): 
            return i
    return n
```
