task_id:MbppEval/304
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def find_Element(arr,ranges,rotations,index) :  
    '''
    Write a python function to find element at a given index after number of rotations.
    '''
```

----------------------Assistant Message----------------------
```python
def find_Element(arr,ranges,rotations,index) :  
    '''
    Write a python function to find element at a given index after number of rotations.
    '''

    # Adjust rotations so that right rotation is performed
    rotations = rotations % len(arr)
    
    for i in range(ranges):
        # Extracting middle column element of the range
        mid = (i + ranges // 2) % len(arr)
        # Finding the original index of the element
        orig_index = (mid + rotations) % len(arr)
        # If original index is equal to the given index then return the element
        if orig_index == index:
            return arr[mid]
            
    # If the element is not found then return None
    return None

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-10<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_Element([1, 2, 3, 4, 5, 6],[(0, 2), (0, 3)],2,1) == 3
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def find_Element(arr,ranges,rotations,index) :  
    '''
    Write a python function to find element at a given index after number of rotations.
    '''

    # Adjust rotations so that right rotation is performed
    rotations = rotations % len(arr)
    
    for r in ranges:
        start, end = r
        # Extracting middle column element of the range
        mid = (start + end) // 2
        # Finding the original index of the element
        orig_index = (mid + rotations) % len(arr)
        # If original index is equal to the given index then return the element
        if orig_index == index:
            return arr[mid]
            
    # If the element is not found then return None
    return None
```
