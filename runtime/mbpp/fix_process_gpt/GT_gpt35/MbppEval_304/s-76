task_id:MbppEval/304
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def find_Element(arr,ranges,rotations,index) :  
    '''
    Write a python function to find element at a given index after number of rotations.
    '''
```

----------------------Assistant Message----------------------
```python
def find_Element(arr,ranges,rotations,index) :  
    '''
    Write a python function to find element at a given index after number of rotations.
    '''

    # Rotate the array "rotations" number of times
    for i in range(rotations):
        # Get the first element of the array
        first = arr[0]
        # Shift the elements of the array to the left
        for j in range(len(arr) - 1):
            arr[j] = arr[j + 1]
        # Assign the first element to the last index
        arr[-1] = first
    
    # Slice the array from the given range
    sub_arr = arr[ranges[0]:ranges[1]+1]
    
    # Return the element at the given index
    return sub_arr[index - ranges[0]]

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-10<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_Element([1, 2, 3, 4, 5, 6],[(0, 2), (0, 3)],2,1) == 3
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
Here is the fixed code:

```python
def find_Element(arr, ranges, rotations, index):
    for i in range(rotations):
        first = arr[0]
        for j in range(len(arr) - 1):
            arr[j] = arr[j + 1]
        arr[-1] = first
    
    sub_arr = arr[ranges[0][0]:ranges[0][1]+1]
    
    return sub_arr[index - ranges[0][0]]
```

This fixed code should pass the provided test case as well as the previously passed test cases.
