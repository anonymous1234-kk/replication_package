task_id:MbppEval/304
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def find_Element(arr,ranges,rotations,index) :  
    '''
    Write a python function to find element at a given index after number of rotations.
    '''
```

----------------------Assistant Message----------------------
```python
def find_Element(arr,ranges,rotations,index) :  
    '''
    Write a python function to find element at a given index after number of rotations.
    '''

    # Rotate the array 'rotations' number of times
    for i in range(rotations):
        # Store the last element of the array
        last_element = arr[-1]

        # Shift the elements of the array by one position to the right
        for j in range(len(arr)-2, -1, -1):
            arr[j+1] = arr[j]

        # Place the last element at the first position of the array
        arr[0] = last_element

    # Return the element at the given index
    return arr[index]

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-10<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_Element([1, 2, 3, 4, 5, 6],[(0, 2), (0, 3)],2,1) == 3
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def find_Element(arr,ranges,rotations,index) :  
    '''
    Write a python function to find element at a given index after number of rotations.
    '''

    for rotation in range(rotations):
        for start, end in ranges:
            # Rotate the sublist within the given range
            sublist = arr[start:end+1]
            sublist = [sublist[-1]] + sublist[:-1]
            arr[start:end+1] = sublist

    return arr[index]
```
