task_id:MbppEval/595
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
```

----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''

    # Store the length of string
    n = len(str1)
    
    # Initialize variable to count the number of swaps required
    count = 0
    
    # Loop through each character in the strings
    for i in range(n):
        # Count the number of differences between str1 and str2
        if str1[i] != str2[i]:
            count += 1
    
    # Return the minimum number of swaps required
    return count // 2

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-12<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_Swaps('10101010100101','11111111111111') == Not Possible
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
Sure, here is the fixed code:

```python
def min_Swaps(str1, str2):
    n = len(str1)
    count = 0

    for i in range(n):
        if str1[i] != str2[i]:
            count += 1

    # Check if it is possible to convert one binary number to another
    if count % 2 != 0:
        return "Not Possible"

    return count // 2
```
