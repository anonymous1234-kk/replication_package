task_id:MbppEval/595
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
```

----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''

    # count number of 1s and 0s in both strings
    ones1 = ones2 = zeros1 = zeros2 = 0
    for i in range(len(str1)):
        if str1[i] == '1':
            ones1 += 1
        else:
            zeros1 += 1
        if str2[i] == '1':
            ones2 += 1
        else:
            zeros2 += 1
    
    # if the number of 1s or 0s are not equal in both strings, return -1
    if ones1 != ones2 or zeros1 != zeros2:
        return -1
    
    # count the number of swaps required to convert str1 to str2
    swaps = 0
    i = j = len(str1) - 1
    while i >= 0 and j >= 0:
        while i >= 0 and str1[i] == '1':
            i -= 1
        while j >= 0 and str2[j] == '1':
            j -= 1
        if i >= 0 and j >= 0:
            swaps += 1
            i -= 1
            j -= 1
    
    return swaps

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-12<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_Swaps('10101010100101','11111111111111') == Not Possible
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''

    # count number of 1s and 0s in both strings
    ones1 = ones2 = zeros1 = zeros2 = 0
    for i in range(len(str1)):
        if str1[i] == '1':
            ones1 += 1
        else:
            zeros1 += 1
        if str2[i] == '1':
            ones2 += 1
        else:
            zeros2 += 1
    
    # if the number of 1s or 0s are not equal in both strings, return -1
    if ones1 != ones2 or zeros1 != zeros2:
        return "Not Possible"
    
    # count the number of swaps required to convert str1 to str2
    swaps = 0
    i = j = len(str1) - 1
    while i >= 0 and j >= 0:
        while i >= 0 and str1[i] == '1':
            i -= 1
        while j >= 0 and str2[j] == '1':
            j -= 1
        if i >= 0 and j >= 0:
            swaps += 1
            i -= 1
            j -= 1
    
    return swaps
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-4<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_Swaps('0000','1111') == 2
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert min_Swaps('10101010100101','11111111111111') == Not Possible
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
I apologize for the mistake. Here is the fixed code:

```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''

    # count number of 1s and 0s in both strings
    ones1 = ones2 = zeros1 = zeros2 = 0
    for i in range(len(str1)):
        if str1[i] == '1':
            ones1 += 1
        else:
            zeros1 += 1
        if str2[i] == '1':
            ones2 += 1
        else:
            zeros2 += 1
    
    # if the number of 1s or 0s are not equal in both strings, return -1
    if ones1 != ones2 or zeros1 != zeros2:
        return "Not Possible"
    
    # count the number of swaps required to convert str1 to str2
    swaps = 0
    i = len(str1) - 1
    while i >= 0:
        if str1[i] != str2[i]:
            swaps += 1
        i -= 1
    
    return swaps
```
