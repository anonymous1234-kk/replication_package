task_id:MbppEval/595
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
```

----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
 
    # Initialize variables
    n = len(str1)
    count = 0
    i = 0
    j = 0

    # Loop through both strings
    while i < n and j < n:
        # If the characters are different
        if str1[i] != str2[j]:
            # Increment the count
            count += 1
            # Swap the characters in the first string
            str1 = str1[:i] + str2[j] + str1[i+1:]
        # Move to the next characters in both strings
        i += 1
        j += 1

    # Return the count
    return count

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-12<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_Swaps('10101010100101','11111111111111') == Not Possible
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
 
    # Initialize variables
    n = len(str1)
    count = 0
    i = 0
    j = 0

    # Loop through both strings
    while i < n and j < n:
        # If the characters are different
        if str1[i] != str2[j]:
            # Increment the count
            count += 1
            # Swap the characters in the first string
            str1 = str1[:i] + str2[j] + str1[i+1:]
        # Move to the next characters in both strings
        i += 1
        j += 1

    # Check if it is not possible to convert
    if str1 != str2:
        return "Not Possible"

    # Return the count
    return count

```
