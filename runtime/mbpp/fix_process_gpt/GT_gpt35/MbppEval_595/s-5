task_id:MbppEval/595
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
```

----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
 
    # Counting number of differences between the two strings
    count = 0
    for i in range(len(str1)):
        if str1[i] != str2[i]:
            count += 1
    
    # If count is odd, then it is not possible to convert one string to another
    if count % 2 != 0:
        return -1
    
    # Counting number of pairs of consecutive 1's and 0's in both strings
    pairs_str1 = count_pairs(str1)
    pairs_str2 = count_pairs(str2)
    
    # Calculating number of swaps required
    swaps = 0
    for i in range(len(pairs_str1)):
        swaps += abs(pairs_str1[i] - pairs_str2[i])
    
    # Returning the minimum number of swaps required
    return swaps // 2


def count_pairs(s):
    pairs = [0, 0]
    for i in range(1, len(s)):
        if s[i] != s[i-1]:
            pairs[int(s[i])] += 1
    return pairs

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-12<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_Swaps('10101010100101','11111111111111') == Not Possible
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''
 
    # Counting number of differences between the two strings
    count = 0
    for i in range(len(str1)):
        if str1[i] != str2[i]:
            count += 1
    
    # If count is odd, then it is not possible to convert one string to another
    if count % 2 != 0:
        return "Not Possible"
    
    # Counting number of pairs of consecutive 1's and 0's in both strings
    pairs_str1 = count_pairs(str1)
    pairs_str2 = count_pairs(str2)
    
    # Calculating number of swaps required
    swaps = 0
    for i in range(len(pairs_str1)):
        swaps += abs(pairs_str1[i] - pairs_str2[i])
    
    # Returning the minimum number of swaps required
    return swaps // 2


def count_pairs(s):
    pairs = [0, 0]
    for i in range(1, len(s)):
        if s[i] != s[i-1]:
            pairs[int(s[i])] += 1
    return pairs
```
>>>>>>>>>>>>>>>>>>>>>>fix test id: t-4<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_Swaps('0000','1111') == 2
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert min_Swaps('10101010100101','11111111111111') == Not Possible
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_Swaps(str1,str2) : 
    '''
    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.
    '''

    def count_pairs(s):
        pairs = [0, 0]
        for i in range(1, len(s)):
            if s[i] != s[i-1]:
                pairs[int(s[i])] += 1
        return pairs
    
    # Counting number of differences between the two strings
    count = 0
    for i in range(len(str1)):
        if str1[i] != str2[i]:
            count += 1
    
    # If count is odd, then it is not possible to convert one string to another
    if count % 2 != 0:
        return "Not Possible"
    
    # Counting number of pairs of consecutive 1's and 0's in both strings
    pairs_str1 = count_pairs(str1)
    pairs_str2 = count_pairs(str2)
    
    # Calculating number of swaps required
    swaps = 0
    for i in range(len(pairs_str1)):
        swaps += abs(pairs_str1[i] - pairs_str2[i])
    
    # Returning the minimum number of swaps required
    return swaps // 2
```
