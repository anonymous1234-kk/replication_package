task_id:MbppEval/63
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def max_difference(test_list):
    '''
    Write a function to find the maximum difference between available pairs in the given tuple list.
    '''
```

----------------------Assistant Message----------------------
```python
def max_difference(test_list):
    '''
    Write a function to find the maximum difference between available pairs in the given tuple list.
    '''

    '''
    Write a function to find the maximum difference between available pairs in the given tuple list.
    '''
    min_val = test_list[0][0]
    max_val = test_list[0][0]
    for i in test_list:
        for j in i:
            if j > max_val:
                max_val = j
            elif j < min_val:
                min_val = j
    return max_val - min_val

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-35<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert max_difference([(1, 2), (3, 5)]) == 2
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def max_difference(test_list):
    '''
    Write a function to find the maximum difference between available pairs in the given tuple list.
    '''

    min_val = test_list[0][0]
    max_val = test_list[0][0]
    for i in test_list:
        for j in i:
            if j > max_val:
                max_val = j
            elif j < min_val:
                min_val = j
    return max_val - min_val

assert max_difference([(1, 2), (3, 5)]) == 2

```
