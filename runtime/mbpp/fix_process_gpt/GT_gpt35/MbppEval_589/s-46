task_id:MbppEval/589
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def perfect_squares(a, b):
    '''
    Write a function to find perfect squares between two given numbers.
    '''
```

----------------------Assistant Message----------------------
```python
def perfect_squares(a, b):
    '''
    Write a function to find perfect squares between two given numbers.
    '''

    '''
    Write a function to find perfect squares between two given numbers.
    '''
    # Initialize an empty list to store perfect squares
    perfect_squares_list = []

    # Loop through each number between a and b (inclusive)
    for i in range(a, b+1):
        # Check if the square root of the number is an integer
        if (i**0.5).is_integer():
            # If it is, add the number to the list of perfect squares
            perfect_squares_list.append(i)

    # Return the list of perfect squares
    return perfect_squares_list

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-13<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert perfect_squares(-10,-1) == []
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert perfect_squares(3,4) == [4]
assert perfect_squares(15,20) == [16]
assert perfect_squares(10,1) == []
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def perfect_squares(a, b):
    perfect_squares_list = []
    for i in range(a, b+1):
        if (i**0.5).is_integer() and i >= 0:
            perfect_squares_list.append(i)
    return perfect_squares_list
```
