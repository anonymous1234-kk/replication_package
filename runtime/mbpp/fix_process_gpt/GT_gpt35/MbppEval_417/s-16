task_id:MbppEval/417
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def group_tuples(Input): 
    '''
    Write a function to find common first element in given list of tuple.
    '''
```

----------------------Assistant Message----------------------
```python
def group_tuples(Input): 
    '''
    Write a function to find common first element in given list of tuple.
    '''
 
    '''
    Write a function to find common first element in given list of tuple.
    '''
    first_elements = []
    for tup in Input:
        first_elements.append(tup[0])
    common_elements = []
    for element in set(first_elements):
        if first_elements.count(element) > 1:
            common_elements.append(element)
    return common_elements

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-0<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert group_tuples([(1, 3), (2, 6), (1, 6), (4, 7)]) == [(1, 3, 6), (2, 6), (4, 7)]
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def group_tuples(Input): 
    '''
    Write a function to find common first element in given list of tuple.
    '''
 
    first_elements = []
    for tup in Input:
        first_elements.append(tup[0])
    common_elements = []
    for element in set(first_elements):
        if first_elements.count(element) > 1:
            common_elements.append(element)
    
    result = []
    for common_element in common_elements:
        tuples_with_common_element = []
        for tup in Input:
            if tup[0] == common_element:
                tuples_with_common_element.append(tup)
        result.append(tuple(tuples_with_common_element))
    
    return result
```
