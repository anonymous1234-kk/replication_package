task_id:MbppEval/410
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def min_val(listval):
    '''
    Write a function to find the minimum value in a given heterogeneous list.
    '''
```

----------------------Assistant Message----------------------
```python
def min_val(listval):
    '''
    Write a function to find the minimum value in a given heterogeneous list.
    '''

    '''
    Write a function to find the minimum value in a given heterogeneous list.
    '''
    minval = listval[0] #initialize minimum value as the first element of the list
    for i in range(1,len(listval)): #iterate over the rest of the list
        if listval[i] < minval: #if the current element is less than the minimum value
            minval = listval[i] #update the minimum value
    return minval #return the minimum value

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-3<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert min_val(['a', 'cd', 1, 2]) == 1
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def min_val(listval):
    minval = None
    for val in listval:
        if isinstance(val, int) or isinstance(val, float):
            if minval is None or val < minval:
                minval = val
    return minval
```
