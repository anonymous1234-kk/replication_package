task_id:MbppEval/576
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def is_Sub_Array(A,B): 
    '''
    Write a python function to check whether a list is sublist of another or not.
    '''
```

----------------------Assistant Message----------------------
```python
def is_Sub_Array(A,B): 
    '''
    Write a python function to check whether a list is sublist of another or not.
    '''
 
    # Traverse both lists from 0th index
    for i in range(len(A)):
        for j in range(len(B)):
            # Break the loop if the element in both lists is not equal
            if A[i+j] != B[j]:
                break
            # If the loop ends without break and all elements in B are compared
            if j == len(B)-1:
                return True
    return False

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-7<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert is_Sub_Array([1, 1, 5],[5, 2, 3, 5]) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def is_Sub_Array(A,B): 
    '''
    Write a python function to check whether a list is sublist of another or not.
    '''
 
    # Traverse both lists from 0th index
    for i in range(len(A)):
        for j in range(len(B)):
            # Break the loop if the element in both lists is not equal
            if i+j >= len(A) or A[i+j] != B[j]:
                break
            # If the loop ends without break and all elements in B are compared
            if j == len(B)-1:
                return True
    return False

```
