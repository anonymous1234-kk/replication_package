task_id:MbppEval/576
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def is_Sub_Array(A,B): 
    '''
    Write a python function to check whether a list is sublist of another or not.
    '''
```

----------------------Assistant Message----------------------
```python
def is_Sub_Array(A,B): 
    '''
    Write a python function to check whether a list is sublist of another or not.
    '''

    # find the lengths of the lists
    n = len(A)
    m = len(B)
 
    # traverse through each element of list B
    i = 0
    while i < m:
 
        # check if the current element of B is
        # present in A or not
        j = 0
        while j < n:
            if B[i] == A[j]:
                break
            j += 1
 
        # if the current element of B is not present
        # in A, then return False
        if j == n:
            return False
 
        # move to the next element of B
        i += 1
 
    # if all elements of B are present in A
    # in the same order, then return True
    return True

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-20<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert is_Sub_Array(['A', 'B', 'C', 'D', 'E'],['B', 'D', 'E']) == False
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert is_Sub_Array([1, 1, 5],[5, 2, 3, 5]) == False
assert is_Sub_Array([1, 1, 5],[1, 5, 5, 2, 3, 5]) == False
assert is_Sub_Array([3, 2],[1, 2, 3, 4]) == False
assert is_Sub_Array([1, 1, 5],[1, 1, 2, 3, 5]) == False
assert is_Sub_Array([2, 5],[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == False
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def is_Sub_Array(A,B): 
    '''
    Write a python function to check whether a list is sublist of another or not.
    '''

    # find the lengths of the lists
    n = len(A)
    m = len(B)
 
    # traverse through each element of list B
    i = 0
    while i < m:
 
        # check if the current element of B is
        # present in A or not
        j = 0
        while j < n:
            if B[i] == A[j]:
                break
            j += 1
 
        # if the current element of B is not present
        # in A, then return False
        if j == n:
            return False
 
        # move to the next element of B
        i += 1
 
        # if all elements of B are present in A
        # in the same order, then return True
        if i == m:
            return True

    return False
```
