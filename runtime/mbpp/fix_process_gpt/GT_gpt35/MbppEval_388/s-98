task_id:MbppEval/388
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def highest_Power_of_2(n): 
    '''
    Write a python function to find the highest power of 2 that is less than or equal to n.
    '''
```

----------------------Assistant Message----------------------
```python
def highest_Power_of_2(n): 
    '''
    Write a python function to find the highest power of 2 that is less than or equal to n.
    '''
 
    # initial value of power
    p = 1 
      
    # double p until it is greater than n
    while p * 2 <= n:
        p *= 2 
          
    # return the highest power of 2 that is less than or equal to n
    return p

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-8<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert highest_Power_of_2(-10) == 0
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def highest_Power_of_2(n): 
    '''
    Write a python function to find the highest power of 2 that is less than or equal to n.
    '''
 
    # check if n is negative
    if n < 0:
        return 0

    # initial value of power
    p = 1 
      
    # double p until it is greater than n
    while p * 2 <= n:
        p *= 2 
          
    # return the highest power of 2 that is less than or equal to n
    return p
```
