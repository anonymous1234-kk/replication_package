task_id:MbppEval/267
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def square_Sum(n):  
    '''
    Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.
    '''
```

----------------------Assistant Message----------------------
```python
def square_Sum(n):  
    '''
    Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.
    '''
  
    sum = 0
    for i in range(1, 2*n, 2):
        sum += i*i
    return sum

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-45<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert square_Sum(1.2) == 1
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert square_Sum(2) == 10
assert square_Sum(3) == 35
assert square_Sum(4) == 84
assert square_Sum(5) == 165
assert square_Sum(6) == 286
assert square_Sum(7) == 455
assert square_Sum(8) == 680
assert square_Sum(9) == 969
assert square_Sum(10) == 1330
assert square_Sum(11) == 1771
assert square_Sum(4) == 84
assert square_Sum(5) == 165
assert square_Sum(6) == 286
assert square_Sum(7) == 455
assert square_Sum(8) == 680
assert square_Sum(9) == 969
assert square_Sum(10) == 1330
assert square_Sum(11) == 1771
assert square_Sum(12) == 2300
assert square_Sum(3) == 35
assert square_Sum(6) == 286
assert square_Sum(7) == 455
assert square_Sum(8) == 680
assert square_Sum(5) == 165
assert square_Sum(9) == 969
assert square_Sum(10) == 1330
assert square_Sum(4) == 84
assert square_Sum(5) == 165
assert square_Sum(6) == 286
assert square_Sum(7) == 455
assert square_Sum(8) == 680
assert square_Sum(9) == 969
assert square_Sum(10) == 1330
assert square_Sum(5) == 165
assert square_Sum(6) == 286
assert square_Sum(-1) == 0
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def square_Sum(n):  
    sum = 0
    if isinstance(n, int) and n > 0:
        for i in range(1, 2*n, 2):
            sum += i*i
    return sum
```
