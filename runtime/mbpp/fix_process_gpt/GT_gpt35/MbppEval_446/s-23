task_id:MbppEval/446
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
from collections import Counter 
def count_Occurrence(tup, lst): 
    '''
    Write a python function to count the occurence of all elements of list in a tuple.
    '''
```

----------------------Assistant Message----------------------
```python
from collections import Counter 
def count_Occurrence(tup, lst): 
    '''
    Write a python function to count the occurence of all elements of list in a tuple.
    '''
 
    '''
    Write a python function to count the occurence of all elements of list in a tuple.
    '''
    # Count the occurrences of each element in the tuple
    counter_tup = Counter(tup)
    
    # Create an empty dictionary to store the counts of elements from the list
    counts = {}
    
    # Loop through the elements of the list
    for elem in lst:
        # Check if the element is present in the tuple
        if elem in counter_tup:
            # If present, add its count to the dictionary
            counts[elem] = counter_tup[elem]
        else:
            # If not present, add zero to the dictionary
            counts[elem] = 0
            
    # Return the dictionary of counts
    return counts

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-19<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert count_Occurrence(('a', 'b', 'a', 'c', 'd', 'd', 'a', 'd', 'd', 'c', 'c', 'e', 'e', 'd', 'a'),['a', 'c', 'd']) == 12
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
from collections import Counter 

def count_Occurrence(tup, lst): 

    counter_tup = Counter(tup)
    
    counts = {}
    
    for elem in lst:
        if elem in counter_tup:
            counts[elem] = counter_tup[elem]
        else:
            counts[elem] = 0
            
    return sum(counts.values())

```
