task_id:MbppEval/119
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''
```

----------------------Assistant Message----------------------
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''

    # Initialize the variables
    n = len(arr)
    left = 0
    right = n - 1
    
    # Check if the array is empty or not
    if n == 0:
        return None
    # Check if the array has only one element
    elif n == 1:
        return arr[0]
    
    # Perform binary search
    while left <= right:
        mid = (left + right) // 2
        # Check if mid is the unique element
        if mid == 0 and arr[mid] != arr[mid + 1]:
            return arr[mid]
        elif mid == n - 1 and arr[mid] != arr[mid - 1]:
            return arr[mid]
        elif arr[mid] != arr[mid - 1] and arr[mid] != arr[mid + 1]:
            return arr[mid]
        # If mid is not unique, narrow down the search
        elif arr[mid] == arr[mid - 1]:
            if (mid - 1 - left) % 2 == 0:
                left = mid + 1
            else:
                right = mid - 2
        elif arr[mid] == arr[mid + 1]:
            if (right - mid - 1) % 2 == 0:
                right = mid - 1
            else:
                left = mid + 2
    # If the unique element is not found, return None
    return None

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-34<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert search([1, 1, 2, 2, 2, 3, 3, 50, 50, 60, 60, 140, 140]) == 2
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''

    # Initialize the variables
    n = len(arr)
    left = 0
    right = n - 1
    
    # Check if the array is empty or not
    if n == 0:
        return None
    # Check if the array has only one element
    elif n == 1:
        return arr[0]
    
    # Perform binary search
    while left <= right:
        mid = (left + right) // 2
        # Check if mid is the unique element
        if mid == 0 and arr[mid] != arr[mid + 1]:
            return arr[mid]
        elif mid == n - 1 and arr[mid] != arr[mid - 1]:
            return arr[mid]
        elif arr[mid] != arr[mid - 1] and arr[mid] != arr[mid + 1]:
            return arr[mid]
        # If mid is not unique, narrow down the search
        elif arr[mid] == arr[mid - 1]:
            if (mid - 1 - left) % 2 == 0:
                left = mid + 1
            else:
                right = mid - 2
        elif arr[mid] == arr[mid + 1]:
            if (right - mid - 1) % 2 == 0:
                right = mid - 1
            else:
                left = mid + 2
        # If mid is unique but not the first or last element
        else:
            return arr[mid]
    # If the unique element is not found, return None
    return None
```
