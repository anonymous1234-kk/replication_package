task_id:MbppEval/119
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''
```

----------------------Assistant Message----------------------
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''

    # Get the length of the array
    n = len(arr)

    # Initialize the unique element to the first element
    unique = arr[0]

    # Loop through the array
    for i in range(1, n):
        # If current element is not equal to the previous or next element, then it's the unique element
        if arr[i] != arr[i-1] and arr[i] != arr[i+1 if i+1<n else i]:
            unique = arr[i]
            break

    # Return the unique element
    return unique

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-34<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert search([1, 1, 2, 2, 2, 3, 3, 50, 50, 60, 60, 140, 140]) == 2
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def search(arr):
    '''
    Write a python function to find the element that appears only once in a sorted array.
    '''

    # Get the length of the array
    n = len(arr)

    # Initialize the unique element to the first element
    unique = arr[0]

    # Loop through the array
    for i in range(1, n):
        # If current element is not equal to the previous and next element, then it's the unique element
        if arr[i] != arr[i-1] and (i+1 >= n or arr[i] != arr[i+1]):
            unique = arr[i]
            break

    # Return the unique element
    return unique
```
