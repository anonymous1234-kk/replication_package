task_id:MbppEval/239
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
def get_total_number_of_sequences(m,n): 
    '''
    Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.
    '''
```

----------------------Assistant Message----------------------
```python
def get_total_number_of_sequences(m,n): 
    '''
    Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.
    '''
 
    if m < 2 or n <= 0:
        return 0
    elif n == 1:
        return m
    else:
        prev_seq = [i for i in range(1, m+1)]
        for i in range(2, n+1):
            curr_seq = []
            for j in range(len(prev_seq)):
                curr_max = prev_seq[j] * 2 - 1
                for k in range(prev_seq[j], min(m+1, curr_max+1)):
                    curr_seq.append(k)
            prev_seq = curr_seq
        return len(prev_seq)

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-2<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert get_total_number_of_sequences(4,4) == 0
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def get_total_number_of_sequences(m, n):
    if m < 2 or n <= 0:
        return 0
    elif n == 1:
        return m
    else:
        prev_seq = [i for i in range(1, m+1)]
        for i in range(2, n+1):
            curr_seq = []
            for j in range(len(prev_seq)):
                curr_max = prev_seq[j] * 2 - 1
                for k in range(prev_seq[j], min(m+1, curr_max+1)):
                    curr_seq.append(k)
            prev_seq = curr_seq
        return len(prev_seq)
```
