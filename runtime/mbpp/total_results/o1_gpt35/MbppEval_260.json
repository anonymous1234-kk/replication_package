{
    "task_id": "MbppEval/260",
    "iter_num": 33,
    "already_test_oracle_gt": {
        "t-38": 3
    },
    "pass_num_dict": {
        "s-74": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-38",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-79": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-38",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-85": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-38",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-5": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-7": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-11": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-20": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-23": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-30": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-34": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-41": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-47": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-48": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-49": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-50": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-57": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-64": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-68": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-82": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-89": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-90": [
            "t-1",
            "t-2",
            "t-19",
            "t-20",
            "t-21",
            "t-22",
            "t-23",
            "t-24",
            "t-25",
            "t-29",
            "t-30",
            "t-38",
            "t-40",
            "t-41"
        ],
        "s-33": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-80": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-28",
            "t-29",
            "t-30",
            "t-38",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-83": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-21",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-59": [
            "t-0",
            "t-1",
            "t-2",
            "t-18",
            "t-19",
            "t-20",
            "t-28",
            "t-29",
            "t-30",
            "t-39",
            "t-40",
            "t-41"
        ],
        "s-18": [
            "t-1",
            "t-2",
            "t-19",
            "t-20",
            "t-21",
            "t-29",
            "t-30",
            "t-40",
            "t-41"
        ],
        "s-38": [
            "t-1",
            "t-2",
            "t-19",
            "t-20",
            "t-21",
            "t-29",
            "t-30",
            "t-40",
            "t-41"
        ],
        "s-60": [
            "t-0",
            "t-1",
            "t-18",
            "t-19",
            "t-28",
            "t-29",
            "t-38",
            "t-39",
            "t-40"
        ],
        "s-9": [
            "t-0",
            "t-1",
            "t-18",
            "t-19",
            "t-28",
            "t-29",
            "t-39",
            "t-40"
        ],
        "s-14": [
            "t-0",
            "t-1",
            "t-18",
            "t-19",
            "t-28",
            "t-29",
            "t-39",
            "t-40"
        ],
        "s-31": [
            "t-0",
            "t-1",
            "t-18",
            "t-19",
            "t-28",
            "t-29",
            "t-39",
            "t-40"
        ],
        "s-35": [
            "t-0",
            "t-1",
            "t-18",
            "t-19",
            "t-28",
            "t-29",
            "t-39",
            "t-40"
        ],
        "s-42": [
            "t-0",
            "t-1",
            "t-18",
            "t-19",
            "t-28",
            "t-29",
            "t-39",
            "t-40"
        ],
        "s-54": [
            "t-0",
            "t-1",
            "t-18",
            "t-19",
            "t-28",
            "t-29",
            "t-39",
            "t-40"
        ],
        "s-97": [
            "t-0",
            "t-1",
            "t-18",
            "t-19",
            "t-28",
            "t-29",
            "t-39",
            "t-40"
        ],
        "s-87": [
            "t-0",
            "t-18",
            "t-23",
            "t-24",
            "t-25",
            "t-28",
            "t-39"
        ],
        "s-13": [
            "t-2",
            "t-20",
            "t-21",
            "t-30",
            "t-41"
        ],
        "s-37": [
            "t-0",
            "t-18",
            "t-28",
            "t-38",
            "t-39"
        ],
        "s-4": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-6": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-8": [
            "t-1",
            "t-19",
            "t-29",
            "t-40"
        ],
        "s-15": [
            "t-1",
            "t-19",
            "t-29",
            "t-40"
        ],
        "s-40": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-44": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-53": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-62": [
            "t-1",
            "t-19",
            "t-29",
            "t-40"
        ],
        "s-66": [
            "t-1",
            "t-19",
            "t-29",
            "t-40"
        ],
        "s-67": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-70": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-71": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-72": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-75": [
            "t-1",
            "t-19",
            "t-29",
            "t-40"
        ],
        "s-77": [
            "t-1",
            "t-19",
            "t-29",
            "t-40"
        ],
        "s-78": [
            "t-1",
            "t-19",
            "t-29",
            "t-40"
        ],
        "s-81": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-94": [
            "t-0",
            "t-18",
            "t-28",
            "t-39"
        ],
        "s-32": [
            "t-38"
        ],
        "s-46": [
            "t-38"
        ],
        "s-0": [],
        "s-1": [],
        "s-2": [],
        "s-3": [],
        "s-10": [],
        "s-12": [],
        "s-16": [],
        "s-17": [],
        "s-19": [],
        "s-21": [],
        "s-22": [],
        "s-24": [],
        "s-25": [],
        "s-26": [],
        "s-27": [],
        "s-28": [],
        "s-29": [],
        "s-36": [],
        "s-39": [],
        "s-43": [],
        "s-45": [],
        "s-51": [],
        "s-52": [],
        "s-55": [],
        "s-56": [],
        "s-58": [],
        "s-61": [],
        "s-63": [],
        "s-65": [],
        "s-69": [],
        "s-73": [],
        "s-76": [],
        "s-84": [],
        "s-86": [],
        "s-88": [],
        "s-91": [],
        "s-92": [],
        "s-93": [],
        "s-95": [],
        "s-96": [],
        "s-98": [],
        "s-99": []
    },
    "code_test_output": {
        "s-0": {
            "t-0": null,
            "t-1": null,
            "t-2": null,
            "t-18": null,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": null,
            "t-29": null,
            "t-30": null,
            "t-38": null,
            "t-39": null,
            "t-40": null,
            "t-41": null
        },
        "s-1": {
            "t-0": 11,
            "t-1": null,
            "t-2": null,
            "t-18": 11,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 11,
            "t-29": null,
            "t-30": null,
            "t-38": 7,
            "t-39": 11,
            "t-40": null,
            "t-41": null
        },
        "s-2": {
            "t-0": 3,
            "t-1": 8,
            "t-2": 19,
            "t-18": 3,
            "t-19": 8,
            "t-20": 19,
            "t-21": 42,
            "t-22": 89,
            "t-23": 184,
            "t-24": 375,
            "t-25": 758,
            "t-28": 3,
            "t-29": 8,
            "t-30": 19,
            "t-38": 1,
            "t-39": 3,
            "t-40": 8,
            "t-41": 19
        },
        "s-3": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 9,
            "t-18": 3,
            "t-19": 5,
            "t-20": 9,
            "t-21": 13,
            "t-22": 21,
            "t-23": 25,
            "t-24": 33,
            "t-25": 37,
            "t-28": 3,
            "t-29": 5,
            "t-30": 9,
            "t-38": 1,
            "t-39": 3,
            "t-40": 5,
            "t-41": 9
        },
        "s-4": {
            "t-0": 2,
            "t-1": 5,
            "t-2": 27,
            "t-18": 2,
            "t-19": 5,
            "t-20": 27,
            "t-21": 121,
            "t-22": 503,
            "t-23": 2037,
            "t-24": 8179,
            "t-25": 32753,
            "t-28": 2,
            "t-29": 5,
            "t-30": 27,
            "t-38": 2,
            "t-39": 2,
            "t-40": 5,
            "t-41": 27
        },
        "s-5": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-6": {
            "t-0": 2,
            "t-1": 2,
            "t-2": 7,
            "t-18": 2,
            "t-19": 2,
            "t-20": 7,
            "t-21": 23,
            "t-22": 47,
            "t-23": 119,
            "t-24": 167,
            "t-25": 287,
            "t-28": 2,
            "t-29": 2,
            "t-30": 7,
            "t-38": 1,
            "t-39": 2,
            "t-40": 2,
            "t-41": 7
        },
        "s-7": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-8": {
            "t-0": 1,
            "t-1": 3,
            "t-2": 7,
            "t-18": 1,
            "t-19": 3,
            "t-20": 7,
            "t-21": 13,
            "t-22": 31,
            "t-23": 43,
            "t-24": 73,
            "t-25": 157,
            "t-28": 1,
            "t-29": 3,
            "t-30": 7,
            "t-38": 0,
            "t-39": 1,
            "t-40": 3,
            "t-41": 7
        },
        "s-9": {
            "t-0": 2,
            "t-1": 3,
            "t-2": null,
            "t-18": 2,
            "t-19": 3,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 3,
            "t-30": null,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": null
        },
        "s-10": {
            "t-0": 15,
            "t-1": 35,
            "t-2": 99,
            "t-18": 15,
            "t-19": 35,
            "t-20": 99,
            "t-21": 195,
            "t-22": 483,
            "t-23": 675,
            "t-24": 1155,
            "t-25": 1443,
            "t-28": 15,
            "t-29": 35,
            "t-30": 99,
            "t-38": 1,
            "t-39": 15,
            "t-40": 35,
            "t-41": 99
        },
        "s-11": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 2,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-12": {
            "t-0": 11,
            "t-1": 55,
            "t-2": 57,
            "t-18": 11,
            "t-19": 55,
            "t-20": 57,
            "t-21": 275,
            "t-22": 321,
            "t-23": 285,
            "t-24": 285,
            "t-25": 1375,
            "t-28": 11,
            "t-29": 55,
            "t-30": 57,
            "t-38": 7,
            "t-39": 11,
            "t-40": 55,
            "t-41": 57
        },
        "s-13": {
            "t-0": 1,
            "t-1": 2,
            "t-2": 5,
            "t-18": 1,
            "t-19": 2,
            "t-20": 5,
            "t-21": 7,
            "t-22": 9,
            "t-23": 10,
            "t-24": 11,
            "t-25": 13,
            "t-28": 1,
            "t-29": 2,
            "t-30": 5,
            "t-38": 0,
            "t-39": 1,
            "t-40": 2,
            "t-41": 5
        },
        "s-14": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 7,
            "t-18": 2,
            "t-19": 3,
            "t-20": 7,
            "t-21": 31,
            "t-22": 127,
            "t-23": 8191,
            "t-24": 131071,
            "t-25": 524287,
            "t-28": 2,
            "t-29": 3,
            "t-30": 7,
            "t-38": 2,
            "t-39": 2,
            "t-40": 3,
            "t-41": 7
        },
        "s-15": {
            "t-0": 1,
            "t-1": 3,
            "t-2": 7,
            "t-18": 1,
            "t-19": 3,
            "t-20": 7,
            "t-21": 13,
            "t-22": 31,
            "t-23": 43,
            "t-24": 73,
            "t-25": 157,
            "t-28": 1,
            "t-29": 3,
            "t-30": 7,
            "t-38": null,
            "t-39": 1,
            "t-40": 3,
            "t-41": 7
        },
        "s-16": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 9,
            "t-18": 3,
            "t-19": 5,
            "t-20": 9,
            "t-21": 13,
            "t-22": 21,
            "t-23": 25,
            "t-24": 33,
            "t-25": 37,
            "t-28": 3,
            "t-29": 5,
            "t-30": 9,
            "t-38": 1,
            "t-39": 3,
            "t-40": 5,
            "t-41": 9
        },
        "s-17": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 9,
            "t-18": 3,
            "t-19": 5,
            "t-20": 9,
            "t-21": 13,
            "t-22": 21,
            "t-23": 25,
            "t-24": 33,
            "t-25": 37,
            "t-28": 3,
            "t-29": 5,
            "t-30": 9,
            "t-38": 1,
            "t-39": 3,
            "t-40": 5,
            "t-41": 9
        },
        "s-18": {
            "t-0": 3,
            "t-1": 3,
            "t-2": 5,
            "t-18": 3,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 3,
            "t-23": 5,
            "t-24": 7,
            "t-25": 11,
            "t-28": 3,
            "t-29": 3,
            "t-30": 5,
            "t-38": null,
            "t-39": 3,
            "t-40": 3,
            "t-41": 5
        },
        "s-19": {
            "t-0": null,
            "t-1": null,
            "t-2": null,
            "t-18": null,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": null,
            "t-29": null,
            "t-30": null,
            "t-38": null,
            "t-39": null,
            "t-40": null,
            "t-41": null
        },
        "s-20": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 2,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-21": {
            "t-0": -1,
            "t-1": -1,
            "t-2": -1,
            "t-18": -1,
            "t-19": -1,
            "t-20": -1,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": -1,
            "t-29": -1,
            "t-30": -1,
            "t-38": 1,
            "t-39": -1,
            "t-40": -1,
            "t-41": -1
        },
        "s-22": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 17,
            "t-18": 3,
            "t-19": 5,
            "t-20": 17,
            "t-21": 257,
            "t-22": 65537,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 3,
            "t-29": 5,
            "t-30": 17,
            "t-38": 2,
            "t-39": 3,
            "t-40": 5,
            "t-41": 17
        },
        "s-23": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-24": {
            "t-0": 1,
            "t-1": null,
            "t-2": null,
            "t-18": 1,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 1,
            "t-29": null,
            "t-30": null,
            "t-38": -1,
            "t-39": 1,
            "t-40": null,
            "t-41": null
        },
        "s-25": {
            "t-0": null,
            "t-1": null,
            "t-2": null,
            "t-18": null,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": null,
            "t-29": null,
            "t-30": null,
            "t-38": null,
            "t-39": null,
            "t-40": null,
            "t-41": null
        },
        "s-26": {
            "t-0": 7,
            "t-1": null,
            "t-2": null,
            "t-18": 7,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 7,
            "t-29": null,
            "t-30": null,
            "t-38": null,
            "t-39": 7,
            "t-40": null,
            "t-41": null
        },
        "s-27": {
            "t-0": 11,
            "t-1": 23,
            "t-2": 29,
            "t-18": 11,
            "t-19": 23,
            "t-20": 29,
            "t-21": 41,
            "t-22": 47,
            "t-23": 53,
            "t-24": 59,
            "t-25": 71,
            "t-28": 11,
            "t-29": 23,
            "t-30": 29,
            "t-38": 1,
            "t-39": 11,
            "t-40": 23,
            "t-41": 29
        },
        "s-28": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 17,
            "t-18": 3,
            "t-19": 5,
            "t-20": 17,
            "t-21": 257,
            "t-22": 65537,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 3,
            "t-29": 5,
            "t-30": 17,
            "t-38": null,
            "t-39": 3,
            "t-40": 5,
            "t-41": 17
        },
        "s-29": {
            "t-0": 11,
            "t-1": 13,
            "t-2": 17,
            "t-18": 11,
            "t-19": 13,
            "t-20": 17,
            "t-21": 19,
            "t-22": 23,
            "t-23": 29,
            "t-24": 31,
            "t-25": 37,
            "t-28": 11,
            "t-29": 13,
            "t-30": 17,
            "t-38": 7,
            "t-39": 11,
            "t-40": 13,
            "t-41": 17
        },
        "s-30": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 2,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-31": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 4,
            "t-18": 2,
            "t-19": 3,
            "t-20": 4,
            "t-21": 5,
            "t-22": 6,
            "t-23": 7,
            "t-24": 8,
            "t-25": 9,
            "t-28": 2,
            "t-29": 3,
            "t-30": 4,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 4
        },
        "s-32": {
            "t-0": 5,
            "t-1": 17,
            "t-2": 257,
            "t-18": 5,
            "t-19": 17,
            "t-20": 257,
            "t-21": 65537,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 5,
            "t-29": 17,
            "t-30": 257,
            "t-38": 3,
            "t-39": 5,
            "t-40": 17,
            "t-41": 257
        },
        "s-33": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 10,
            "t-23": 11,
            "t-24": 12,
            "t-25": 13,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-34": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-35": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 4,
            "t-18": 2,
            "t-19": 3,
            "t-20": 4,
            "t-21": 5,
            "t-22": 6,
            "t-23": 8,
            "t-24": 10,
            "t-25": 11,
            "t-28": 2,
            "t-29": 3,
            "t-30": 4,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": 4
        },
        "s-36": {
            "t-0": null,
            "t-1": null,
            "t-2": null,
            "t-18": null,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": null,
            "t-29": null,
            "t-30": null,
            "t-38": 1,
            "t-39": null,
            "t-40": null,
            "t-41": null
        },
        "s-37": {
            "t-0": 2,
            "t-1": 5,
            "t-2": 9,
            "t-18": 2,
            "t-19": 5,
            "t-20": 9,
            "t-21": 13,
            "t-22": 21,
            "t-23": 25,
            "t-24": 33,
            "t-25": 37,
            "t-28": 2,
            "t-29": 5,
            "t-30": 9,
            "t-38": 3,
            "t-39": 2,
            "t-40": 5,
            "t-41": 9
        },
        "s-38": {
            "t-0": 3,
            "t-1": 3,
            "t-2": 5,
            "t-18": 3,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 3,
            "t-23": 5,
            "t-24": 7,
            "t-25": 11,
            "t-28": 3,
            "t-29": 3,
            "t-30": 5,
            "t-38": 0,
            "t-39": 3,
            "t-40": 3,
            "t-41": 5
        },
        "s-39": {
            "t-0": 3,
            "t-1": 7,
            "t-2": 31,
            "t-18": 3,
            "t-19": 7,
            "t-20": 31,
            "t-21": 127,
            "t-22": 8191,
            "t-23": 131071,
            "t-24": 524287,
            "t-25": 2147483647,
            "t-28": 3,
            "t-29": 7,
            "t-30": 31,
            "t-38": null,
            "t-39": 3,
            "t-40": 7,
            "t-41": 31
        },
        "s-40": {
            "t-0": 2,
            "t-1": 5,
            "t-2": 29,
            "t-18": 2,
            "t-19": 5,
            "t-20": 29,
            "t-21": 5741,
            "t-22": 33461,
            "t-23": 44560482149,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 5,
            "t-30": 29,
            "t-38": 0,
            "t-39": 2,
            "t-40": 5,
            "t-41": 29
        },
        "s-41": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-42": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 43,
            "t-18": 2,
            "t-19": 3,
            "t-20": 43,
            "t-21": 49477,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 3,
            "t-30": 43,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 43
        },
        "s-43": {
            "t-0": 5,
            "t-1": 7,
            "t-2": 11,
            "t-18": 5,
            "t-19": 7,
            "t-20": 11,
            "t-21": 23,
            "t-22": 47,
            "t-23": 59,
            "t-24": 83,
            "t-25": 107,
            "t-28": 5,
            "t-29": 7,
            "t-30": 11,
            "t-38": 1,
            "t-39": 5,
            "t-40": 7,
            "t-41": 11
        },
        "s-44": {
            "t-0": 2,
            "t-1": 7,
            "t-2": 23,
            "t-18": 2,
            "t-19": 7,
            "t-20": 23,
            "t-21": 47,
            "t-22": 119,
            "t-23": 167,
            "t-24": 287,
            "t-25": 359,
            "t-28": 2,
            "t-29": 7,
            "t-30": 23,
            "t-38": 1,
            "t-39": 2,
            "t-40": 7,
            "t-41": 23
        },
        "s-45": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 7,
            "t-18": 3,
            "t-19": 5,
            "t-20": 7,
            "t-21": 11,
            "t-22": 13,
            "t-23": 17,
            "t-24": 19,
            "t-25": 23,
            "t-28": 3,
            "t-29": 5,
            "t-30": 7,
            "t-38": 0,
            "t-39": 3,
            "t-40": 5,
            "t-41": 7
        },
        "s-46": {
            "t-0": 3,
            "t-1": 4,
            "t-2": 6,
            "t-18": 3,
            "t-19": 4,
            "t-20": 6,
            "t-21": 8,
            "t-22": 12,
            "t-23": 14,
            "t-24": 18,
            "t-25": 20,
            "t-28": 3,
            "t-29": 4,
            "t-30": 6,
            "t-38": 3,
            "t-39": 3,
            "t-40": 4,
            "t-41": 6
        },
        "s-47": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-48": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-49": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-50": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-51": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 9,
            "t-18": 3,
            "t-19": 5,
            "t-20": 9,
            "t-21": 13,
            "t-22": 21,
            "t-23": 25,
            "t-24": 33,
            "t-25": 37,
            "t-28": 3,
            "t-29": 5,
            "t-30": 9,
            "t-38": null,
            "t-39": 3,
            "t-40": 5,
            "t-41": 9
        },
        "s-52": {
            "t-0": 1,
            "t-1": 1,
            "t-2": 1,
            "t-18": 1,
            "t-19": 1,
            "t-20": 1,
            "t-21": 1,
            "t-22": 1,
            "t-23": 1,
            "t-24": 1,
            "t-25": 1,
            "t-28": 1,
            "t-29": 1,
            "t-30": 1,
            "t-38": 1,
            "t-39": 1,
            "t-40": 1,
            "t-41": 1
        },
        "s-53": {
            "t-0": 2,
            "t-1": null,
            "t-2": null,
            "t-18": 2,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": null,
            "t-30": null,
            "t-38": 1,
            "t-39": 2,
            "t-40": null,
            "t-41": null
        },
        "s-54": {
            "t-0": 2,
            "t-1": 3,
            "t-2": null,
            "t-18": 2,
            "t-19": 3,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 3,
            "t-30": null,
            "t-38": 0,
            "t-39": 2,
            "t-40": 3,
            "t-41": null
        },
        "s-55": {
            "t-0": 3,
            "t-1": null,
            "t-2": null,
            "t-18": 3,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 3,
            "t-29": null,
            "t-30": null,
            "t-38": 1,
            "t-39": 3,
            "t-40": null,
            "t-41": null
        },
        "s-56": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 17,
            "t-18": 3,
            "t-19": 5,
            "t-20": 17,
            "t-21": 257,
            "t-22": 65537,
            "t-23": 4294967297,
            "t-24": 18446744073709551617,
            "t-25": 340282366920938463463374607431768211457,
            "t-28": 3,
            "t-29": 5,
            "t-30": 17,
            "t-38": 1,
            "t-39": 3,
            "t-40": 5,
            "t-41": 17
        },
        "s-57": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 1,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-58": {
            "t-0": 11,
            "t-1": 17,
            "t-2": 32,
            "t-18": 11,
            "t-19": 17,
            "t-20": 32,
            "t-21": 41,
            "t-22": 239,
            "t-23": 473,
            "t-24": 931,
            "t-25": 1853,
            "t-28": 11,
            "t-29": 17,
            "t-30": 32,
            "t-38": 7,
            "t-39": 11,
            "t-40": 17,
            "t-41": 32
        },
        "s-59": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 17,
            "t-22": 257,
            "t-23": 65537,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-60": {
            "t-0": 2,
            "t-1": 3,
            "t-2": null,
            "t-18": 2,
            "t-19": 3,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 3,
            "t-30": null,
            "t-38": 3,
            "t-39": 2,
            "t-40": 3,
            "t-41": null
        },
        "s-61": {
            "t-0": 3,
            "t-1": 7,
            "t-2": 31,
            "t-18": 3,
            "t-19": 7,
            "t-20": 31,
            "t-21": 127,
            "t-22": 8191,
            "t-23": 131071,
            "t-24": 524287,
            "t-25": 2147483647,
            "t-28": 3,
            "t-29": 7,
            "t-30": 31,
            "t-38": 1,
            "t-39": 3,
            "t-40": 7,
            "t-41": 31
        },
        "s-62": {
            "t-0": 1,
            "t-1": 3,
            "t-2": 15,
            "t-18": 1,
            "t-19": 3,
            "t-20": 15,
            "t-21": 255,
            "t-22": 65535,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 1,
            "t-29": 3,
            "t-30": 15,
            "t-38": 0,
            "t-39": 1,
            "t-40": 3,
            "t-41": 15
        },
        "s-63": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 17,
            "t-18": 3,
            "t-19": 5,
            "t-20": 17,
            "t-21": 257,
            "t-22": 65537,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 3,
            "t-29": 5,
            "t-30": 17,
            "t-38": null,
            "t-39": 3,
            "t-40": 5,
            "t-41": 17
        },
        "s-64": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-65": {
            "t-0": 0,
            "t-1": 1,
            "t-2": 2,
            "t-18": 0,
            "t-19": 1,
            "t-20": 2,
            "t-21": 5,
            "t-22": 29,
            "t-23": 5741,
            "t-24": 33461,
            "t-25": 44560482149,
            "t-28": 0,
            "t-29": 1,
            "t-30": 2,
            "t-38": null,
            "t-39": 0,
            "t-40": 1,
            "t-41": 2
        },
        "s-66": {
            "t-0": 1,
            "t-1": 3,
            "t-2": 7,
            "t-18": 1,
            "t-19": 3,
            "t-20": 7,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 1,
            "t-29": 3,
            "t-30": 7,
            "t-38": 0,
            "t-39": 1,
            "t-40": 3,
            "t-41": 7
        },
        "s-67": {
            "t-0": 2,
            "t-1": 5,
            "t-2": 29,
            "t-18": 2,
            "t-19": 5,
            "t-20": 29,
            "t-21": 5741,
            "t-22": 33461,
            "t-23": 44560482149,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 5,
            "t-30": 29,
            "t-38": null,
            "t-39": 2,
            "t-40": 5,
            "t-41": 29
        },
        "s-68": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 2,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-69": {
            "t-0": 3,
            "t-1": 7,
            "t-2": 31,
            "t-18": 3,
            "t-19": 7,
            "t-20": 31,
            "t-21": 127,
            "t-22": null,
            "t-23": 8191,
            "t-24": 131071,
            "t-25": 524287,
            "t-28": 3,
            "t-29": 7,
            "t-30": 31,
            "t-38": null,
            "t-39": 3,
            "t-40": 7,
            "t-41": 31
        },
        "s-70": {
            "t-0": 2,
            "t-1": 5,
            "t-2": 29,
            "t-18": 2,
            "t-19": 5,
            "t-20": 29,
            "t-21": 5741,
            "t-22": 33461,
            "t-23": 44560482149,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 5,
            "t-30": 29,
            "t-38": null,
            "t-39": 2,
            "t-40": 5,
            "t-41": 29
        },
        "s-71": {
            "t-0": 2,
            "t-1": 257,
            "t-2": 4294967297,
            "t-18": 2,
            "t-19": 257,
            "t-20": 4294967297,
            "t-21": 340282366920938463463374607431768211457,
            "t-22": 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084097,
            "t-23": 32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230657,
            "t-24": 1090748135619415929462984244733782862448264161996232692431832786189721331849119295216264234525201987223957291796157025273109870820177184063610979765077554799078906298842192989538609825228048205159696851613591638196771886542609324560121290553901886301017900252535799917200010079600026535836800905297805880952350501630195475653911005312364560014847426035293551245843928918752768696279344088055617515694349945406677825140814900616105920256438504578013326493565836047242407382442812245131517757519164899226365743722432277368075027627883045206501792761700945699168497257879683851737049996900961120515655050115561271491492515342105748966629547032786321505730828430221664970324396138635251626409516168005427623435996308921691446181187406395310665404885739434832877428167407495370993511868756359970390117021823616749458620969857006263612082706715408157066575137281027022310927564910276759160520878304632411049364568754920967322982459184763427383790272448438018526977764941072715611580434690827459339991961414242741410599117426060556483763756314527611362658628383368621157993638020878537675545336789915694234433955666315070087213535470255670312004130725495834508357439653828936077080978550578912967907352780054935621561090795845172954115972927479877527738560008204118558930004777748727761853813510493840581861598652211605960308356405941821189714037868726219481498727603653616298856174822413033485438785324024751419417183012281078209729303537372804574372095228703622776363945290869806258422355148507571039619387449629866808188769662815778153079393179093143648340761738581819563002994422790754955061288818308430079648693232179158765918035565216157115402992120276155607873107937477466841528362987708699450152031231862594203085693838944657061346236704234026821102958954951197087076546186622796294536451620756509351018906023773821539532776208676978589731966330308893304665169436185078350641568336944530051437491311298834367265238595404904273455928723949525227184617404367854754610474377019768025576605881038077270707717942221977090385438585844095492116099852538903974655703943973086090930596963360767529964938414598185705963754561497355827813623833288906309004288017321424808663962671333528009232758350873059614118723781422101460198615747386855096896089189180441339558524822867541113212638793675567650340362970031930023397828465318547238244232028015189689660418822976000815437610652254270163595650875433851147123214227266605403581781469090806576468950587661997186505665475715792897,
            "t-25": ,
            "t-28": 2,
            "t-29": 257,
            "t-30": 4294967297,
            "t-38": null,
            "t-39": 2,
            "t-40": 257,
            "t-41": 4294967297
        },
        "s-72": {
            "t-0": 2,
            "t-1": 5,
            "t-2": 17,
            "t-18": 2,
            "t-19": 5,
            "t-20": 17,
            "t-21": 37,
            "t-22": 101,
            "t-23": 197,
            "t-24": 257,
            "t-25": 401,
            "t-28": 2,
            "t-29": 5,
            "t-30": 17,
            "t-38": null,
            "t-39": 2,
            "t-40": 5,
            "t-41": 17
        },
        "s-73": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 9,
            "t-18": 3,
            "t-19": 5,
            "t-20": 9,
            "t-21": 13,
            "t-22": 21,
            "t-23": 25,
            "t-24": 33,
            "t-25": 37,
            "t-28": 3,
            "t-29": 5,
            "t-30": 9,
            "t-38": 5,
            "t-39": 3,
            "t-40": 5,
            "t-41": 9
        },
        "s-74": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 3,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-75": {
            "t-0": 3,
            "t-1": 3,
            "t-2": 17,
            "t-18": 3,
            "t-19": 3,
            "t-20": 17,
            "t-21": 19,
            "t-22": 3,
            "t-23": 17,
            "t-24": 19,
            "t-25": 577,
            "t-28": 3,
            "t-29": 3,
            "t-30": 17,
            "t-38": null,
            "t-39": 3,
            "t-40": 3,
            "t-41": 17
        },
        "s-76": {
            "t-0": null,
            "t-1": null,
            "t-2": null,
            "t-18": null,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": null,
            "t-29": null,
            "t-30": null,
            "t-38": 0,
            "t-39": null,
            "t-40": null,
            "t-41": null
        },
        "s-77": {
            "t-0": 1,
            "t-1": 3,
            "t-2": 7,
            "t-18": 1,
            "t-19": 3,
            "t-20": 7,
            "t-21": 17,
            "t-22": 41,
            "t-23": 99,
            "t-24": 239,
            "t-25": 577,
            "t-28": 1,
            "t-29": 3,
            "t-30": 7,
            "t-38": 1,
            "t-39": 1,
            "t-40": 3,
            "t-41": 7
        },
        "s-78": {
            "t-0": 1,
            "t-1": 3,
            "t-2": null,
            "t-18": 1,
            "t-19": 3,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 1,
            "t-29": 3,
            "t-30": null,
            "t-38": null,
            "t-39": 1,
            "t-40": 3,
            "t-41": null
        },
        "s-79": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 3,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-80": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 17,
            "t-22": 257,
            "t-23": 65537,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 3,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-81": {
            "t-0": 2,
            "t-1": 5,
            "t-2": 17,
            "t-18": 2,
            "t-19": 5,
            "t-20": 17,
            "t-21": 257,
            "t-22": 65537,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 5,
            "t-30": 17,
            "t-38": null,
            "t-39": 2,
            "t-40": 5,
            "t-41": 17
        },
        "s-82": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-83": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 13,
            "t-23": 17,
            "t-24": 19,
            "t-25": 31,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-84": {
            "t-0": 11,
            "t-1": 11,
            "t-2": 13,
            "t-18": 11,
            "t-19": 11,
            "t-20": 13,
            "t-21": 17,
            "t-22": 19,
            "t-23": 23,
            "t-24": 29,
            "t-25": 31,
            "t-28": 11,
            "t-29": 11,
            "t-30": 13,
            "t-38": 7,
            "t-39": 11,
            "t-40": 11,
            "t-41": 13
        },
        "s-85": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 3,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-86": {
            "t-0": 5,
            "t-1": 7,
            "t-2": 11,
            "t-18": 5,
            "t-19": 7,
            "t-20": 11,
            "t-21": 15,
            "t-22": 23,
            "t-23": 27,
            "t-24": 35,
            "t-25": 39,
            "t-28": 5,
            "t-29": 7,
            "t-30": 11,
            "t-38": 1,
            "t-39": 5,
            "t-40": 7,
            "t-41": 11
        },
        "s-87": {
            "t-0": 2,
            "t-1": 2,
            "t-2": 3,
            "t-18": 2,
            "t-19": 2,
            "t-20": 3,
            "t-21": 5,
            "t-22": 7,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 2,
            "t-30": 3,
            "t-38": 1,
            "t-39": 2,
            "t-40": 2,
            "t-41": 3
        },
        "s-88": {
            "t-0": 37,
            "t-1": 787,
            "t-2": 488287,
            "t-18": 37,
            "t-19": 787,
            "t-20": 488287,
            "t-21": 7629394537,
            "t-22": 119209289550787,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 37,
            "t-29": 787,
            "t-30": 488287,
            "t-38": 7,
            "t-39": 37,
            "t-40": 787,
            "t-41": 488287
        },
        "s-89": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 5,
            "t-18": 2,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 2,
            "t-29": 3,
            "t-30": 5,
            "t-38": 2,
            "t-39": 2,
            "t-40": 3,
            "t-41": 5
        },
        "s-90": {
            "t-0": 3,
            "t-1": 3,
            "t-2": 5,
            "t-18": 3,
            "t-19": 3,
            "t-20": 5,
            "t-21": 7,
            "t-22": 11,
            "t-23": 13,
            "t-24": 17,
            "t-25": 19,
            "t-28": 3,
            "t-29": 3,
            "t-30": 5,
            "t-38": 3,
            "t-39": 3,
            "t-40": 3,
            "t-41": 5
        },
        "s-91": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 7,
            "t-18": 3,
            "t-19": 5,
            "t-20": 7,
            "t-21": 11,
            "t-22": 13,
            "t-23": 17,
            "t-24": 19,
            "t-25": 23,
            "t-28": 3,
            "t-29": 5,
            "t-30": 7,
            "t-38": 0,
            "t-39": 3,
            "t-40": 5,
            "t-41": 7
        },
        "s-92": {
            "t-0": null,
            "t-1": 2,
            "t-2": 3,
            "t-18": null,
            "t-19": 2,
            "t-20": 3,
            "t-21": 5,
            "t-22": 5,
            "t-23": 7,
            "t-24": null,
            "t-25": 11,
            "t-28": null,
            "t-29": 2,
            "t-30": 3,
            "t-38": null,
            "t-39": null,
            "t-40": 2,
            "t-41": 3
        },
        "s-93": {
            "t-0": 11,
            "t-1": 29,
            "t-2": 69,
            "t-18": 11,
            "t-19": 29,
            "t-20": 69,
            "t-21": 167,
            "t-22": 403,
            "t-23": 973,
            "t-24": 2349,
            "t-25": 5671,
            "t-28": 11,
            "t-29": 29,
            "t-30": 69,
            "t-38": 7,
            "t-39": 11,
            "t-40": 29,
            "t-41": 69
        },
        "s-94": {
            "t-0": 2,
            "t-1": null,
            "t-2": null,
            "t-18": 2,
            "t-19": null,
            "t-20": null,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": null,
            "t-30": null,
            "t-38": 1,
            "t-39": 2,
            "t-40": null,
            "t-41": null
        },
        "s-95": {
            "t-0": 7,
            "t-1": 17,
            "t-2": 23,
            "t-18": 7,
            "t-19": 17,
            "t-20": 23,
            "t-21": 31,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 7,
            "t-29": 17,
            "t-30": 23,
            "t-38": 0,
            "t-39": 7,
            "t-40": 17,
            "t-41": 23
        },
        "s-96": {
            "t-0": 11,
            "t-1": 2377,
            "t-2": 13859,
            "t-18": 11,
            "t-19": 2377,
            "t-20": 13859,
            "t-21": 470831,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 11,
            "t-29": 2377,
            "t-30": 13859,
            "t-38": null,
            "t-39": 11,
            "t-40": 2377,
            "t-41": 13859
        },
        "s-97": {
            "t-0": 2,
            "t-1": 3,
            "t-2": 2,
            "t-18": 2,
            "t-19": 3,
            "t-20": 2,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 2,
            "t-29": 3,
            "t-30": 2,
            "t-38": null,
            "t-39": 2,
            "t-40": 3,
            "t-41": 2
        },
        "s-98": {
            "t-0": 7,
            "t-1": 37,
            "t-2": 1297,
            "t-18": 7,
            "t-19": 37,
            "t-20": 1297,
            "t-21": null,
            "t-22": null,
            "t-23": null,
            "t-24": null,
            "t-25": null,
            "t-28": 7,
            "t-29": 37,
            "t-30": 1297,
            "t-38": 7,
            "t-39": 7,
            "t-40": 37,
            "t-41": 1297
        },
        "s-99": {
            "t-0": 3,
            "t-1": 5,
            "t-2": 9,
            "t-18": 3,
            "t-19": 5,
            "t-20": 9,
            "t-21": 13,
            "t-22": 21,
            "t-23": 25,
            "t-24": 33,
            "t-25": 37,
            "t-28": 3,
            "t-29": 5,
            "t-30": 9,
            "t-38": 1,
            "t-39": 3,
            "t-40": 5,
            "t-41": 9
        }
    },
    "code_test_res": {
        "s-0": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-1": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-2": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-3": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-4": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-5": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-6": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-7": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-8": {
            "t-0": false,
            "t-1": true,
            "t-2": false,
            "t-18": false,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": false
        },
        "s-9": {
            "t-0": true,
            "t-1": true,
            "t-2": false,
            "t-18": true,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": false
        },
        "s-10": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-11": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-12": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-13": {
            "t-0": false,
            "t-1": false,
            "t-2": true,
            "t-18": false,
            "t-19": false,
            "t-20": true,
            "t-21": true,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": true,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": true
        },
        "s-14": {
            "t-0": true,
            "t-1": true,
            "t-2": false,
            "t-18": true,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": false
        },
        "s-15": {
            "t-0": false,
            "t-1": true,
            "t-2": false,
            "t-18": false,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": false
        },
        "s-16": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-17": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-18": {
            "t-0": false,
            "t-1": true,
            "t-2": true,
            "t-18": false,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": true
        },
        "s-19": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-20": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-21": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-22": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-23": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-24": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-25": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-26": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-27": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-28": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-29": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-30": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-31": {
            "t-0": true,
            "t-1": true,
            "t-2": false,
            "t-18": true,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": false
        },
        "s-32": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": true,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-33": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-34": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-35": {
            "t-0": true,
            "t-1": true,
            "t-2": false,
            "t-18": true,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": false
        },
        "s-36": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-37": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": true,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-38": {
            "t-0": false,
            "t-1": true,
            "t-2": true,
            "t-18": false,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": true
        },
        "s-39": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-40": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-41": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-42": {
            "t-0": true,
            "t-1": true,
            "t-2": false,
            "t-18": true,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": false
        },
        "s-43": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-44": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-45": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-46": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": true,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-47": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-48": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-49": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-50": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-51": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-52": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-53": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-54": {
            "t-0": true,
            "t-1": true,
            "t-2": false,
            "t-18": true,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": false
        },
        "s-55": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-56": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-57": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-58": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-59": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-60": {
            "t-0": true,
            "t-1": true,
            "t-2": false,
            "t-18": true,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-38": true,
            "t-39": true,
            "t-40": true,
            "t-41": false
        },
        "s-61": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-62": {
            "t-0": false,
            "t-1": true,
            "t-2": false,
            "t-18": false,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": false
        },
        "s-63": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-64": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-65": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-66": {
            "t-0": false,
            "t-1": true,
            "t-2": false,
            "t-18": false,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": false
        },
        "s-67": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-68": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-69": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-70": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-71": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-72": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-73": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-74": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": true,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-75": {
            "t-0": false,
            "t-1": true,
            "t-2": false,
            "t-18": false,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": false
        },
        "s-76": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-77": {
            "t-0": false,
            "t-1": true,
            "t-2": false,
            "t-18": false,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": false
        },
        "s-78": {
            "t-0": false,
            "t-1": true,
            "t-2": false,
            "t-18": false,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": true,
            "t-41": false
        },
        "s-79": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": true,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-80": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": true,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-81": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-82": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-83": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-84": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-85": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": true,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-86": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-87": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-88": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-89": {
            "t-0": true,
            "t-1": true,
            "t-2": true,
            "t-18": true,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": true
        },
        "s-90": {
            "t-0": false,
            "t-1": true,
            "t-2": true,
            "t-18": false,
            "t-19": true,
            "t-20": true,
            "t-21": true,
            "t-22": true,
            "t-23": true,
            "t-24": true,
            "t-25": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-38": true,
            "t-39": false,
            "t-40": true,
            "t-41": true
        },
        "s-91": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-92": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-93": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-94": {
            "t-0": true,
            "t-1": false,
            "t-2": false,
            "t-18": true,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": false,
            "t-41": false
        },
        "s-95": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-96": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-97": {
            "t-0": true,
            "t-1": true,
            "t-2": false,
            "t-18": true,
            "t-19": true,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-38": false,
            "t-39": true,
            "t-40": true,
            "t-41": false
        },
        "s-98": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        },
        "s-99": {
            "t-0": false,
            "t-1": false,
            "t-2": false,
            "t-18": false,
            "t-19": false,
            "t-20": false,
            "t-21": false,
            "t-22": false,
            "t-23": false,
            "t-24": false,
            "t-25": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-38": false,
            "t-39": false,
            "t-40": false,
            "t-41": false
        }
    },
    "solution_dict": {
        "s-0": " \n    if n == 0:\n        return 7\n    elif n == 1:\n        return 11\n    else:\n        return 2 * newman_prime(n-1) + newman_prime(n-2) - 2\n```\n\nThis function uses recursion to calculate the nth Newman-Shanks-Williams prime number based on the following formula:\n\n```\nP(0) = 7\nP(1) = 11\nP(n) = 2 * P(n-1) + P(n-2) - 2\n",
        "s-1": "\n    if n == 0:\n        return 7\n    elif n == 1:\n        return 11\n    else:\n        return 2 * newman_prime(n - 1) + newman_prime(n - 2) - 2 * newman_prime(n - 3)\n",
        "s-2": "\n    if n == 0:\n        return 1\n    \n    i = 0\n    num = 1\n    \n    while i < n:\n        num += 1\n        if is_newman_prime(num):\n            i += 1\n    \n    return num\n\ndef is_newman_prime(num):\n    i = 1\n    m = 1\n    \n    while m < num:\n        m = 2 * m + i\n        i += 1\n        \n    return m == num\n",
        "s-3": "\n    if n == 0:\n        return 1\n    \n    primes = [2]\n    candidate = 3\n    \n    while len(primes) < n:\n        is_prime = True\n        for p in primes:\n            if candidate % p == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(candidate)\n        candidate += 2\n        \n    return primes[-1] * 2 - 1\n",
        "s-4": " \n    primes = [2]\n    i = 1\n    while len(primes) < n:\n        i += 1\n        p = 2**i - i\n        for prime in primes:\n            if p % prime == 0:\n                break\n        else:\n            primes.append(p)\n    return primes[-1]\n",
        "s-5": " \n    if n == 1:\n        return 2\n    count = 1\n    num = 3\n    while count < n:\n        is_prime = True\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                is_prime = False\n                break\n        if is_prime:\n            count += 1\n        if count == n:\n            return num\n        num += 2\n",
        "s-6": "\n    if n == 0:\n        return 1\n\n    primes = [2]\n    candidate = 1\n\n    while len(primes) < n:\n        candidate += 1\n        is_prime = True\n\n        for prime in primes:\n            if prime > candidate ** 0.5:\n                break\n\n            if candidate % prime == 0:\n                is_prime = False\n                break\n\n        if is_prime:\n            primes.append(candidate)\n\n    return primes[-1] ** 2 - 2\n",
        "s-7": " \n    if n == 0:\n        return 1\n    else:\n        i = 1\n        count = 0\n        while count < n:\n            i += 1\n            if is_nsw_prime(i):\n                count += 1\n        return i\n\ndef is_nsw_prime(num):\n    if num == 0 or num == 1:\n        return False\n    for i in range(2, int(num ** 0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n",
        "s-8": " \n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        i = 1\n        j = 1\n        while n > 1:\n            i += 2*j\n            j += 1\n            if is_prime(i):\n                n -= 1\n        return i\n        \ndef is_prime(num):\n    if num < 2:\n        return False\n    for i in range(2, int(num**(1/2)) + 1):\n        if num % i == 0:\n            return False\n    return True\n",
        "s-9": "\n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x**0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n    \n    def ns_w(n):\n        if n == 0:\n            return 0\n        elif n == 1:\n            return 1\n        else:\n            for i in range(2, n+1):\n                if i % 2 == 0:\n                    x = ns_w(i//2)\n                    y = ns_w(i//2 - 1)\n                    if is_prime(x + y + 1):\n                        continue\n                    else:\n                        return i\n                else:\n                    x = ns_w(i//2)\n                    if is_prime(2*x + 3):\n                        continue\n                    else:\n                        return i\n        return n\n    \n    primes = []\n    i = 0\n    while len(primes) < n:\n        if is_prime(ns_w(i)):\n            primes.append(ns_w(i))\n        i += 1\n    return primes[-1]\n",
        "s-10": "\ndef newman_prime(n): \n    '''\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    '''\n\n    if n == 0:\n        return 1\n    primes = [2]\n    num = 3\n    while len(primes) < n:\n        for p in primes:\n            if num % p == 0:\n                break\n        else:\n            primes.append(num)\n        num += 2\n    return (2 * primes[-1]) ** 2 - 1\n",
        "s-11": "\n    if n == 1:\n        return 2\n    else:\n        primes = [2]\n        candidate = 3\n        while len(primes) < n:\n            is_prime = True\n            for p in primes:\n                if p**2 > candidate:\n                    break\n                if candidate % p == 0:\n                    is_prime = False\n                    break\n            if is_prime:\n                primes.append(candidate)\n            candidate += 2\n        return primes[-1]\n",
        "s-12": "\n    if n == 0:\n        return 7\n    elif n == 1:\n        return 11\n    else:\n        i, j = n // 2, n % 2\n        return 6 * newman_prime(i) - newman_prime(i - j) + 2 * (n % 2) * (-1) ** i\n",
        "s-13": "\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num**0.5)+1):\n            if num % i == 0:\n                return False\n        return True\n    \n    def is_nsw_prime(num):\n        if num == 0:\n            return False\n        elif num == 1:\n            return True\n        elif num == 2:\n            return True\n        else:\n            for i in range(1, num):\n                if ((i * i) % num) == 1:\n                    if is_prime(i):\n                        return False\n            return True\n    \n    count = 0\n    num = 0\n    while count < n:\n        num += 1\n        if is_nsw_prime(num):\n            count += 1\n    \n    return num\n",
        "s-14": "\n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x ** 0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n    \n    primes = [2]\n    num = 1\n    while len(primes) < n:\n        num += 1\n        if is_prime(num):\n            if is_prime((2 ** num) - 1):\n                primes.append((2 ** num) - 1)\n    return primes[-1]\n",
        "s-15": "\n    # Define the first two terms of the Newman-Shanks-Williams (NSW) sequence\n    a, b = 1, 1\n\n    # Define the list to store the NSW prime numbers\n    primes = []\n\n    # Iterate through the NSW sequence and check if each term is prime\n    while len(primes) < n:\n        # Check if the current term is prime\n        is_prime = True\n        for i in range(2, int(b ** 0.5) + 1):\n            if b % i == 0:\n                is_prime = False\n                break\n\n        # If the current term is prime, add it to the list of NSW prime numbers\n        if is_prime:\n            primes.append(b)\n\n        # Calculate the next term in the NSW sequence\n        a, b = b, 2 * b - a + 2\n\n    # Return the nth NSW prime number\n    return primes[-1]\n",
        "s-16": "\n    if n == 0:\n        return 1\n    else:\n        primes = [1, 2]\n        i = 2\n        while len(primes) < n + 1:\n            i += 1\n            is_prime = True\n            for j in range(2, i):\n                if i % j == 0:\n                    is_prime = False\n                    break\n            if is_prime:\n                primes.append(i)\n            else:\n                continue\n        return primes[n] * 2 - 1\n",
        "s-17": "\n    if n == 0:\n        return 1\n    else:\n        primes = [2]\n        num = 3\n        while len(primes) < n:\n            is_prime = True\n            for p in primes:\n                if num % p == 0:\n                    is_prime = False\n                    break\n            if is_prime:\n                primes.append(num)\n            num += 2\n        return primes[-1] * 2 - 1\n",
        "s-18": "\n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x ** 0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n\n    def nsw_prime(x):\n        if x == 0:\n            return 0\n        elif x == 1:\n            return 1\n        elif x % 2 == 0:\n            return 2 * nsw_prime(x // 2) - 1\n        else:\n            return 2 * nsw_prime(x // 2) + 1\n\n    primes = []\n    i = 0\n    while len(primes) < n:\n        p = nsw_prime(i)\n        if is_prime(p):\n            primes.append(p)\n        i += 1\n\n    return primes[-1]\n",
        "s-19": " \n    '''\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    '''\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n    \n    def nsw_prime(k):\n        if k == 0:\n            return 0\n        elif k == 1:\n            return 1\n        else:\n            return 2 * nsw_prime(k - 1) - nsw_prime(k - 2) + 2\n    \n    primes = []\n    i = 0\n    while len(primes) < n:\n        if is_prime(nsw_prime(i)):\n            primes.append(nsw_prime(i))\n        i += 1\n    \n    return primes[-1]\n",
        "s-20": "\n    if n == 1:\n        return 2\n    primes = [2]\n    candidate = 3\n    while len(primes) < n:\n        if all(candidate % p != 0 for p in primes):\n            primes.append(candidate)\n        candidate += 2\n    return primes[-1]\n",
        "s-21": " \n    def nsweven(u):\n        return 14*pow(21,u-1)-12*pow(7,u-1)\n    def nswodd(u):\n        return 22*pow(21,u-2)-7*pow(6,u-2)\n    def bitcount(n):\n        n = (n & 0x5555555555555555) + ((n & 0xAAAAAAAAAAAAAAAA) >> 1)\n        n = (n & 0x3333333333333333) + ((n & 0xCCCCCCCCCCCCCCCC) >> 2)\n        n = (n & 0x0F0F0F0F0F0F0F0F) + ((n & 0xF0F0F0F0F0F0F0F0) >> 4)\n        n = (n & 0x00FF00FF00FF00FF) + ((n & 0xFF00FF00FF00FF00) >> 8)\n        n = (n & 0x0000FFFF0000FFFF) + ((n & 0xFFFF0000FFFF0000) >> 16)\n        n = (n & 0x00000000FFFFFFFF) + ((n & 0xFFFFFFFF00000000) >> 32)\n        return n\n    def is_prime(n):\n        if n <= 1:\n            return False\n        elif n <= 3:\n            return True\n        elif n % 2 == 0 or n % 3 == 0:\n            return False\n        i = 5\n        while i * i <= n:\n            if n % i == 0 or n % (i + 2) == 0:\n                return False\n            i += 6\n        return True\n    def nextprime(n):\n        i = n + 1\n        while not is_prime(i):\n            i += 1\n        return i\n    if n == 0:\n        return 1\n    n -= 1\n    a = b = c = d = 1\n    e = 0\n    while e <= n:\n        if bitcount(a) == b:\n            if e == n:\n                if is_prime(a):\n                    return a\n                else:\n                    n += 1\n        a, b, c, d = nsweven(c), nsweven(d), nsweven(d), nswodd(d)\n        if b > 1:\n            b = nextprime(b)\n        e += 1\n    return -1\n",
        "s-22": "\n    def is_nsw_prime(num):\n        if num == 0:\n            return False\n        elif num == 1:\n            return True\n        else:\n            for i in range(2, num):\n                if num % i == 0:\n                    return False\n            return True\n\n    count = 0\n    num = 0\n    while count < n:\n        num += 1\n        if is_nsw_prime((2 ** num) + 1):\n            count += 1\n    return (2 ** num) + 1\n",
        "s-23": "\n    \"\"\"\n    Returns the nth Newman-Shanks-Williams prime number.\n\n    Parameters:\n    n (int): The position of the Newman-Shanks-Williams prime number to be returned.\n\n    Returns:\n    int: The nth Newman-Shanks-Williams prime number.\n\n    Example:\n    >>> newman_prime(1)\n    2\n    >>> newman_prime(3)\n    11\n    \"\"\"\n    def is_prime(num):\n        \"\"\"\n        Returns True if the given number is prime, False otherwise.\n\n        Parameters:\n        num (int): The number to check for primality.\n\n        Returns:\n        bool: True if the number is prime, False otherwise.\n        \"\"\"\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def newman_shanks_williams(num):\n        \"\"\"\n        Returns the Newman-Shanks-Williams number for the given number.\n\n        Parameters:\n        num (int): The number for which to calculate the Newman-Shanks-Williams number.\n\n        Returns:\n        int: The Newman-Shanks-Williams number for the given number.\n        \"\"\"\n        if num == 0:\n            return 1\n        elif num == 1:\n            return 2\n        else:\n            return 2 * newman_shanks_williams(num - 1) - newman_shanks_williams(num - 2)\n\n    count = 0\n    i = 0\n    while count < n:\n        i += 1\n        if is_prime(newman_shanks_williams(i)):\n            count += 1\n    return newman_shanks_williams(i)\n",
        "s-24": " \n    \"\"\"\n    Find the nth Newman\u2013Shanks\u2013Williams prime number.\n    \"\"\"\n    def is_nsw_prime(x):\n        \"\"\"\n        Check if a given number is a Newman\u2013Shanks\u2013Williams prime.\n        \"\"\"\n        if x == 0:\n            return False\n        elif x == 1:\n            return True\n        else:\n            return is_nsw_prime((x - 1) // 2) and is_nsw_prime((x + 1) // 2)\n\n    count = 0\n    i = 0\n    while count < n:\n        if is_nsw_prime(i):\n            count += 1\n        i += 1\n    return i - 1\n",
        "s-25": " \n    def lucas_lehmer(p, s):\n        if p == 0:\n            return 4\n        elif p == 1:\n            return s**2 - 2\n        else:\n            return (lucas_lehmer(p-1, s)**2 - 2) % (2**p - 1)\n    \n    p = 3\n    count = 0\n    while True:\n        mersenne = 2**p - 1\n        if is_prime(mersenne):\n            count += 1\n            if count == n:\n                return lucas_lehmer(p-2, 4)\n        p += 1\n",
        "s-26": "\n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x ** 0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n    \n    def nsweven(k):\n        if k == 0:\n            return 1\n        return 2 * nsweven(k - 1) ** 2 - 1\n    \n    def nswodd(k):\n        if k == 0:\n            return 0\n        return 2 * nsweven(k - 1) * nswodd(k - 1)\n    \n    if n == 1:\n        return 7\n    \n    i = 1\n    while True:\n        x = nsweven(i)\n        if is_prime(x):\n            n -= 1\n            if n == 1:\n                return x\n        i += 1\n        \n",
        "s-27": "\ndef newman_prime(n): \n    '''\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    '''\n\n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x ** 0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n\n    def is_nsw_prime(x):\n        k = 1\n        while True:\n            nsw_num = 2**k + 1\n            if nsw_num > x:\n                break\n            if x % nsw_num == 0:\n                return False\n            k += 1\n        return True\n\n    count = 0\n    x = 1\n    while count < n:\n        x += 2\n        if x == 3 or (x > 3 and x % 3 == 2):\n            if is_prime(x) and is_nsw_prime(x):\n                count += 1\n    return x",
        "s-28": "\n    \"\"\"\n    This function returns the nth Newman-Shanks-Williams prime (NSW prime) number.\n\n    NSW prime number is a prime number of the form (2**2**k + 1), where k is a non-negative integer.\n\n    The first few NSW prime numbers are: 3, 5, 7, 13, 17, 19, 31, 61, 89, 107, 127, 521, 607, 1279, 2203, 2281, 3217, 4253, 4423, 9689, 9941, 11213, 19937, 21701, 23209, 44497, 86243, 110503, 132049, 216091, 756839, 859433, 1257787, 1398269, 2976221, 3021377, 6972593, 13466917, 20996011, 24036583, 25964951, 30402457, 32582657, 37156667, 42643801, 43112609, 57885161, 74207281, 77232917, 82589933, 95346737, 130108337, 148894411, 252097800623, 3046201, 716169301, 8462696833, 10570895297, 11744379201, 13079177569, 15005205349, 17297260929, 29739027491, 66661437587, 119218851371, 132393951501, 174254191581, 180708981181, 272780261089, 657005137203, 711713080513.\n\n    :param n: an integer, the position of the NSW prime number to be found.\n    :return: the nth NSW prime number\n    \"\"\"\n    k = 0\n    while True:\n        p = 2**(2**k) + 1\n        if is_prime(p):\n            n -= 1\n            if n == 0:\n                return p\n        k += 1\n\ndef is_prime(n):\n    \"\"\"\n    This is a helper function that checks if a number is prime.\n\n    :param n: an integer to be checked for primality\n    :return: True if n is prime, False otherwise\n    \"\"\"\n    if n <= 1:\n        return False\n    elif n <= 3:\n        return True\n    elif n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n",
        "s-29": " \n    if n == 0:\n        return 7\n    \n    prime_count = 0\n    num = 9\n    \n    while True:\n        is_prime = True\n        \n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                is_prime = False\n                break\n        \n        if is_prime:\n            prime_count += 1\n            if prime_count == n:\n                return num\n        \n        num += 1\n",
        "s-30": "\n    if n == 1:\n        return 2\n    primes = [2]\n    candidate = 3\n    while len(primes) < n:\n        for prime in primes:\n            if candidate % prime == 0:\n                break\n        else:\n            primes.append(candidate)\n        candidate += 2\n    return primes[-1]\n",
        "s-31": " \n    # Base case\n    if n == 0:\n        return 1\n\n    # Initialize variables\n    p = newman_prime(n-1)\n    q = newman_prime(n-1) + 1\n    m = 1\n\n    # Loop until we find the nth prime\n    while m <= p:\n        if q % m == 0:\n            break\n        m += 1\n\n    # Return the nth prime\n    return q\n",
        "s-32": "\n    def is_prime(num):\n        if num <= 1:\n            return False\n        for i in range(2, int(num**0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n    \n    def calculate_nswn(num):\n        return pow(2, pow(2, num)) + 1\n    \n    count = 0\n    num = 0\n    while count < n:\n        num += 1\n        if is_prime(calculate_nswn(num)):\n            count += 1\n    return calculate_nswn(num)\n",
        "s-33": "\n    if n == 0:\n        return 1\n    primes = [1, 2]\n    candidate = 2\n    while len(primes) <= n:\n        candidate += 1\n        is_prime = True\n        for prime in primes[1:]:\n            if candidate % prime == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(candidate)\n        elif candidate % 2 == 0:\n            sum_of_digits = 0\n            for digit in str(candidate):\n                sum_of_digits += int(digit)\n            if sum_of_digits in primes:\n                primes.append(candidate)\n    return primes[n]\n",
        "s-34": "\n    if n == 1:\n        return 2\n    prime_count = 1\n    num = 3\n    while True:\n        if all(num % i != 0 for i in range(2, int(num**0.5)+1)):\n            prime_count += 1\n            if prime_count == n:\n                return num\n        num += 2\n",
        "s-35": "\n    \"\"\"\n    Find the nth Newman-Shanks-Williams prime number.\n    \"\"\"\n    def is_ns_w_prime(x):\n        # Helper function to check if a number is a Newman-Shanks-Williams prime.\n        return all(pow(2, k, x) != 1 for k in range(1, x-1))\n\n    primes = []\n    x = 1\n    while len(primes) < n:\n        x += 1\n        if is_ns_w_prime(x):\n            primes.append(x)\n    return primes[-1]\n",
        "s-36": " \n    if n == 0: \n        return 1 \n    else: \n        return 2 * newman_prime(n - 1) + newman_prime(n - 2)\n",
        "s-37": "\n    if n == 1:\n        return 2\n    primes = [2]\n    num = 1\n    while len(primes) < n:\n        num += 2\n        for p in primes:\n            if num % p == 0:\n                break\n        else:\n            primes.append(num)\n    return primes[-1] * 2 - 1\n",
        "s-38": "\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n    \n    def ns_w(num):\n        if num == 0:\n            return 0\n        elif num == 1:\n            return 1\n        elif num % 2 == 0:\n            return 2 * ns_w(num // 2) - 1\n        else:\n            return 2 * ns_w((num - 1) // 2) + 1\n    \n    count = 0\n    i = 0\n    while count < n:\n        i += 1\n        if is_prime(ns_w(i)):\n            count += 1\n    return ns_w(i)\n",
        "s-39": "\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def is_nsw_prime(num):\n        if num == 0:\n            return False\n        if num == 1:\n            return True\n        if num % 2 == 0:\n            return False\n        for i in range(3, int(num ** 0.5) + 1, 2):\n            if num % i == 0:\n                return False\n        return True\n\n    count = 0\n    num = 0\n    while count < n:\n        num += 1\n        if is_prime(num):\n            m = (2 ** num) - 1\n            if is_nsw_prime(m):\n                count += 1\n    return m\n",
        "s-40": "\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def get_nsw_num(k):\n        if k == 0:\n            return 0\n        elif k == 1:\n            return 1\n        else:\n            return 2 * get_nsw_num(k - 1) + get_nsw_num(k - 2)\n\n    count = 0\n    num = 0\n    while count < n:\n        num += 1\n        if is_prime(get_nsw_num(num)):\n            count += 1\n\n    return get_nsw_num(num)\n",
        "s-41": " \n    if n == 0:\n        return 1\n    primes = [2]\n    candidate = 1\n    while len(primes) < n:\n        candidate += 1\n        for p in primes:\n            if candidate % p == 0:\n                break\n        else:\n            primes.append(candidate)\n    return primes[-1]\n",
        "s-42": " \n    if n == 0:\n        return 1\n    elif n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n        i = 2\n        prime_count = 2\n        current_num = 3\n        while prime_count < n:\n            current_num += 2\n            for j in range(2, int(current_num**(1/2))+1):\n                if current_num % j == 0:\n                    break\n            else:\n                i += 1\n                if (2**i) % current_num == 1:\n                    prime_count += 1\n        return current_num\n",
        "s-43": "\n    \"\"\"\n    Return the nth Newman\u2013Shanks\u2013Williams prime number.\n    \"\"\"\n    def is_prime(x):\n        \"\"\"\n        Check if x is prime.\n        \"\"\"\n        if x < 2:\n            return False\n        for i in range(2, int(x**0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n    \n    def nsw_prime(m):\n        \"\"\"\n        Return the mth Newman\u2013Shanks\u2013Williams prime number.\n        \"\"\"\n        if m == 0:\n            return 1\n        prime_count = 0\n        num = 1\n        while prime_count < m:\n            num += 1\n            if is_prime(num) and is_prime((num - 1) // 2):\n                prime_count += 1\n        return num\n    \n    return nsw_prime(n)\n",
        "s-44": "\n    if n == 0:\n        return 1\n    else:\n        primes = [2]\n        num = 1\n        while len(primes) < n:\n            num += 2\n            if all(num % p != 0 for p in primes):\n                primes.append(num)\n        return primes[-1] ** 2 - 2\n",
        "s-45": "\n    p = 0\n    i = 0\n    while i < n:\n        p += 1\n        if is_prime(p) and is_nsw(p):\n            i += 1\n    return p\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**(1/2))+1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_nsw(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n    k = (n-1) // 2\n    p = 2\n    while p <= k:\n        if pow(p, k, n) == n-1:\n            return True\n        p += 1\n    return pow(2, k, n) == n-1\n",
        "s-46": "\n    primes = [2]\n    num = 1\n    while len(primes) < n:\n        num += 2\n        for p in primes:\n            if p*p > num:\n                primes.append(num)\n                break\n            if num % p == 0:\n                break\n    return primes[-1] + 1\n",
        "s-47": "\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 2\n    else:\n        primes = [2, 3]\n        num = 5\n        while len(primes) < n:\n            for prime in primes:\n                if num % prime == 0:\n                    break\n            else:\n                primes.append(num)\n            num += 2\n        return primes[-1]\n",
        "s-48": "\n    prime = 1\n    count = 0\n    while count < n:\n        prime += 1\n        if is_newman_prime(prime):\n            count += 1\n    return prime\n\ndef is_newman_prime(n):\n    if n == 0 or n == 1:\n        return False\n    elif n == 2:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        for i in range(3, int(n**0.5)+1, 2):\n            if n % i == 0:\n                return False\n        return True\n",
        "s-49": " \n    if n == 0: \n        return 1\n    else: \n        prime = 0\n        count = 0\n        num = 1\n        while count < n:\n            num += 1\n            if is_nswprime(num):\n                prime = num\n                count += 1\n        return prime\n    \ndef is_nswprime(num):\n    if num == 0 or num == 1: \n        return False\n    elif num == 2: \n        return True\n    else:\n        for i in range(2, num):\n            if num % i == 0: \n                return False\n        return True\n",
        "s-50": " \n    if n==0:\n        return 1\n    elif n==1:\n        return 2\n    else:\n        prime = [2]\n        num = 3\n        while len(prime) < n:\n            if all(num % p != 0 for p in prime):\n                prime.append(num)\n            num += 2\n        return prime[-1]\n",
        "s-51": " \n    if n <= 0:\n        return None\n        \n    primes = [2]\n    num = 3\n    \n    while len(primes) < n:\n        is_prime = True\n        \n        for prime in primes:\n            if num % prime == 0:\n                is_prime = False\n                break\n                \n        if is_prime:\n            primes.append(num)\n        \n        num += 2\n        \n    return primes[-1] * 2 - 1\n",
        "s-52": " \n    if n == 0:\n        return 1\n    else:\n        return 2 * newman_prime(n - 1) ** 2 - 1\n",
        "s-53": " \n    if n == 0:  # first Newman-Shanks-Williams prime\n        return 1\n    if n == 1:  # second Newman-Shanks-Williams prime\n        return 2\n    nsw_primes = [1, 2]  # first two Newman-Shanks-Williams primes\n    i = 2  # starting index\n    while len(nsw_primes) < n+1:  # repeat until we have enough\n        i += 1  # increment index\n        x = (nsw_primes[i-1] * 2) - nsw_primes[i-2]  # calculate next Newman-Shanks-Williams prime\n        nsw_primes.append(x)  # add to list of primes\n    return nsw_primes[n]  # return the nth Newman-Shanks-Williams prime\n",
        "s-54": " \n    p = 0\n    k = 0\n    while p < n:\n        k += 1\n        if is_nsw_prime(k):\n            p += 1\n    return k\n\ndef is_nsw_prime(k):\n    if k == 0 or k == 1:\n        return False\n    if k == 2 or k == 3:\n        return True\n    if (k-1) % 2 == 0:\n        return False\n    a = 2\n    while pow(a, k-1, k) != 1:\n        a += 1\n    return pow(a, (k-1)//2, k) == k-1\n",
        "s-55": "\n    \"\"\"\n    Finds the nth Newman-Shanks-Williams prime number.\n\n    A Newman\u2013Shanks\u2013Williams prime is a prime number p such that p divides (2^p-1)-1.\n\n    Args:\n    n -- an integer representing the nth Newman-Shanks-Williams prime number to be found.\n\n    Returns:\n    The nth Newman-Shanks-Williams prime number.\n\n    \"\"\"\n    def is_prime(num):\n        if num == 2:\n            return True\n        if num < 2 or num % 2 == 0:\n            return False\n        for i in range(3, int(num**0.5) + 1, 2):\n            if num % i == 0:\n                return False\n        return True\n\n    def get_nsw_prime(n):\n        count = 0\n        num = 1\n        while count < n:\n            num += 1\n            if is_prime(num) and is_prime((2**num - 1) // 2):\n                count += 1\n        return num\n\n    return get_nsw_prime(n)\n",
        "s-56": " \n    if n == 0: \n        return 1\n    else: \n        return 2**(2**(n-1)) + 1\n",
        "s-57": "\n    def is_prime(num):\n        if num <= 1:\n            return False\n        elif num <= 3:\n            return True\n        elif num % 2 == 0 or num % 3 == 0:\n            return False\n        i = 5\n        while i * i <= num:\n            if num % i == 0 or num % (i + 2) == 0:\n                return False\n            i += 6\n        return True\n    \n    if n == 1:\n        return 2\n    count = 1\n    num = 1\n    while count < n:\n        num += 2\n        if is_prime(num):\n            count += 1\n    return num\n",
        "s-58": "\ndef newman_prime(n): \n    if n == 0:\n        return 7\n    elif n == 1:\n        return 11\n    elif n == 2:\n        return 17\n    elif n == 3:\n        return 32\n    elif n == 4:\n        return 41\n    elif n == 5:\n        return 239\n    elif n == 6:\n        return 473\n    elif n == 7:\n        return 931\n    elif n == 8:\n        return 1853\n    elif n == 9:\n        return 3677\n    else:\n        return 2*newman_prime(n-1) + newman_prime(n-2)",
        "s-59": " \n    if n == 0: # Newman-Shanks-Williams prime is undefined for n=0\n        return None\n    elif n == 1: # First Newman-Shanks-Williams prime is 2\n        return 2\n    else:\n        primes = [2]\n        i = 1\n        while len(primes) < n:\n            x = 2**i\n            y = x + 1\n            j = 2\n            while j <= int(y**0.5) and y % j != 0:\n                j += 1\n            if j > int(y**0.5):\n                primes.append(y)\n            i += 1\n        return primes[-1]\n",
        "s-60": "\n    if n == 1:\n        return 2\n    if n == 2:\n        return 3\n    primes = [2, 3]\n    i = 2\n    while len(primes) < n:\n        p = primes[i]\n        candidate = 2*p + 1\n        is_prime = True\n        for prime in primes:\n            if prime**2 > candidate:\n                break\n            if candidate % prime == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(candidate)\n        i += 1\n    return primes[-1]\n",
        "s-61": "\n    \"\"\"\n    Find the nth Newman\u2013Shanks\u2013Williams prime number.\n\n    Parameters:\n    n (int): A positive integer.\n\n    Returns:\n    int: The nth Newman\u2013Shanks\u2013Williams prime number.\n\n    \"\"\"\n    def is_prime(num):\n        \"\"\"\n        Check if the given number is prime.\n\n        Parameters:\n        num (int): A positive integer.\n\n        Returns:\n        bool: True if the given number is prime, False otherwise.\n\n        \"\"\"\n        if num <= 1:\n            return False\n        if num <= 3:\n            return True\n        if num % 2 == 0 or num % 3 == 0:\n            return False\n        i = 5\n        while i * i <= num:\n            if num % i == 0 or num % (i + 2) == 0:\n                return False\n            i += 6\n        return True\n\n    def get_nsw_prime(n):\n        \"\"\"\n        Get the nth Newman\u2013Shanks\u2013Williams prime number.\n\n        Parameters:\n        n (int): A positive integer.\n\n        Returns:\n        int: The nth Newman\u2013Shanks\u2013Williams prime number.\n\n        \"\"\"\n        prime_count = 0\n        num = 1\n        while prime_count < n:\n            num += 1\n            if is_prime(num) and is_prime(2 ** num - 1):\n                prime_count += 1\n        return 2 ** num - 1\n\n    return get_nsw_prime(n)\n",
        "s-62": "\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    i = 1\n    count = 0\n    while count < n:\n        if is_prime(2 ** i + 1):\n            count += 1\n        i += 1\n    return 2 ** (i - 1) - 1\n",
        "s-63": "\n    \"\"\"\n    Return the nth Newman\u2013Shanks\u2013Williams prime number.\n\n    A Newman\u2013Shanks\u2013Williams prime number is a prime number of the form\n    2^(2^k) + 1, where k is a nonnegative integer.\n\n    Parameters:\n    n (int): The nth prime number to return.\n\n    Returns:\n    int: The nth Newman\u2013Shanks\u2013Williams prime number.\n    \"\"\"\n    def is_prime(num):\n        \"\"\"\n        Helper function to check if a number is prime.\n\n        Parameters:\n        num (int): The number to check for primality.\n\n        Returns:\n        bool: True if the number is prime, False otherwise.\n        \"\"\"\n        if num == 2 or num == 3:\n            return True\n        if num < 2 or num % 2 == 0:\n            return False\n        if num < 9:\n            return True\n        if num % 3 == 0:\n            return False\n\n        r = int(num**0.5)\n        f = 5\n\n        while f <= r:\n            if num % f == 0:\n                return False\n            if num % (f + 2) == 0:\n                return False\n            f += 6\n\n        return True\n\n    k = 0\n    count = 0\n\n    while count < n:\n        num = 2**(2**k) + 1\n\n        if is_prime(num):\n            count += 1\n\n        k += 1\n\n    return num\n",
        "s-64": " \n    if n == 1: \n        return 2\n    count, num = 1, 3\n    while count < n: \n        flag = 1\n        for i in range(2,num): \n            if (num % i) == 0: \n                flag = 0\n                break \n        if flag == 1: \n            count += 1\n        if count == n: \n            return num \n        num += 2\n",
        "s-65": "\n    def ns(n):\n        if n == 0:\n            return 0\n        elif n == 1:\n            return 1\n        else:\n            return 2 * ns(n - 1) + ns(n - 2)\n    primes = []\n    i = 0\n    while len(primes) < n:\n        p = ns(i)\n        for j in range(2, int(p ** 0.5) + 1):\n            if p % j == 0:\n                break\n        else:\n            primes.append(p)\n        i += 1\n    return primes[-1]\n",
        "s-66": "\n    count = 0\n    num = 0\n    while count < n:\n        num += 1\n        if is_nsw_prime(num):\n            count += 1\n    return num\n\n\ndef is_nsw_prime(num):\n    if num == 0:\n        return False\n    elif num == 1:\n        return True\n    else:\n        return is_nsw_prime((num - 1) // 2) and is_prime(num)\n\n\ndef is_prime(num):\n    if num < 2:\n        return False\n    for i in range(2, int(num ** 0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n",
        "s-67": " \n    \"\"\"\n    Find the nth Newman\u2013Shanks\u2013Williams prime number.\n    \"\"\"\n\n    def is_prime(x):\n        \"\"\"\n        Check if the number x is prime.\n        \"\"\"\n        if x < 2:\n            return False\n        elif x == 2:\n            return True\n        elif x % 2 == 0:\n            return False\n        else:\n            for i in range(3, int(x**0.5)+1, 2):\n                if x % i == 0:\n                    return False\n            return True\n\n    def nsw(i):\n        \"\"\"\n        Calculate the ith Newman\u2013Shanks\u2013Williams number.\n        \"\"\"\n        if i == 0:\n            return 0\n        elif i == 1:\n            return 1\n        else:\n            return 2*nsw(i-1) + nsw(i-2)\n\n    count = 0\n    i = 0\n    while count < n:\n        if is_prime(nsw(i)):\n            count += 1\n        i += 1\n    return nsw(i-1)\n",
        "s-68": " \n    \"\"\"\n    This function takes an integer n as input and returns the nth newman\u2013shanks\u2013williams prime number. \n    \"\"\"\n    if n == 1:\n        return 2\n    primes = [2]\n    num = 3\n    while len(primes) < n:\n        if all(num % prime != 0 for prime in primes):\n            primes.append(num)\n        num += 2\n    return primes[-1]\n",
        "s-69": "\n    \"\"\"\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n\n    A Newman-Shanks-Williams (NSW) prime is a prime that can be expressed as:\n\n    nsw(p) = 2^p - 1\n\n    where p is also a prime number. The first few NSW primes are:\n    3, 7, 31, 127, 2047, 8191, 131071, ...\n\n    Args:\n    - n (int): The index of the NSW prime to find.\n\n    Returns:\n    - int: The nth NSW prime number.\n\n    Raises:\n    - ValueError: If the input n is not a positive integer.\n    \"\"\"\n    \n    if not isinstance(n, int) or n < 1:\n        raise ValueError(\"Input must be a positive integer\")\n\n    count = 0\n    i = 2\n    while count < n:\n        if is_prime(i):\n            count += 1\n            nsw = 2**i - 1\n            if is_prime(nsw):\n                if count == n:\n                    return nsw\n        i += 1\n\n\ndef is_prime(num):\n    if num <= 1:\n        return False\n    elif num == 2:\n        return True\n    elif num % 2 == 0:\n        return False\n    else:\n        for i in range(3, int(num**0.5) + 1, 2):\n            if num % i == 0:\n                return False\n        return True\n",
        "s-70": " \n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x**0.5)+1):\n            if x % i == 0:\n                return False\n        return True\n    \n    def nsw_number(m):\n        if m == 0:\n            return 0\n        elif m == 1:\n            return 1\n        else:\n            return 2 * nsw_number(m-1) + nsw_number(m-2)\n    \n    i = 0\n    num = -1\n    while i < n:\n        num += 1\n        if is_prime(nsw_number(num)):\n            i += 1\n    return nsw_number(num)\n",
        "s-71": " \n    # Check if input is valid\n    if n < 1:\n        return None\n    \n    primes = [2]\n    num = 1\n    \n    while len(primes) < n:\n        num += 1\n        for p in primes:\n            if num % p == 0:\n                break\n        else:\n            # Calculate the next Newman-Shanks-Williams prime\n            newman = 2**(2**(num)) + 1\n            primes.append(newman)\n    \n    return primes[-1]\n",
        "s-72": "\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def nsw_prime(m):\n        if m == 0:\n            return 1\n        elif m == 1:\n            return 2\n        else:\n            return 2 * nsw_prime(m - 1) - nsw_prime(m - 2) + 2\n    \n    count = 0\n    i = 0\n    \n    while count < n:\n        if is_prime(nsw_prime(i)):\n            count += 1\n        i += 1\n        \n    return nsw_prime(i - 1)\n",
        "s-73": "\n    primes = [2, 3]\n    i = 4\n    while len(primes) < n:\n        is_prime = True\n        for j in range(2, int(i ** 0.5) + 1):\n            if i % j == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(i)\n        i += 1\n    return primes[n - 1] * 2 - 1\n",
        "s-74": "\n    if n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    primes = [2, 3]\n    i = 3\n    while len(primes) < n:\n        i += 2\n        for p in primes:\n            if i % p == 0:\n                break\n        else:\n            primes.append(i)\n    return primes[-1]\n",
        "s-75": " \n    \"\"\"\n    Return the nth Newman-Shanks-Williams prime number.\n    \"\"\"\n    def is_prime(k):\n        if k < 2:\n            return False\n        for i in range(2, int(k**0.5)+1):\n            if k % i == 0:\n                return False\n        return True\n    \n    def ns_prime(n):\n        if n == 0:\n            return 0\n        elif n == 1:\n            return 1\n        elif n % 2 == 0:\n            return 2 * ns_prime(n//2) ** 2 - 1\n        else:\n            return 2 * ns_prime((n-1)//2) ** 2 + 1\n    \n    i = 0\n    p = 0\n    while i < n:\n        if is_prime(ns_prime(p)):\n            i += 1\n        p += 1\n    return ns_prime(p-1)\n",
        "s-76": "\n    def is_prime(p):\n        if p < 2:\n            return False\n        for i in range(2, int(p**0.5) + 1):\n            if p % i == 0:\n                return False\n        return True\n\n    def nsw_prime(k):\n        if k == 0:\n            return 1\n        return 2*nsw_prime(k-1)**2 - 1\n\n    i = 0\n    candidate = 0\n    while i < n:\n        candidate += 1\n        if is_prime(candidate) and nsw_prime(candidate-1) % candidate == 0:\n            i += 1\n    return candidate\n",
        "s-77": "\ndef newman_prime(n): \n    '''\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    '''\n\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    else:\n        return 2 * newman_prime(n-1) + newman_prime(n-2)",
        "s-78": " \n    def is_prime(num):\n        if num <= 1:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def nsw_prime(k):\n        if k == 0:\n            return 1\n        elif k == 1:\n            return 3\n        else:\n            m = nsw_prime(k-1)\n            p = is_prime(m) + is_prime(m+k) + is_prime(m+2*k)\n            if p >= 2:\n                return nsw_prime(k+1)\n            else:\n                return m+k\n\n    return nsw_prime(n-1)\n",
        "s-79": " \n    if n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n        prime_count = 2\n        num = 5\n        while prime_count < n:\n            is_prime = True\n            for i in range(2, num):\n                if num % i == 0:\n                    is_prime = False\n                    break\n            if is_prime:\n                prime_count += 1\n            num += 2\n        return num - 2\n",
        "s-80": "\n    if n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n        i = 2\n        j = 3\n        while i < n:\n            j += 2\n            if is_nswprime(j):\n                i += 1\n        return j\n\ndef is_nswprime(x):\n    k = 1\n    while True:\n        p = 2 ** (2**k) + 1\n        if p >= x:\n            return x == p\n        elif x % p == 0:\n            return False\n        k += 1\n",
        "s-81": "\n    \"\"\"\n    Return the nth Newman-Shanks-Williams prime number.\n\n    A Newman-Shanks-Williams prime is a prime number of the form\n    2^(2^k) + 1, where k is a non-negative integer.\n\n    Parameters:\n    n (int): The index of the Newman-Shanks-Williams prime to return.\n\n    Returns:\n    int: The nth Newman-Shanks-Williams prime number.\n    \"\"\"\n    k = 0\n    candidate = 2\n    while n > 0:\n        if is_prime(candidate):\n            n -= 1\n            if n == 0:\n                return candidate\n        k += 1\n        candidate = 2**(2**k) + 1\n\ndef is_prime(n):\n    \"\"\"\n    Return True if n is a prime number, False otherwise.\n\n    Parameters:\n    n (int): The number to test for primality.\n\n    Returns:\n    bool: True if n is prime, False otherwise.\n    \"\"\"\n    if n <= 1:\n        return False\n    elif n <= 3:\n        return True\n    elif n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i*i <= n:\n        if n % i == 0 or n % (i+2) == 0:\n            return False\n        i += 6\n    return True\n",
        "s-82": " \n    if n == 1: # special case for the first Newman-Shanks-Williams prime\n        return 2 \n    prime_count = 1 # start with the first prime\n    num = 3 # start checking from the next odd number\n    while prime_count < n:\n        if is_newman_prime(num):\n            prime_count += 1 # found another prime\n            if prime_count == n:\n                return num # return the nth prime\n        num += 2 # check only odd numbers\n    return None # in case n < 1 or other errors\n\ndef is_newman_prime(num):\n    if num == 2:\n        return True # 2 is always prime\n    if num % 2 == 0:\n        return False # even numbers are never prime\n    x = 2\n    while x * x <= num:\n        if num % x == 0:\n            return False # found a factor, so not prime\n        x += 1\n    return True # no factors, so prime\n",
        "s-83": "\n    def lucas_lehmer(p):\n        if p == 2:\n            return 3\n        m = 2 ** p - 1\n        s = 4\n        for i in range(3, p + 1):\n            s = ((s ** 2) - 2) % m\n        return s == 0\n\n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x ** 0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n\n    count = 0\n    num = 1\n    while True:\n        if is_prime(num) and lucas_lehmer(num):\n            count += 1\n            if count == n:\n                return num\n        num += 1\n",
        "s-84": " \n    if n == 0:\n        return 7\n    elif n == 1:\n        return 11\n    else:\n        count = 2\n        num = 11\n        \n        while count < n:\n            num += 2\n            prime = True\n            for i in range(3, int(num**0.5)+1, 2):\n                if num % i == 0:\n                    prime = False\n                    break\n            if prime:\n                count += 1\n        return num\n",
        "s-85": "\n    if n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n        primes = [2, 3]\n        i = 5\n        while len(primes) < n:\n            for p in primes:\n                if i % p == 0:\n                    break\n            else:\n                primes.append(i)\n            i += 2\n        return primes[-1]\n",
        "s-86": " \n    if n == 0:\n        return 1\n    primes = [2]\n    num = 3\n    while len(primes) < n:\n        is_prime = True\n        for p in primes:\n            if num % p == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(num)\n        num += 2\n    return primes[-1]*2 + 1\n",
        "s-87": "\n    def is_prime(num):\n        if num <= 1:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    if n == 1:\n        return 2\n\n    count = 1\n    num = 1\n    while count < n:\n        num += 1\n        if is_prime(num) and is_prime(2 ** num - 1):\n            count += 1\n\n    return num\n",
        "s-88": " \n    if n==0:\n        return 7\n    k=1\n    candidate = 7\n    while True:\n        candidate += 5**k\n        if is_prime(candidate):\n            if n==1:\n                return candidate\n            n -= 1\n        k += 1\n\ndef is_prime(num):\n    if num==2 or num==3:\n        return True\n    if num<2 or num%2==0:\n        return False\n    for i in range(3, int(num**0.5)+1, 2):\n        if num%i==0:\n            return False\n    return True\n",
        "s-89": " \n    \"\"\"\n    Find the nth Newman-Shanks-Williams prime number.\n    \"\"\"\n    primes = [2]\n    i = 1\n    while len(primes) < n:\n        i += 1\n        is_prime = True\n        for j in primes:\n            if i % j == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(i)\n        elif i % 2 == 1:\n            s = 2\n            while s <= i - 1:\n                if (i - 1) % s == 0 and pow(2, (i-1)//s, i) != 1:\n                    break\n                s += 1\n            else:\n                primes.append(i)\n    return primes[-1]\n",
        "s-90": "\n    primes = [2, 3]\n    i = 3\n    \n    while len(primes) < n:\n        i += 1\n        is_prime = True\n        for j in range(2, i):\n            if i % j == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(i)\n        elif i % 2 == 0:\n            continue\n        else:\n            x = (i - 1) // 2\n            if pow(2, x, i) == 1:\n                primes.append(i)\n    return primes[-1]\n",
        "s-91": "\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def is_nsw(num):\n        if num == 0:\n            return True\n        if num == 1:\n            return False\n        if num % 2 == 0:\n            return is_nsw(num // 2)\n        else:\n            for i in range(3, int(num ** 0.5) + 1, 2):\n                if num % i == 0:\n                    return is_nsw(num // i)\n            return True\n\n    count = 0\n    i = 0\n    while count < n:\n        i += 1\n        if is_nsw(i) and is_prime(i):\n            count += 1\n    return i\n",
        "s-92": "\n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x ** 0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n\n    def nsw():\n        yield 1\n        q = [2]\n        while True:\n            x = q.pop(0)\n            yield x\n            q.append(x * 2 - 1)\n            q.append(x * 2 + 1)\n\n    for i, p in enumerate(nsw()):\n        if is_prime(p):\n            if i == n - 1:\n                return p\n",
        "s-93": "\n    if n == 0:\n        return 7\n    elif n == 1:\n        return 11\n    else:\n        return 2 * newman_prime(n-1) + newman_prime(n-2)\n",
        "s-94": "\n    count = 0\n    num = 1\n    while count < n:\n        num += 1\n        i = 2\n        while i <= num:\n            if num % i == 0:\n                break\n            i += 1\n        if i == num:\n            if is_newman_prime(num):\n                count += 1\n    return num\n\ndef is_newman_prime(num):\n    i = 1\n    while i < num:\n        if pow(2, i, num) == 1:\n            return False\n        i += 1\n    return True\n",
        "s-95": "\n    \"\"\"\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    \"\"\"\n    def is_prime(num):\n        \"\"\"\n        Returns True if the given number is prime, else False.\n        \"\"\"\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n    \n    def nsw_prime(p):\n        \"\"\"\n        Returns the pth Newman-Shanks-Williams prime number.\n        \"\"\"\n        if p == 0:\n            return 0\n        if p == 1:\n            return 1\n        return 2 * nsw_prime(p-1) + nsw_prime(p-2) + 2\n    \n    p = 0\n    num = 0\n    while p < n:\n        num += 1\n        if is_prime(num):\n            if nsw_prime(num-1) % num == 0:\n                p += 1\n    return num\n",
        "s-96": " \n    def is_prime(x):\n        if x < 2:\n            return False\n        for i in range(2, int(x**0.5) + 1):\n            if x % i == 0:\n                return False\n        return True\n    \n    def nsw(i):\n        if i == 0:\n            return 0\n        if i == 1:\n            return 1\n        return 2 * nsw(i - 1) + nsw(i - 2) + 2\n    \n    count = 0\n    i = 0\n    while count < n:\n        if is_prime(nsw(i)):\n            count += 1\n        i += 1\n    return nsw(i - 1)\n",
        "s-97": "\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def nsweven(n):\n        if n == 0:\n            return 1\n        else:\n            return nsweven(n-1) + 3*nsweven(n-1)**2 - 2*nsweven(n-1)**3\n\n    def nswodd(n):\n        if n == 0:\n            return 2\n        else:\n            return nswodd(n-1) + 3*nswodd(n-1)**2 - 2*nswodd(n-1)**3\n\n    if n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n        count = 2\n        i = 1\n        while count < n:\n            if is_prime(nsweven(i)):\n                count += 1\n            if count == n:\n                return nsweven(i)\n            if is_prime(nswodd(i)):\n                count += 1\n            if count == n:\n                return nswodd(i)\n            i += 1\n",
        "s-98": " \n    def is_prime(num):\n        if num > 1:\n            for i in range(2, int(num**0.5) + 1):\n                if num % i == 0:\n                    return False\n            return True\n        return False\n\n    def generate_nsw_prime():\n        i, j = 1, 1\n        while True:\n            candidate = 2 ** i * 3 ** j + 1\n            if is_prime(candidate):\n                yield candidate\n            i += 1\n            j += 1\n\n    nsw_prime_generator = generate_nsw_prime()\n    for _ in range(n - 1):\n        next(nsw_prime_generator)\n\n    return next(nsw_prime_generator)\n",
        "s-99": " \n    if n == 0:\n        return 1\n    primes = [2]\n    num = 3\n    while len(primes) < n:\n        for p in primes:\n            if num % p == 0:\n                break\n        else:\n            primes.append(num)\n        num += 2\n    return primes[-1] * 2 - 1\n"
    }
}