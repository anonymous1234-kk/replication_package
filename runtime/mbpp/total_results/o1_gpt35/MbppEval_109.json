{
    "task_id": "MbppEval/109",
    "iter_num": 40,
    "already_test_oracle_gt": {
        "t-27": 7,
        "t-35": 2,
        "t-20": 1
    },
    "pass_num_dict": {
        "s-2": [
            "t-4",
            "t-13",
            "t-17",
            "t-20",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-94": [
            "t-4",
            "t-13",
            "t-17",
            "t-20",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-6": [
            "t-4",
            "t-13",
            "t-17",
            "t-20",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-13": [
            "t-4",
            "t-13",
            "t-17",
            "t-20",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-38": [
            "t-4",
            "t-13",
            "t-17",
            "t-20",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-99": [
            "t-4",
            "t-13",
            "t-17",
            "t-20",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-0": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-3": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-5": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-9": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-15": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-17": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-21": [
            "t-4",
            "t-20",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-27": [
            "t-4",
            "t-20",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-28": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-32": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-36": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-40": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-41": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-44": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-48": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-50": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-51": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-56": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-59": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-61": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-62": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-64": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-65": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-67": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-70": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-74": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-77": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-78": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-81": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-82": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-83": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-85": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-86": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-87": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-88": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-89": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-90": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-96": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35",
            "t-42"
        ],
        "s-7": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-10": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-12": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-14": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-24": [
            "t-4",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35",
            "t-42"
        ],
        "s-29": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-31": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-42": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-43": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-47": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-58": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-60": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-63": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-68": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-92": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-20": [
            "t-4",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-33": [
            "t-4",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-53": [
            "t-4",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-57": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-35"
        ],
        "s-69": [
            "t-4",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-71": [
            "t-4",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-34",
            "t-35"
        ],
        "s-76": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-35"
        ],
        "s-79": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-35"
        ],
        "s-19": [
            "t-4",
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-31",
            "t-35"
        ],
        "s-75": [
            "t-4",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35"
        ],
        "s-93": [
            "t-13",
            "t-17",
            "t-27",
            "t-28",
            "t-29",
            "t-30",
            "t-31",
            "t-35"
        ],
        "s-16": [
            "t-4",
            "t-23",
            "t-27",
            "t-28",
            "t-29",
            "t-31",
            "t-35"
        ],
        "s-95": [
            "t-13",
            "t-17",
            "t-23",
            "t-27",
            "t-29",
            "t-34",
            "t-35"
        ]
    },
    "code_test_output": {
        "s-0": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-1": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 1,
            "t-42": 1
        },
        "s-2": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 1,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-3": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-4": {
            "t-4": 1,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 0,
            "t-27": 1,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 2,
            "t-34": 0,
            "t-35": 0,
            "t-42": 1
        },
        "s-5": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-6": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 1,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-7": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-8": {
            "t-4": null,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": null,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": null,
            "t-34": null,
            "t-35": null,
            "t-42": 2
        },
        "s-9": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-10": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-11": {
            "t-4": 1,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 0,
            "t-27": 1,
            "t-28": 0,
            "t-29": null,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 0,
            "t-42": 1
        },
        "s-12": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-13": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 1,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-14": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-15": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-16": {
            "t-4": 3,
            "t-13": null,
            "t-17": null,
            "t-20": null,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": null,
            "t-31": 1,
            "t-34": null,
            "t-35": 2,
            "t-42": null
        },
        "s-17": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-18": {
            "t-4": 6,
            "t-13": 0,
            "t-17": 0,
            "t-20": 4,
            "t-23": 4,
            "t-27": 0,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 4
        },
        "s-19": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 0,
            "t-35": 2,
            "t-42": 0
        },
        "s-20": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 4
        },
        "s-21": {
            "t-4": 3,
            "t-13": 1,
            "t-17": 1,
            "t-20": 1,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-22": {
            "t-4": 13,
            "t-13": 25,
            "t-17": 25,
            "t-20": 8,
            "t-23": 4,
            "t-27": 49,
            "t-28": 0,
            "t-29": 1,
            "t-30": 2,
            "t-31": 1,
            "t-34": 2,
            "t-35": 5,
            "t-42": 17
        },
        "s-23": {
            "t-4": 0,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 2,
            "t-35": 0,
            "t-42": 0
        },
        "s-24": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-25": {
            "t-4": 2,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 0,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 0,
            "t-34": 0,
            "t-35": 1,
            "t-42": 1
        },
        "s-26": {
            "t-4": 6,
            "t-13": 0,
            "t-17": 0,
            "t-20": 3,
            "t-23": 4,
            "t-27": 14,
            "t-28": 12,
            "t-29": null,
            "t-30": 2,
            "t-31": 2,
            "t-34": 4,
            "t-35": 4,
            "t-42": 2
        },
        "s-27": {
            "t-4": 3,
            "t-13": 1,
            "t-17": 1,
            "t-20": 1,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-28": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-29": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-30": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 1,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 1,
            "t-42": 1
        },
        "s-31": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-32": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-33": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 4
        },
        "s-34": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 4,
            "t-28": 3,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 1,
            "t-42": 1
        },
        "s-35": {
            "t-4": 6,
            "t-13": 0,
            "t-17": 0,
            "t-20": 4,
            "t-23": 8,
            "t-27": 0,
            "t-28": 36,
            "t-29": 0,
            "t-30": 1,
            "t-31": 2,
            "t-34": 5,
            "t-35": 2,
            "t-42": 4
        },
        "s-36": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 3,
            "t-35": 2,
            "t-42": 1
        },
        "s-37": {
            "t-4": 1,
            "t-13": 5,
            "t-17": 5,
            "t-20": 1,
            "t-23": 0,
            "t-27": 7,
            "t-28": 0,
            "t-29": 1,
            "t-30": 1,
            "t-31": 0,
            "t-34": 0,
            "t-35": 1,
            "t-42": 1
        },
        "s-38": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 1,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-39": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 1,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 1,
            "t-42": 1
        },
        "s-40": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-41": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 2,
            "t-42": 1
        },
        "s-42": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-43": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-44": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-45": {
            "t-4": 5,
            "t-13": 0,
            "t-17": 0,
            "t-20": 1,
            "t-23": 4,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 2,
            "t-34": 2,
            "t-35": 3,
            "t-42": 1
        },
        "s-46": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 1,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 1,
            "t-42": 1
        },
        "s-47": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-48": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-49": {
            "t-4": 5,
            "t-13": 0,
            "t-17": 0,
            "t-20": 4,
            "t-23": 4,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 2,
            "t-31": 2,
            "t-34": 3,
            "t-35": 3,
            "t-42": 5
        },
        "s-50": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-51": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-52": {
            "t-4": 5,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 0,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 2,
            "t-34": 0,
            "t-35": 0,
            "t-42": 1
        },
        "s-53": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 4
        },
        "s-54": {
            "t-4": 2,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 1,
            "t-42": 4
        },
        "s-55": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 1,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 1,
            "t-42": 1
        },
        "s-56": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-57": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 3,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 2,
            "t-31": 1,
            "t-34": 4,
            "t-35": 2,
            "t-42": 2
        },
        "s-58": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-59": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-60": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-61": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-62": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-63": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-64": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 2,
            "t-42": 1
        },
        "s-65": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 2,
            "t-42": 1
        },
        "s-66": {
            "t-4": 15,
            "t-13": 15,
            "t-17": 5,
            "t-20": 2,
            "t-23": 8,
            "t-27": 49,
            "t-28": 0,
            "t-29": 5,
            "t-30": 1,
            "t-31": 2,
            "t-34": 2,
            "t-35": 3,
            "t-42": 1
        },
        "s-67": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-68": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-69": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 4
        },
        "s-70": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-71": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 4
        },
        "s-72": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 0,
            "t-27": 4,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 2,
            "t-34": 0,
            "t-35": 0,
            "t-42": 1
        },
        "s-73": {
            "t-4": 1,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 1,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 1,
            "t-42": 1
        },
        "s-74": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-75": {
            "t-4": 3,
            "t-13": 5,
            "t-17": 5,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 4
        },
        "s-76": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 3,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 2,
            "t-31": 1,
            "t-34": 4,
            "t-35": 2,
            "t-42": 2
        },
        "s-77": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-78": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-79": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 2,
            "t-31": 1,
            "t-34": 3,
            "t-35": 2,
            "t-42": 2
        },
        "s-80": {
            "t-4": 1,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 0,
            "t-27": 1,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 0,
            "t-34": 0,
            "t-35": 0,
            "t-42": 1
        },
        "s-81": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 2,
            "t-42": 1
        },
        "s-82": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-83": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-84": {
            "t-4": 1,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 0,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 0,
            "t-42": 1
        },
        "s-85": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-86": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 2,
            "t-42": 1
        },
        "s-87": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-88": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 2,
            "t-42": 1
        },
        "s-89": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-90": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        },
        "s-91": {
            "t-4": 0,
            "t-13": 1,
            "t-17": 1,
            "t-20": 0,
            "t-23": 0,
            "t-27": 0,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 0,
            "t-34": 2,
            "t-35": 0,
            "t-42": 0
        },
        "s-92": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 0,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 0
        },
        "s-93": {
            "t-4": 6,
            "t-13": 0,
            "t-17": 0,
            "t-20": 4,
            "t-23": 4,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 4
        },
        "s-94": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 1,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 1,
            "t-35": 2,
            "t-42": 1
        },
        "s-95": {
            "t-4": 5,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 2,
            "t-27": 7,
            "t-28": 0,
            "t-29": 0,
            "t-30": 2,
            "t-31": 2,
            "t-34": 1,
            "t-35": 2,
            "t-42": 5
        },
        "s-96": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 0,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 0,
            "t-35": 2,
            "t-42": 1
        },
        "s-97": {
            "t-4": 9,
            "t-13": 0,
            "t-17": 0,
            "t-20": 4,
            "t-23": 4,
            "t-27": 49,
            "t-28": 0,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 4,
            "t-42": 1
        },
        "s-98": {
            "t-4": 23,
            "t-13": 0,
            "t-17": 0,
            "t-20": 2,
            "t-23": 0,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 0,
            "t-34": 0,
            "t-35": 8,
            "t-42": 1
        },
        "s-99": {
            "t-4": 3,
            "t-13": 0,
            "t-17": 0,
            "t-20": 1,
            "t-23": 2,
            "t-27": 7,
            "t-28": 6,
            "t-29": 0,
            "t-30": 1,
            "t-31": 1,
            "t-34": 2,
            "t-35": 2,
            "t-42": 1
        }
    },
    "code_test_res": {
        "s-0": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-1": {
            "t-4": true,
            "t-13": true,
            "t-17": false,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-2": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-3": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-4": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-5": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-6": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-7": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-8": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": false,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-9": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-10": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-11": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": false,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-12": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-13": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-14": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-15": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-16": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": false
        },
        "s-17": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-18": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-19": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": false
        },
        "s-20": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-21": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-22": {
            "t-4": false,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-23": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-24": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-25": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": false,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-26": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": false,
            "t-30": false,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-27": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-28": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-29": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-30": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": false,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-31": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-32": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-33": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-34": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-35": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-36": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-37": {
            "t-4": false,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": false,
            "t-27": true,
            "t-28": false,
            "t-29": false,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-38": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-39": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": false,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": false,
            "t-42": true
        },
        "s-40": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-41": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-42": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-43": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-44": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-45": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-46": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": false,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": false,
            "t-42": true
        },
        "s-47": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-48": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-49": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-50": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-51": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-52": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-53": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-54": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-55": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": false,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": false,
            "t-42": true
        },
        "s-56": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-57": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": false
        },
        "s-58": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-59": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-60": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-61": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-62": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-63": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-64": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-65": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-66": {
            "t-4": false,
            "t-13": false,
            "t-17": false,
            "t-20": true,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": false,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-67": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-68": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-69": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-70": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-71": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-72": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-73": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": true,
            "t-27": false,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-74": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-75": {
            "t-4": true,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": false
        },
        "s-76": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": false
        },
        "s-77": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-78": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-79": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": false
        },
        "s-80": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-81": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-82": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-83": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-84": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-85": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-86": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-87": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-88": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-89": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-90": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-91": {
            "t-4": false,
            "t-13": false,
            "t-17": false,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": false
        },
        "s-92": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": false,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-93": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": false
        },
        "s-94": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": true,
            "t-35": true,
            "t-42": true
        },
        "s-95": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": false,
            "t-29": true,
            "t-30": false,
            "t-31": false,
            "t-34": true,
            "t-35": true,
            "t-42": false
        },
        "s-96": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        },
        "s-97": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": false,
            "t-23": false,
            "t-27": false,
            "t-28": false,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-98": {
            "t-4": false,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": false,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": false,
            "t-34": false,
            "t-35": false,
            "t-42": true
        },
        "s-99": {
            "t-4": true,
            "t-13": true,
            "t-17": true,
            "t-20": true,
            "t-23": true,
            "t-27": true,
            "t-28": true,
            "t-29": true,
            "t-30": true,
            "t-31": true,
            "t-34": false,
            "t-35": true,
            "t-42": true
        }
    },
    "solution_dict": {
        "s-0": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-1": "\n    count = 0\n    for i in range(len(s)):\n        rotated_s = s[i:] + s[:i]\n        decimal_s = int(rotated_s, 2)\n        if bin(decimal_s + n).count('1') % 2 == 1:\n            count += 1\n    return count\n",
        "s-2": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    nums = [int(c) for c in s]\n    count = 0\n    for i in range(n):\n        if nums[0] == 1:\n            count += 1\n        nums = nums[-1:] + nums[:-1]\n    return count",
        "s-3": "\n    # Convert the binary string to a list of integers\n    nums = [int(c) for c in s]\n    \n    # Rotate the list n times\n    for i in range(n):\n        nums.insert(0, nums.pop())\n    \n    # Count the number of odd values in the rotated list\n    count = sum(1 for num in nums if num % 2 == 1)\n    \n    return count\n",
        "s-4": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    # Count the number of 1's in the original string\n    count = 0\n    for i in s:\n        if i == '1':\n            count += 1\n    \n    # If the count is even, all rotations will have an even value\n    if count % 2 == 0:\n        return 0\n    \n    # If the count is odd, the number of odd value rotations is equal to the number of rotations\n    # (n) if n is even, and is equal to the number of even value rotations (n-1) if n is odd\n    else:\n        if n % 2 == 0:\n            return n\n        else:\n            return 1",
        "s-5": "\n    count = 0\n    # convert the string to binary\n    binary_str = bin(int(s, 2))\n    # remove the prefix '0b' from the binary string\n    binary_str = binary_str[2:]\n    # rotate the binary string n times\n    rotated_str = binary_str[n:] + binary_str[:n]\n    # count the number of odd numbers in the rotated string\n    for num in rotated_str:\n        if int(num) % 2 != 0:\n            count += 1\n    return count\n",
        "s-6": "\n    # Convert the binary string to an integer\n    num = int(s, 2)\n\n    # Count the number of odd numbers when rotated\n    count = 0\n    for i in range(n):\n        num = ((num << 1) & ((1 << len(s)) - 1)) | (num >> (len(s) - 1))\n        if num % 2 == 1:\n            count += 1\n\n    # Return the count of odd numbers\n    return count\n",
        "s-7": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    # Convert the binary string s to an integer\n    x = int(s, 2)\n    # Get the number of bits in the binary string s\n    num_bits = len(s)\n    # Rotate the binary string n times and count the number of times the result is odd\n    for i in range(n):\n        # Check if the current number is odd\n        if x % 2 == 1:\n            count += 1\n        # Rotate the binary string by 1 bit to the left\n        x = (x << 1) | (x >> (num_bits - 1))\n    return count",
        "s-8": " \n    # count the number of 1's in the binary string\n    ones_count = s.count('1')\n    \n    # if the ones_count is 0, return 0\n    if ones_count == 0:\n        return 0\n    \n    # if the ones_count is equal to the length of the string, return the length of the string if n is odd, else return 0\n    if ones_count == len(s):\n        if n%2 == 1:\n            return len(s)\n        else:\n            return 0\n    \n    # if ones_count is greater than 0 and less than the length of the string,\n    # calculate the total number of odd valued numbers that can be obtained by rotating the string\n    total_odd = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            ones_count -= 1\n        else:\n            ones_count += 1\n            \n        if ones_count%2 == 1:\n            total_odd += 1\n    \n    # if n is 1, return the total number of odd valued numbers\n    if n == 1:\n        return total_odd\n    \n    # if n is greater than 1,\n    # return the total number of odd valued numbers multiplied by the number of times the string can be rotated without\n    # changing the number of odd valued numbers, plus the total number of odd valued numbers obtained by rotating the string\n    # n times and taking the remainder when divided by the length of the string\n    return total_odd * (n-1) + odd_Equivalent(s[-1] + s[:-1], (n-1)%len(s) + 1)\n",
        "s-9": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-10": " \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    count = 0\n    for i in range(n):\n        if int(s, 2) % 2 != 0:\n            count += 1\n        s = s[-1] + s[:-1]\n    return count\n",
        "s-11": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    # Convert the binary string to an integer\n    num = int(s, 2)\n\n    # Compute the number of bits in the binary string\n    bits = len(s)\n\n    # Rotate the bits to the left by n positions\n    rotated_num = ((num << n) | (num >> (bits - n))) & ((1 << bits) - 1)\n\n    # Count the number of bits with an odd value in the rotated number\n    count = 0\n    while rotated_num:\n        if rotated_num & 1:\n            count += 1\n        rotated_num >>= 1\n\n    # Return 1 if the count is odd, otherwise return 0\n    return count % 2\n",
        "s-12": "\ndef odd_Equivalent(s,n): \n    count = 0\n    for i in range(n):\n        if int(s, 2) % 2 != 0:\n            count += 1\n        s = s[-1] + s[:-1]\n    return count",
        "s-13": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    # Initialize the count of odd numbers to zero\n    count = 0\n    \n    # Convert the binary string s to a list of integers\n    s = [int(x) for x in s]\n    \n    # Rotate the list n times and check if the resulting number is odd\n    for i in range(n):\n        # Remove the first element and append it to the end\n        s.append(s.pop(0))\n        \n        # Convert the list back to a string and then to an integer\n        num = int(''.join(str(i) for i in s), 2)\n        \n        # If the number is odd, increment the count\n        if num % 2 == 1:\n            count += 1\n    \n    if count == 0:\n        # Check if the original number is odd\n        num = int(''.join(str(i) for i in s), 2)\n        if num % 2 == 1:\n            count = 1\n            \n    # Return the count of odd numbers\n    return count",
        "s-14": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    # Initialize count to zero\n    count = 0\n    \n    # Convert the input binary string to an integer\n    num = int(s, 2)\n    \n    # Loop through the range of rotations\n    for i in range(n):\n        # Check if the current value of num is odd\n        if num % 2 == 1:\n            # Increment the count\n            count += 1\n        \n        # Shift the bits of num to the left\n        num = (num << 1 | num >> (len(s)-1)) % (2**len(s))\n    \n    # Return the count\n    return count",
        "s-15": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == \"1\":\n            count += 1\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-16": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    binary = s * 2\n    count = 0\n    for i in range(len(s)):\n        substring = binary[i:i+len(s)]\n        decimal = int(substring, 2)\n        if decimal % 2 == 1:\n            count += 1\n    if n % len(s) == 0:\n        return count * (n // len(s))\n    else:\n        return count * (n // len(s)) + odd_Equivalent(s, n % len(s))\n",
        "s-17": "\n    count = 0\n    for i in range(len(s)):\n        # Rotate the string\n        rotated_s = s[i:] + s[:i]\n        # Convert the rotated string to integer\n        num = int(rotated_s, 2)\n        # Check if the number is odd\n        if num % 2 == 1:\n            count += 1\n    return count\n",
        "s-18": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 1:\n        return count * (len(s) - count)\n    else:\n        return (len(s) - count) * count\n",
        "s-19": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n\n    if count == len(s):\n        if n % 2 == 0:\n            return 0\n        else:\n            return len(s)\n    else:\n        if n % len(s) == 0:\n            return count\n        else:\n            return 0",
        "s-20": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n\n    if n % len(s) == 0:\n        return count\n    else:\n        return len(s) - count\n",
        "s-21": "\ndef odd_Equivalent(s,n): \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % len(s) == 0:\n        return count\n    else:\n        return 1",
        "s-22": "\n    # Count the number of 1s in the binary string\n    count_ones = s.count('1')\n    \n    # If the number of rotations is even, then the number of odd numbers will be equal to the number of even numbers\n    if n % 2 == 0:\n        return count_ones * (len(s) - count_ones)\n    \n    # If the number of rotations is odd, then the number of odd numbers will be equal to the number of 1s and 0s\n    else:\n        return count_ones ** 2 + (len(s) - count_ones) ** 2\n",
        "s-23": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    # Convert the binary string to a list of integers\n    s = [int(x) for x in s]\n    \n    # Count the number of ones in the original binary string\n    ones = s.count(1)\n    \n    # If the number of rotations is even, then the number of ones in the final string\n    # will be the same as the number of ones in the original string\n    if n % 2 == 0:\n        return ones\n    \n    # If the number of rotations is odd, then the number of ones in the final string\n    # will be equal to the length of the string if the original string contains all ones,\n    # otherwise it will be zero\n    if ones == len(s):\n        return len(s)\n    else:\n        return 0",
        "s-24": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if count % 2 == 0 and n % len(s) > 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-25": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    # Count the number of 1's in the original string s\n    ones = s.count('1')\n\n    # If the number of rotations is even, then all the numbers will have the same parity as the original string\n    # If the number of rotations is odd, then the number of 1's in the resulting string will be equal to the number of 0's\n    # Therefore, the number of odd numbers will be equal to the minimum of ones and n - ones\n    if n % 2 == 0:\n        return len(s) if ones == 0 or ones == len(s) else 0\n    else:\n        return min(ones, len(s) - ones) + len(s) if ones == len(s) else min(ones, len(s) - ones)",
        "s-26": " \n    # Converting binary string to integer\n    num = int(s, 2)\n    \n    # Finding the number of digits in the binary string\n    num_of_digits = len(s)\n    \n    # Rotating the binary string n number of times\n    rotated_num = num << n | num >> num_of_digits - n\n    \n    # Converting the rotated binary string to integer\n    rotated_num = int(bin(rotated_num)[2:])\n    \n    # Counting the number of odd digits in the rotated binary string\n    count = 0\n    while rotated_num != 0:\n        if rotated_num % 2 != 0:\n            count += 1\n        rotated_num //= 10\n    \n    # Returning the count of odd digits in the rotated binary string\n    return count\n",
        "s-27": "\ndef odd_Equivalent(s,n): \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % len(s) == 0:\n        return count\n    else:\n        return 1\n",
        "s-28": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    decimal = int(s, 2)\n    length = len(s)\n    rotation = n % length\n    rotated = ((decimal << rotation) & ((1 << length) - 1)) | (decimal >> (length - rotation))\n    count = bin(rotated).count('1') if rotated > 0 else 0\n    return count",
        "s-29": " \n    cnt = 0\n    for i in range(n):\n        if int(s, 2) % 2 == 1:\n            cnt += 1\n        s = s[-1] + s[:-1]\n    return cnt\n",
        "s-30": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if count % 2 == 0 and n % 2 != 0:\n        return len(s) - count\n    elif count % 2 != 0 and n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-31": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    if n == 0:\n        return int(s, 2) % 2\n    count = 0\n    for i in range(n):\n        if int(s, 2) % 2 == 1:\n            count += 1\n        s = s[-1] + s[:-1]\n    return count",
        "s-32": " \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-33": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = s.count('1')\n    if n % len(s) == 0:\n        return count\n    else:\n        return len(s) - count",
        "s-34": " \n    count = 0\n    # Convert the binary string to integer\n    num = int(s, 2)\n    # Loop for the given number of rotations\n    for i in range(n):\n        # Check if the binary representation of the rotated integer has odd number of 1s\n        if bin(num).count('1') % 2 != 0:\n            count += 1\n        # Rotate the integer by 1 bit to the left\n        num = (num << 1) | (num >> (len(s)-1))\n    return count\n",
        "s-35": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 != 0:\n        return count * (len(s) - count)\n    else:\n        return count * count + (len(s) - count) * (len(s) - count)\n",
        "s-36": "\ndef odd_Equivalent(s,n): \n    count = 0\n    for i in range(len(s)):\n        rotated = s[i:] + s[:i]\n        decimal_val = int(rotated, 2)\n        if decimal_val % 2 != 0:\n            count += 1\n    if n % len(s) == 0:\n        return count * (n // len(s))\n    else:\n        remaining_rotations = n % len(s)\n        for i in range(remaining_rotations):\n            rotated = s[i:] + s[:i]\n            decimal_val = int(rotated, 2)\n            if decimal_val % 2 != 0:\n                count += 1\n        return count",
        "s-37": "\ndef odd_Equivalent(s, n): \n    num_ones = s.count('1')\n    if n % 2 == 0:\n        return 0\n    if num_ones == 0 or num_ones == len(s):\n        return len(s)\n    return 1",
        "s-38": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = s.count('1')\n    if n % len(s) == 0:\n        return count * (n // len(s))\n    else:\n        return count * (n // len(s)) + s[:n % len(s)].count('1')",
        "s-39": " \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if count % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-40": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n            \n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-41": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    binary_string = s * 2\n    count = 0\n    for i in range(len(s)):\n        substring = binary_string[i:i+len(s)]\n        decimal = int(substring, 2)\n        if decimal % 2 == 1:\n            count += 1\n    return count if n % len(s) == 0 or n == 0 else count % 2",
        "s-42": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    num_odd = 0 # Counter to keep track of odd numbers\n    for i in range(n):\n        num = int(s, 2) # Convert binary string to integer\n        if num % 2 != 0: # Check if the number is odd\n            num_odd += 1\n        s = s[-1] + s[:-1] # Rotate the binary string\n    return num_odd",
        "s-43": " \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    count = 0\n    for i in range(n):\n        if int(s, 2) % 2 != 0:\n            count += 1\n        s = s[-1] + s[:-1]\n    return count\n",
        "s-44": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    if n == 0:\n        return 1 if int(s, 2) % 2 == 1 else 0\n    \n    # Loop through all possible rotations of the binary string s\n    for i in range(len(s)):\n        rotated = s[i:] + s[:i]\n        \n        # Convert the rotated string to an integer and check if it's odd\n        num = int(rotated, 2)\n        if num % 2 == 1:\n            count += 1\n    \n    return count",
        "s-45": " \n    # Convert the binary string to a list of integers.\n    s = [int(x) for x in s]\n    \n    # Create a new list to store the number of odd numbers obtained after each rotation.\n    odd_counts = []\n    \n    # Perform n rotations and check the number of odd numbers obtained each time.\n    for i in range(n):\n        rotated_s = s[i:] + s[:i]\n        odd_count = sum(x % 2 == 1 for x in rotated_s)\n        odd_counts.append(odd_count)\n    \n    # Count the number of times an odd number was obtained.\n    odd_occurrences = sum(x > 0 for x in odd_counts)\n    return odd_occurrences\n",
        "s-46": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    \n    if count % 2 == 0:\n        return len(s) - count\n    else:\n        return count",
        "s-47": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    for i in range(n):\n        if int(s, 2) % 2 != 0:\n            count += 1\n        s = s[-1] + s[:-1]\n    return count",
        "s-48": " \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-49": " \n    # Convert binary string to integer\n    s_int = int(s, 2)\n  \n    # Number of bits in the binary string\n    num_bits = len(s)\n  \n    # Number of odd numbers\n    num_odd = 0\n  \n    # Loop through all possible rotations\n    for i in range(num_bits):\n        # Rotate the binary string to the right\n        s_int = ((s_int & 1) << (num_bits - 1)) | (s_int >> 1)\n        # Check if the value of the rotated binary string is odd\n        if bin(s_int)[2:] not in ['0', '2', '4', '6', '8']:\n            num_odd += 1\n  \n    # Return the number of odd numbers\n    return num_odd\n",
        "s-50": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    \n    if count % 2 == 0 and n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-51": "\n    # Convert binary string to integer\n    num = int(s, 2)\n    \n    # Bitwise left shift the integer by n positions\n    shifted_num = num << n\n    \n    # Convert the shifted integer to binary string\n    shifted_str = bin(shifted_num)[2:]\n    \n    # Count the number of odd values in the shifted binary string\n    count = 0\n    for i in shifted_str:\n        if int(i) % 2 != 0:\n            count += 1\n    \n    # Return the count\n    return count\n",
        "s-52": " \n    # convert the binary string to a list of integers\n    binary_lst = [int(char) for char in s]\n    \n    # if the sum of the binary list is even, then every rotation will have an even value\n    if sum(binary_lst) % 2 == 0:\n        return 0\n    \n    # if the sum of the binary list is odd, then there will be exactly n odd rotations\n    else:\n        return n\n",
        "s-53": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n            \n    if n % len(s) == 0:\n        return count\n    else:\n        return len(s) - count",
        "s-54": "\n    # Count the number of ones in the binary string\n    ones = s.count('1')\n    \n    # If there are no ones, return 0\n    if ones == 0:\n        return 0\n    \n    # If the string contains only ones, return n if n is odd and 0 otherwise\n    if ones == len(s):\n        return n if n % 2 == 1 else 0\n    \n    # If there are some ones, return the number of odd numbers\n    return ones if n % 2 == 0 else len(s) - ones\n",
        "s-55": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    \n    if count % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-56": "\nimport math\n\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    if n == 0:\n        return 0\n    \n    nums = [int(x) for x in s]\n    \n    gcd = math.gcd(n, len(nums))\n    \n    count = 0\n    for i in range(gcd):\n        for j in range(i, len(nums), gcd):\n            if nums[j] == 1:\n                count += 1\n    \n    return count",
        "s-57": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    # Convert the binary string to decimal\n    decimal_value = int(s, 2)\n    \n    # Calculate the number of digits in the binary string\n    num_digits = len(s)\n    \n    # Calculate the number of odd digits in the binary string\n    num_odd_digits = len([digit for digit in s if int(digit) % 2 != 0])\n    \n    # Calculate the number of even digits in the binary string\n    num_even_digits = num_digits - num_odd_digits\n    \n    # Calculate the number of rotations required to get back to the original string\n    num_rotations = n % num_digits\n    \n    # Calculate the decimal value after rotating the binary string\n    rotated_decimal_value = (decimal_value << num_rotations) | (decimal_value >> (num_digits - num_rotations))\n    \n    # Convert the rotated decimal value back to binary\n    rotated_binary_string = bin(rotated_decimal_value)[2:]\n    \n    # Calculate the number of odd digits in the rotated binary string\n    num_odd_digits_rotated = len([digit for digit in rotated_binary_string if int(digit) % 2 != 0])\n    \n    # Calculate the number of even digits in the rotated binary string\n    num_even_digits_rotated = num_digits - num_odd_digits_rotated\n    \n    # Return the number of numbers with an odd value when rotating the binary string the given number of times\n    return num_odd_digits_rotated",
        "s-58": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    binary_string = str(s)\n    num_odd = 0\n    for i in range(n):\n        if int(binary_string, 2) % 2 != 0:\n            num_odd += 1\n        binary_string = binary_string[-1] + binary_string[:-1]\n    return num_odd",
        "s-59": " \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    count = 0\n    for i in range(len(s)):\n        rotated = s[i:] + s[:i]\n        decimal_value = int(rotated, 2)\n        if decimal_value % 2 != 0:\n            count += 1\n    return count\n",
        "s-60": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    for i in range(n):\n        if int(s, 2) % 2 != 0:\n            count += 1\n        s = s[-1] + s[:-1]\n    return count",
        "s-61": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    # Convert the binary string to a list of integers\n    lst = [int(i) for i in s]\n    \n    # Calculate the length of the list\n    length = len(lst)\n    \n    # Rotate the list n times\n    rotated_lst = lst[length-n:] + lst[:length-n]\n    \n    # Count the number of odd values in the rotated list\n    count = 0\n    for num in rotated_lst:\n        if num % 2 != 0:\n            count += 1\n    \n    # Special case when n = 0\n    if n == 0:\n        count = 0\n    \n    # Return the count of odd values\n    return count",
        "s-62": " \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-63": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    num = int(s, 2)\n    max_rotations = len(s)\n    odd_count = 0\n    \n    for i in range(n):\n        if num % 2 == 1:\n            odd_count += 1\n        \n        num = (num << 1) | (num >> (max_rotations - 1))\n    \n    return odd_count",
        "s-64": "\ndef odd_Equivalent(s,n): \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % len(s) == 0:\n        return count\n    elif count % 2 == 0:\n        return 0\n    else:\n        return 1",
        "s-65": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % len(s) == 0:\n        return count\n    else:\n        return count % 2",
        "s-66": " \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if count % 2 == 0:\n        return (len(s) - count) * n\n    else:\n        return count * n\n",
        "s-67": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-68": "\n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    binary_str = str(s)\n    odd_count = 0\n    for i in range(n):\n        if int(binary_str, 2) % 2 != 0:\n            odd_count += 1\n        binary_str = binary_str[-1] + binary_str[:-1]\n    return odd_count\n",
        "s-69": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % len(s) == 0:\n        return count\n    else:\n        return len(s) - count\n",
        "s-70": "\n    count = 0\n    \n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    \n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-71": "\ndef odd_Equivalent(s,n): \n    count = 0\n    for i in range(len(s)):\n        if s[i] == \"1\":\n            count += 1\n    if n % len(s) == 0:\n        return count\n    else:\n        return len(s) - count",
        "s-72": " \n    # Count the number of 1's in the binary string s\n    ones_count = s.count('1')\n    \n    # If there are no 1's, return 0\n    if ones_count == 0:\n        return 0\n    \n    # If there are even number of 1's, all rotations will have even number of 1's\n    # and hence no odd values\n    if ones_count % 2 == 0:\n        return 0\n    \n    # If there are odd number of 1's, half the rotations will have odd number of 1's\n    # and half the rotations will have even number of 1's\n    # Hence, return n/2 + 1\n    return n // 2 + 1\n",
        "s-73": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    # Count the number of 1's in the binary string.\n    ones = s.count(\"1\")\n    \n    # If there are no 1's in the string, return 0.\n    if ones == 0:\n        return 0\n    \n    # If the number of rotations is divisible by 2, return the number of 1's.\n    if n % 2 == 0:\n        return ones\n    \n    # If the number of rotations is odd and there are odd number of 1's, return 1.\n    if ones % 2 == 1:\n        return 1\n    \n    # If the number of rotations is odd and there are even number of 1's, return the number of 0's.\n    return len(s) - ones\n",
        "s-74": "\n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    # Convert binary string to integer\n    x = int(s, 2)\n\n    # Count the number of odd integers obtained after rotating the binary string n times\n    count = 0\n    for i in range(len(s)):\n        if x % 2 == 1:\n            count += 1\n        x = (x >> 1) | ((x & 1) << len(s) - 1)\n\n    return count\n",
        "s-75": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    \n    if count == len(s):\n        return len(s)\n    \n    if n % len(s) == 0:\n        return count\n    \n    return count if n % 2 == 0 else len(s) - count",
        "s-76": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    # convert the string to binary\n    binary = int(s, 2)\n    \n    # calculate the number of bits in the binary representation\n    num_bits = len(s)\n    \n    # calculate the value of the rotated binary number\n    rotated = (binary << n % num_bits) | (binary >> (num_bits - (n % num_bits)))\n    \n    # count the number of odd digits in the rotated number\n    count = 0\n    while rotated:\n        if rotated % 2 == 1:\n            count += 1\n        rotated //= 2  # Fixed the division operation here\n    \n    return count",
        "s-77": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    s = s * ((n + len(s) - 1) // len(s))  # Fixed the calculation for repeating the string\n    for i in range(len(s)):\n        rotated = s[-i:] + s[:-i]\n        if int(rotated, 2) % 2 != 0:\n            count += 1\n    return count",
        "s-78": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    for i in range(len(s)):\n        if s[i] == \"1\":\n            count += 1\n    if count % 2 == 0 and n == 0:\n        return 0\n    else:\n        return count",
        "s-79": "\ndef odd_Equivalent(s,n): \n    count = s.count('1')\n    \n    if count == 0:\n        return 0\n    \n    if n % len(s) == 0:\n        return count\n    \n    return ((count + n - 1) % 2) + (count if s[n % len(s) - 1] == '1' else 0)",
        "s-80": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    binary = s * n\n    count = 0\n    for i in binary:\n        if i == '1':\n            count += 1\n    return count % 2",
        "s-81": "\ndef odd_Equivalent(s,n): \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n\n    if count == 0:\n        return 0\n    elif n % len(s) == 0:\n        return count\n    else:\n        return count % 2",
        "s-82": " \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    count = 0\n    \n    # Convert the binary string s to a list of integers\n    s = [int(x) for x in s]\n    \n    # Rotate the binary string n times\n    for i in range(n):\n        s = s[-1:] + s[:-1]\n        \n    # Count the number of numbers with an odd value\n    for num in s:\n        if num % 2 != 0:\n            count += 1\n    \n    return count\n",
        "s-83": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-84": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n            \n    if count == len(s):\n        return len(s)\n    elif count == 0:\n        return 0\n    else:\n        return count % 2",
        "s-85": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    \n    # Convert string s to a binary string\n    binary_string = ''.join(format(int(i), 'b') for i in s)\n    \n    # Perform the rotation operation n times\n    rotated_string = binary_string[-n:] + binary_string[:-n]\n    \n    # Count the number of odd numbers in the rotated string\n    for char in rotated_string:\n        if int(char) % 2 == 1:\n            count += 1\n    \n    # Return the count of odd numbers\n    return count",
        "s-86": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    ones = s.count('1')\n\n    if ones == 0:\n        return 0\n\n    if n % len(s) == 0:\n        return ones\n\n    if ones % 2 == 0:\n        return 0\n\n    return 1",
        "s-87": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-88": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % len(s) == 0:\n        return count\n    elif count % 2 == 0:\n        return 0\n    else:\n        return 1",
        "s-89": "\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n\n    if n % 2 == 0:\n        return len(s) - count\n    else:\n        return count\n",
        "s-90": "\ndef odd_Equivalent(s, n):\n    count = 0\n    for i in range(len(s)):\n        num = s[i:] + s[:i]\n        if int(num, 2) % 2 == 1:\n            count += 1\n    return count * ((n-1) // len(s) + 1)",
        "s-91": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    l = len(s)\n    \n    if l == 0:\n        return 0\n    \n    if n % l == 0:\n        return 0\n    \n    ones = s.count('1')\n    \n    if n % 2 == 1:\n        return (l - ones) % 2\n    \n    return ones",
        "s-92": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n\n    count = 0\n    if n > 0:\n        for i in range(n):\n            if int(s, 2) % 2 != 0:\n                count += 1\n            s = s[-1] + s[:-1]\n    return count",
        "s-93": "\ndef odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if count == len(s) or count == 0:\n        return count\n    elif n % 2 == 0:\n        return count * (len(s) - count)\n    else:\n        return (len(s) - count) * count",
        "s-94": "\ndef odd_Equivalent(s, n):\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n\n    if n % len(s) == 0:\n        return count * n // len(s)\n    elif n % len(s) % 2 == 0:\n        return (len(s) - count) * (n % len(s) // 2)\n    else:\n        return count * (n % len(s) // 2) + int(s[:n % len(s)].count('1'))",
        "s-95": "\ndef odd_Equivalent(s, n):\n    nums = [int(x) for x in s]\n    count = nums.count(1)\n    \n    if count == 0:\n        return 0\n    \n    elif count == 1:\n        return len(nums)\n    \n    elif count % 2 == 1:\n        return len(nums)\n    \n    else:\n        return nums.count(0) if n % 2 == 0 else count",
        "s-96": "\ndef odd_Equivalent(s,n): \n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n\n    if n % len(s) == 0:\n        return count\n\n    if count % 2 == 1:\n        return 1\n    else:\n        return 0",
        "s-97": "\n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    if n % 2 == 0:\n        return count * (len(s) - count)\n    else:\n        return count * count\n",
        "s-98": "\n    # Count the number of 1s in the original string\n    one_count = s.count('1')\n\n    # If there are no 1s, there will be no odd numbers\n    if one_count == 0:\n        return 0\n\n    # If the string is all 1s, there will be odd numbers for every rotation\n    if one_count == len(s):\n        return len(s)\n\n    # If the number of rotations is even, there will be no odd numbers\n    if n % 2 == 0:\n        return 0\n\n    # If the number of rotations is odd, there will be odd numbers for each position\n    return one_count * n + (len(s) - one_count) * (n - 1)\n",
        "s-99": "\n    count = 0\n    # Convert the binary string to an integer\n    s_int = int(s, 2)\n    # Loop through the number of rotations\n    for i in range(n):\n        # Rotate the binary representation of the integer by 1 bit to the left\n        s_int = (s_int << 1) | (s_int >> (len(s) - 1))\n        # Check if the value of the rotated integer is odd\n        if s_int % 2 == 1:\n            count += 1\n    return count\n"
    }
}