{
    "task_id": "MbppEval/581",
    "iter_num": 44,
    "already_test_oracle_gt": {},
    "pass_num_dict": {
        "s-5": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41",
            "t-49"
        ],
        "s-15": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41",
            "t-49"
        ],
        "s-66": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41",
            "t-49"
        ],
        "s-77": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41",
            "t-49"
        ],
        "s-80": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41",
            "t-49"
        ],
        "s-81": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41",
            "t-49"
        ],
        "s-96": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41",
            "t-49"
        ],
        "s-45": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41"
        ],
        "s-46": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41"
        ],
        "s-54": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41"
        ],
        "s-82": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41"
        ],
        "s-89": [
            "t-0",
            "t-12",
            "t-14",
            "t-16",
            "t-41"
        ],
        "s-0": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-1": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-2": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-3": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-4": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-6": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-7": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-8": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-9": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-10": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-11": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-12": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-13": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-14": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-16": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-17": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-18": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-19": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-20": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-21": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-22": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-23": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-24": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-25": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-26": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-27": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-28": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-29": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-30": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-31": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-32": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-33": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-34": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-35": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-36": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-37": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-38": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-39": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-40": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-41": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-42": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-43": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-44": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-47": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-48": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-49": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-50": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-51": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-52": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-53": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-55": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-56": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-57": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-58": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-59": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-60": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-61": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-62": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-63": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-64": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-65": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-67": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-68": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-69": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-70": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-71": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-72": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-73": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-74": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-75": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-76": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-78": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-79": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-83": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-84": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-85": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-86": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-87": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-88": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-90": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-91": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-92": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-93": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-94": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-95": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-97": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-98": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ],
        "s-99": [
            "t-0",
            "t-12",
            "t-14",
            "t-41"
        ]
    },
    "code_test_output": {
        "s-0": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 6.0,
            "t-41": 0.0,
            "t-49": 101.03453162872775
        },
        "s-1": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-2": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-3": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-4": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 6.0,
            "t-41": 0.0,
            "t-49": 101.03453162872775
        },
        "s-5": {
            "t-0": 0,
            "t-12": 0,
            "t-14": 0,
            "t-16": 4,
            "t-41": 0,
            "t-49": 175
        },
        "s-6": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 70.06939094329987
        },
        "s-7": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-8": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-9": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 183.11388300841895
        },
        "s-10": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-11": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-12": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-13": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 6.0,
            "t-41": 0.0,
            "t-49": 101.03453162872775
        },
        "s-14": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-15": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 4.0,
            "t-41": 0.0,
            "t-49": 175.0
        },
        "s-16": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-17": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-18": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-19": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-20": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-21": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 20.0,
            "t-41": 0.0,
            "t-49": 205.27756377319946
        },
        "s-22": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-23": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-24": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 115.13878188659973
        },
        "s-25": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 115.13878188659973
        },
        "s-26": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-27": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 5.0,
            "t-41": 0.0,
            "t-49": 63.017265814363874
        },
        "s-28": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-29": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-30": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 70.06939094329987
        },
        "s-31": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-32": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.069
        },
        "s-33": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-34": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 183.11388300841895
        },
        "s-35": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-36": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.07
        },
        "s-37": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-38": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-39": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 115.13878188659973
        },
        "s-40": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-41": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 115.13878188659973
        },
        "s-42": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 104.05694150420948
        },
        "s-43": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-44": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-45": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 4.0,
            "t-41": 0.0,
            "t-49": 62.5
        },
        "s-46": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 4.0,
            "t-41": 0.0,
            "t-49": 595.2589872154581
        },
        "s-47": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 104.05694150420948
        },
        "s-48": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 2.0,
            "t-41": 0.0,
            "t-49": 151.03453162872773
        },
        "s-49": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 70.06939094329987
        },
        "s-50": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 6.0,
            "t-41": 0.0,
            "t-49": 101.03453162872775
        },
        "s-51": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-52": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-53": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-54": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 4.0,
            "t-41": 0.0,
            "t-49": 62.5
        },
        "s-55": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-56": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 115.13878188659973
        },
        "s-57": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 329.138126514911
        },
        "s-58": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 2.8284271247461903,
            "t-41": 0.0,
            "t-49": 106.6536450385077
        },
        "s-59": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-60": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-61": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-62": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-63": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 329.138126514911
        },
        "s-64": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-65": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-66": {
            "t-0": 0,
            "t-12": 0,
            "t-14": 0,
            "t-16": 4,
            "t-41": 0,
            "t-49": 175
        },
        "s-67": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-68": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 5.0,
            "t-41": 0.0,
            "t-49": 63.017265814363874
        },
        "s-69": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-70": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-71": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 104.05694150420948
        },
        "s-72": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-73": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-74": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 104.05694150420948
        },
        "s-75": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 329.138126514911
        },
        "s-76": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-77": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 4.0,
            "t-41": 0.0,
            "t-49": 175.0
        },
        "s-78": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-79": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 329.138126514911
        },
        "s-80": {
            "t-0": 0,
            "t-12": 0,
            "t-14": 0,
            "t-16": 4,
            "t-41": 0,
            "t-49": 175
        },
        "s-81": {
            "t-0": 0,
            "t-12": 0,
            "t-14": 0,
            "t-16": 4,
            "t-41": 0,
            "t-49": 175
        },
        "s-82": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 4.0,
            "t-41": 0.0,
            "t-49": 62.5
        },
        "s-83": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-84": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-85": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-86": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-87": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 183.11388300841895
        },
        "s-88": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-89": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 4.0,
            "t-41": 0.0,
            "t-49": 100.0
        },
        "s-90": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-91": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-92": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-93": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.06906326
        },
        "s-94": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 329.138126514911
        },
        "s-95": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 5.0,
            "t-41": 0.0,
            "t-49": 63.017265814363874
        },
        "s-96": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 4.0,
            "t-41": 0.0,
            "t-49": 175.0
        },
        "s-97": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-98": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 8.0,
            "t-41": 0.0,
            "t-49": 177.0690632574555
        },
        "s-99": {
            "t-0": 0.0,
            "t-12": 0.0,
            "t-14": 0.0,
            "t-16": 12.0,
            "t-41": 0.0,
            "t-49": 329.138126514911
        }
    },
    "code_test_res": {
        "s-0": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-1": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-2": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-3": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-4": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-5": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": true
        },
        "s-6": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-7": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-8": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-9": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-10": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-11": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-12": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-13": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-14": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-15": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": true
        },
        "s-16": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-17": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-18": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-19": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-20": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-21": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-22": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-23": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-24": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-25": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-26": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-27": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-28": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-29": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-30": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-31": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-32": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-33": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-34": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-35": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-36": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-37": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-38": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-39": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-40": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-41": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-42": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-43": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-44": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-45": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": false
        },
        "s-46": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": false
        },
        "s-47": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-48": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-49": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-50": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-51": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-52": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-53": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-54": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": false
        },
        "s-55": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-56": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-57": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-58": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-59": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-60": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-61": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-62": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-63": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-64": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-65": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-66": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": true
        },
        "s-67": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-68": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-69": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-70": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-71": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-72": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-73": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-74": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-75": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-76": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-77": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": true
        },
        "s-78": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-79": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-80": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": true
        },
        "s-81": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": true
        },
        "s-82": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": false
        },
        "s-83": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-84": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-85": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-86": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-87": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-88": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-89": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": false
        },
        "s-90": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-91": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-92": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-93": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-94": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-95": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-96": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": true,
            "t-41": true,
            "t-49": true
        },
        "s-97": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-98": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        },
        "s-99": {
            "t-0": true,
            "t-12": true,
            "t-14": true,
            "t-16": false,
            "t-41": true,
            "t-49": false
        }
    },
    "solution_dict": {
        "s-0": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    #calculate the slant height\n    l = ((b/2)**2 + s**2)**0.5\n    #calculate the area of the base\n    base_area = b**2\n    #calculate the lateral surface area\n    lateral_area = b * l\n    #calculate the total surface area\n    total_area = base_area + lateral_area\n    #return the total surface area\n    return total_area\n",
        "s-1": "\ndef surface_Area(b, s):\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    \n    def surface_Area(b, s): \n        '''\n        Write a python function to find the surface area of a square pyramid with a given base edge and height.\n        '''\n    \n        # calculate the slant height of the pyramid\n        l = ((b/2)**2 + s**2)**0.5\n    \n        # calculate the surface area of the pyramid using the base edge, slant height, and height\n        surface_area = b**2 + 2*b*l\n    \n        # return the surface area of the pyramid\n        return round(surface_area, 3)\n\n    return surface_Area(b, s)\n",
        "s-2": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    # Calculate the slant height of the pyramid using Pythagoras theorem\n    slant_height = ((b/2)**2 + s**2)**0.5\n    \n    # Calculate the surface area of the square pyramid\n    surface_area = (b**2) + (2*b*slant_height)\n    \n    return round(surface_area, 3)",
        "s-3": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    # Calculate the slant height\n    l = ((b/2)**2 + s**2)**0.5\n    # Calculate the area of the base\n    A_b = b**2\n    # Calculate the area of the four triangular faces\n    A_t = 4 * (0.5 * b * l)\n    # Calculate the total surface area\n    A = A_b + A_t\n    return round(A, 3)",
        "s-4": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # Calculate the slant height using Pythagorean theorem\n    l = (b**2 + 4*s**2)**0.5 / 2\n    # Calculate the area of each triangular face\n    face_area = 0.5 * b * l\n    # Calculate the area of the square base\n    base_area = b**2\n    # Calculate the total surface area\n    surface_area = 2 * face_area + base_area\n    return surface_area\n",
        "s-5": "\n    base_area = b * b\n    side_area = b * s\n    surface_area = base_area + 2 * side_area\n    return surface_area\n",
        "s-6": "\n    # Calculate the area of the base\n    base_area = b * b\n\n    # Calculate the slant height of the pyramid\n    slant_height = ((s/2)**2 + b**2)**0.5\n\n    # Calculate the lateral area of the pyramid\n    lateral_area = b * slant_height\n\n    # Calculate the total surface area of the pyramid\n    surface_area = base_area + lateral_area\n\n    # Return the surface area\n    return surface_area\n",
        "s-7": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height of the pyramid\n    l = ((b/2)**2 + s**2)**0.5\n    \n    # calculate the area of the base\n    base_area = b**2\n    \n    # calculate the area of each triangle face\n    face_area = (b*l)/2\n    \n    # calculate the total surface area of the pyramid\n    surface_area = base_area + 4*face_area\n    \n    return round(surface_area, 2)",
        "s-8": "\ndef surface_Area(b, s): \n    side = ((b/2)**2 + s**2)**0.5\n    area = b**2 + b*side*2\n    return round(area, 14)",
        "s-9": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height\n    l = (s**2 + b**2)**0.5\n    \n    # calculate the surface area\n    area = b**2 + 2*b*l\n    \n    # return the surface area\n    return area\n",
        "s-10": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    l = (b**2 + 4*s**2)**0.5\n    area = b**2 + b*l\n    return round(area, 2)",
        "s-11": "\ndef surface_Area(b, s): \n    slant_height = ((b / 2) ** 2 + s ** 2) ** 0.5\n    face_area = 0.5 * b * slant_height\n    base_area = b ** 2\n    surface_area = face_area * 4 + base_area\n    return round(surface_area, 3)",
        "s-12": "\ndef surface_Area(b,s): \n    import math\n    area = b**2 + 2 * b * math.sqrt((b/2)**2 + s**2)\n    return round(area, 3)",
        "s-13": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height\n    l = ((b/2)**2 + s**2)**0.5\n    # calculate the lateral surface area\n    LSA = b*l\n    # calculate the base surface area\n    BSA = b**2\n    # calculate the total surface area\n    TSA = LSA + BSA\n    # return the total surface area\n    return TSA\n",
        "s-14": "\ndef surface_Area(b, s):\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    # Calculate the area of the base\n    base_area = b ** 2\n\n    # Calculate the slant height\n    slant_height = (s ** 2 + (b / 2) ** 2) ** 0.5\n\n    # Calculate the lateral surface area\n    lateral_surface_area = b * slant_height / 2\n\n    # Calculate the total surface area\n    total_surface_area = base_area + 4 * lateral_surface_area\n\n    # Return the total surface area\n    return total_surface_area\n",
        "s-15": "\n    # Calculate the area of the base\n    base_area = b * b\n    \n    # Calculate the area of each triangle face\n    triangle_area = 0.5 * b * s\n    \n    # Calculate the total surface area\n    surface_area = base_area + 4 * triangle_area\n    \n    # Return the total surface area\n    return surface_area\n",
        "s-16": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    import math\n    base_area = b ** 2\n    side_area = 2 * b * math.sqrt((b / 2) ** 2 + s ** 2)\n    surface_area = base_area + side_area\n    return surface_area\n",
        "s-17": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    # Surface area formula of square pyramid\n    area = b**2 + 2 * b * ((s**2 + (b/2)**2)**0.5)\n    return round(area, 2)",
        "s-18": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    # calculate the slant height of the pyramid\n    l = (b**2 + 4*s**2)**0.5/2\n    # calculate the area of the base\n    A_base = b**2\n    # calculate the area of each triangular face\n    A_tri = b * l / 2\n    # calculate the total surface area\n    A_total = A_base + 4 * A_tri\n    # return the result\n    return round(A_total, 3)",
        "s-19": "\ndef surface_Area(b, s): \n    l = ((b**2)/4 + s**2)**0.5\n    area = b**2 + 2*b*l\n    return round(area, 3)",
        "s-20": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\ndef surface_Area(b, s):\n    l = ((b/2)**2 + s**2)**0.5\n    area = b**2 + b*l*2\n    return round(area, 3)",
        "s-21": "\n    # Calculate the slant height\n    l = (s**2 + (4 * b**2))**0.5\n\n    # Calculate the surface area of the square pyramid\n    area = b**2 + 2 * b * l\n\n    # Return the surface area\n    return area\n",
        "s-22": "\ndef surface_Area(b, s):\n    l = ((b / 2) ** 2 + s ** 2) ** 0.5\n    area = b ** 2 + 2 * b * l\n    return round(area, 3)",
        "s-23": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    side_area = b**2\n    triangle_area = b * ((b/2)**2 + s**2)**0.5\n    return side_area + 2 * triangle_area\n",
        "s-24": "\n    # Finding the slant height of the pyramid\n    l = (s ** 2 + (4 * b ** 2)) ** 0.5 / 2\n    # Finding the area of the base\n    area_base = b ** 2\n    # Finding the area of each triangular face\n    area_triangular_face = 0.5 * b * l\n    # Finding the total surface area of the pyramid\n    surface_area = area_base + (4 * area_triangular_face)\n    # Return the surface area of the pyramid\n    return surface_area\n",
        "s-25": "\n    # Find the slant height of the pyramid\n    l = (s**2 + (4 * b**2))**0.5 / 2\n\n    # Calculate the surface area\n    SA = b**2 + 2 * b * l\n\n    return SA\n",
        "s-26": "\ndef surface_Area(b,s): \n    import math\n    area = (b**2) + (2*b*math.sqrt((b**2)/4 + s**2))\n    return round(area, 3)",
        "s-27": "\n    # calculate the slant height of the pyramid\n    l = ((b/2)**2 + s**2)**0.5\n    # calculate the lateral area of the pyramid\n    la = 0.5*b*l\n    # calculate the base area of the pyramid\n    ba = b**2\n    # calculate the total surface area of the pyramid\n    ta = la + ba\n    return ta\n",
        "s-28": "\ndef surface_Area(b,s): \n    l = (s**2 + (b/2)**2)**0.5\n    area = b**2 + 2*b*l\n    return round(area, 2)",
        "s-29": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    # Calculate the slant height of the square pyramid\n    l = ((b/2)**2 + s**2)**0.5\n    \n    # Calculate the surface area of the square pyramid\n    area = (b**2) + 2*b*l\n    \n    # Round the surface area to two decimal places\n    area = round(area, 2)\n    \n    # Return the surface area of the square pyramid\n    return area",
        "s-30": " \n    # Calculate the slant height of the pyramid\n    l = (s**2 + (4*b**2))**0.5 / 2\n    # Calculate the area of one triangular face\n    A = b * l / 2\n    # Calculate the area of the square base\n    B = b**2\n    # Calculate the total surface area of the pyramid\n    SA = 2*A + B\n    return SA\n",
        "s-31": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    # Surface area of a square pyramid is equal to the sum of the area of the base and the area of the four triangular faces.\n    # Calculate the area of the base\n    base_area = b ** 2\n    # Calculate the slant height\n    slant_height = ((s ** 2) + (b / 2) ** 2) ** 0.5\n    # Calculate the area of each triangular face\n    triangular_area = (b * slant_height) / 2\n    # Calculate the total surface area\n    surface_area = base_area + 4 * triangular_area\n    return round(surface_area, 2)",
        "s-32": "\ndef surface_Area(b, s): \n    l = ((b/2)**2 + s**2)**0.5\n    area = b**2 + 2*b*l\n    return round(area, 3)",
        "s-33": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    # calculate the slant height\n    l = (b**2 + (4*s**2))**0.5 / 2\n    # calculate the area of the base\n    B = b ** 2\n    # calculate the area of each triangular face\n    T = (b * l) / 2\n    # calculate the total surface area\n    SA = B + 4 * T\n    return round(SA, 2)",
        "s-34": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    import math\n    \n    #calculate the slant height\n    l = math.sqrt(b**2 + s**2)\n    \n    #calculate the surface area\n    area = b**2 + 2*b*l\n    \n    return area\n",
        "s-35": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    l = ((b/2)**2 + s**2)**0.5\n    A = b**2 + 2*b*l\n    return round(A, 2)\n",
        "s-36": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    import math\n    \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    area = b**2 + 2*b*math.sqrt((b**2/4) + s**2)\n    return round(area, 2)",
        "s-37": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    import math\n    \n    # surface area formula of a square pyramid\n    return b**2 + 2*b*math.sqrt((b/2)**2 + s**2)\n",
        "s-38": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    import math\n\n    return b**2 + 2*b*math.sqrt((b**2)/4 + s**2)",
        "s-39": "\n    # Calculate the slant height of the pyramid\n    l = (s**2 + (4 * b**2))**0.5 / 2\n    \n    # Calculate the surface area of the pyramid\n    area = b**2 + 2 * b * l\n    \n    # Return the surface area\n    return area\n",
        "s-40": " \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    import math\n    \n    # calculate slant height\n    l = math.sqrt(b**2 + 4*s**2) / 2\n    \n    # calculate surface area\n    A = b**2 + 2*b*l\n    \n    return A\n",
        "s-41": "\n    # Calculate the slant height of the pyramid\n    l = (s**2 + (4 * b**2))**0.5 / 2\n\n    # Calculate the surface area of the pyramid\n    area = b**2 + 2 * b * l\n\n    # Return the surface area of the pyramid\n    return area\n",
        "s-42": "\n    # calculate the slant height of the pyramid\n    l = (s**2 + b**2)**0.5 / 2\n    # calculate the surface area of the pyramid using the formula\n    area = b**2 + 2*b*l\n    # return the surface area of the pyramid\n    return area\n",
        "s-43": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n \n    l = (b**2 + 4*s**2)**0.5\n    return b**2 + b*l",
        "s-44": "\n    # calculate the slant height of the pyramid\n    l = ((b/2)**2 + s**2)**0.5\n\n    # calculate the surface area of the pyramid\n    surface_area = b**2 + 2*b*l\n\n    # return the surface area\n    return surface_area\n",
        "s-45": "\n    # Calculate the lateral surface area\n    LSA = 0.5 * b * s\n    \n    # Calculate the base area\n    base_area = b ** 2\n    \n    # Calculate the total surface area\n    TSA = LSA + base_area\n    \n    # Return the total surface area\n    return TSA\n",
        "s-46": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    import math\n    \n    # Calculate the slant height of the pyramid\n    slant_height = math.sqrt((b/2)**2 + s**2)\n    \n    # Calculate the lateral surface area of the pyramid\n    lsa = 0.5 * s * b * slant_height\n    \n    # Calculate the base area of the pyramid\n    ba = b ** 2\n    \n    # Calculate the total surface area of the pyramid\n    tsa = lsa + ba\n    \n    # Return the total surface area\n    return tsa",
        "s-47": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # Calculate the slant height\n    l = (s ** 2 + b ** 2) ** 0.5\n    \n    # Calculate the area of each triangle face\n    face_area = 0.5 * b * l\n    \n    # Calculate the area of the square base\n    base_area = b ** 2\n    \n    # Calculate the total surface area\n    surface_area = 2 * face_area + base_area\n    \n    return surface_area\n",
        "s-48": " \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    side_area = b * s\n    triangle_area = (b**2 + (2*s)**2)**0.5 * b / 2\n    surface_area = side_area + triangle_area\n    return surface_area\n",
        "s-49": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    import math  # import math module to use the square root function\n    slant_height = math.sqrt(b**2 + (s/2)**2)  # calculate the slant height using the base edge and height\n    base_area = b**2  # calculate the base area of the pyramid\n    side_area = b * slant_height / 2  # calculate the area of each triangular side\n    total_surface_area = base_area + 2 * side_area  # calculate the total surface area\n    return total_surface_area  # return the total surface area of the pyramid\n",
        "s-50": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    import math\n    a = math.sqrt((b/2)**2 + s**2)\n    surface_area = b * a + b ** 2\n    return surface_area\n",
        "s-51": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    from math import sqrt\n    \n    # Calculating slant height\n    l = sqrt(b**2 + 4*s**2)/2\n    \n    # Calculating surface area\n    SA = b**2 + 2*b*l\n    \n    return SA\n",
        "s-52": " \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate slant height\n    l = ((b/2)**2 + s**2)**0.5\n    # calculate surface area of pyramid\n    area = (b**2) + (2 * b * l)\n    return area\n",
        "s-53": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height of the pyramid\n    l = (s**2 + (b/2)**2)**0.5\n\n    # calculate the area of each triangle face\n    face_area = 0.5 * b * l\n\n    # calculate the area of the square base\n    base_area = b**2\n\n    # calculate the total surface area of the pyramid\n    surface_area = face_area * 4 + base_area\n\n    return surface_area\n",
        "s-54": "\n    '''\n    Calculates the surface area of a square pyramid with a given base edge and height.\n\n    Parameters:\n        b (float): Base edge of the pyramid.\n        s (float): Slant height of the pyramid.\n    \n    Returns:\n        float: Surface area of the pyramid.\n    '''\n    # Calculate the lateral surface area of the pyramid\n    LSA = 0.5 * b * s\n\n    # Calculate the base area of the pyramid\n    BA = b ** 2\n\n    # Calculate the total surface area of the pyramid\n    TSA = LSA + BA\n\n    return TSA\n",
        "s-55": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    \n    import math\n    area = b**2 + 2 * b * math.sqrt(b**2/4 + s**2)\n    return area\n",
        "s-56": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height of the pyramid\n    l = ((s ** 2) + (4 * (b ** 2))) ** 0.5 / 2\n\n    # calculate the lateral surface area of the pyramid\n    LSA = 2 * b * l\n\n    # calculate the base area of the pyramid\n    BA = b ** 2\n\n    # calculate the total surface area of the pyramid\n    TSA = LSA + BA\n\n    # return the total surface area of the pyramid\n    return TSA\n",
        "s-57": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # Calculating the slant height\n    l = (b ** 2 + 4 * s ** 2) ** 0.5\n\n    # Calculating the surface area\n    area = b ** 2 + 2 * b * l\n\n    return area\n",
        "s-58": "\n    return b * (b + (2 * (s ** 2))) ** 0.5\n",
        "s-59": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    import math\n    area = b**2 + 2 * b * math.sqrt((b/2)**2 + s**2)\n    return area",
        "s-60": " \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    l = ((b/2)**2 + s**2)**0.5\n    surface_area = ((b**2) + 2*b*l)\n    return surface_area\n",
        "s-61": "\nimport math\n\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    area = b**2 + 2*b*math.sqrt((b/2)**2 + s**2)\n    return area",
        "s-62": "\n    '''\n    Calculates the surface area of a square pyramid with given base edge and height.\n    '''\n    import math \n    # Calculating slant height\n    l = math.sqrt(s**2 + (b/2)**2)\n    # Calculating surface area\n    area = b**2 + 2*b*l\n    return area\n",
        "s-63": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height using the base edge and height\n    l = (b**2 + 4*s**2)**0.5\n    \n    # calculate the surface area using the base edge, slant height and height\n    area = b**2 + 2*b*l\n    \n    # return the surface area\n    return area\n",
        "s-64": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # Calculate the slant height of the pyramid\n    l = (s ** 2 + (b/2) ** 2) ** 0.5\n\n    # Calculate the surface area of the pyramid\n    area = b ** 2 + 2 * b * l\n\n    # Return the surface area\n    return area\n",
        "s-65": " \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # Calculate the slant height of the pyramid using Pythagorean theorem\n    slant_height = ((b/2)**2 + s**2)**0.5\n\n    # Calculate the surface area using the formula\n    surface_area = b**2 + 2*b*slant_height\n\n    # Return the surface area of the square pyramid\n    return surface_area\n",
        "s-66": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    base_area = b ** 2\n    lateral_area = b * s\n    surface_area = base_area + 2 * lateral_area\n    return surface_area\n",
        "s-67": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    import math\n    area = b**2 + 2*b*math.sqrt((b/2)**2 + s**2)\n    return area\n",
        "s-68": " \n    # Calculate the slant height of the pyramid\n    l = ((b/2)**2 + s**2)**0.5\n    \n    # Calculate the lateral surface area of the pyramid\n    LSA = 0.5 * b * l\n    \n    # Calculate the base surface area of the pyramid\n    BSA = b**2\n    \n    # Calculate the total surface area of the pyramid\n    TSA = LSA + BSA\n    \n    # Return the total surface area of the pyramid\n    return TSA\n",
        "s-69": "\n    # calculate the slant height of the square pyramid\n    l = (b**2 + (4*s**2))**0.5 / 2\n\n    # calculate the surface area of the square pyramid\n    surface_area = b**2 + 2*b*l\n\n    return surface_area\n",
        "s-70": "\n    # calculate the slant height of the pyramid using the Pythagorean theorem\n    l = ((b/2)**2 + s**2)**0.5\n    # calculate the area of each triangular face\n    A = 0.5*b*l\n    # calculate the area of the square base\n    B = b**2\n    # calculate the total surface area of the pyramid\n    S = A*4 + B\n    # return the surface area\n    return S\n",
        "s-71": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    area = b*b + b*(s**2 + b**2)**0.5\n    return area\n",
        "s-72": "\nimport math\n\ndef surface_Area(b, s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    area = b**2 + 2*b*math.sqrt((b/2)**2 + s**2)\n    return area\n",
        "s-73": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # Calculate the slant height\n    l = (b ** 2 + 4 * s ** 2) ** 0.5 / 2\n    # Calculate the surface area\n    area = b ** 2 + 2 * b * l\n    # Return the surface area\n    return area\n",
        "s-74": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    area = b**2 + b*(s**2 + b**2)**0.5\n    return area\n",
        "s-75": "\n    # calculate the slant height\n    l = (b ** 2 + 4 * s ** 2) ** 0.5\n    # calculate the surface area\n    area = b ** 2 + 2 * b * l\n    # return the result\n    return area\n",
        "s-76": "\n    # calculate the slant height\n    l = ((b/2)**2 + s**2)**0.5\n    # calculate the surface area\n    area = b**2 + 2*b*l\n    return area\n",
        "s-77": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the area of the base\n    base_area = b * b\n    \n    # calculate the area of each of the four triangles\n    triangle_area = 0.5 * b * s\n    \n    # calculate the total surface area by adding the areas of the base and the four triangles\n    total_area = base_area + 4 * triangle_area\n    \n    # return the total surface area\n    return total_area\n",
        "s-78": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height\n    l = (b ** 2 + 4 * s ** 2) ** 0.5 / 2\n    # calculate the surface area\n    return b ** 2 + 2 * b * l\n",
        "s-79": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # Calculate the slant height of the pyramid using the Pythagorean theorem\n    l = (b**2 + 4 * s**2)**0.5\n    \n    # Calculate the surface area using the formula\n    A = b**2 + 2 * b * l\n    \n    # Return the calculated surface area\n    return A\n",
        "s-80": "\n    '''\n    Calculates the surface area of a square pyramid given its base edge and height.\n\n    Parameters:\n    b (float): Base edge of the square pyramid\n    s (float): Slant height of the square pyramid\n\n    Returns:\n    float: Surface area of the square pyramid\n    '''\n\n    # Calculate the surface area\n    area = b**2 + 2*b*s\n\n    # Return the surface area\n    return area\n",
        "s-81": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    base_area = b**2\n    side_area = b * s\n    surface_area = base_area + 2 * side_area\n    return surface_area\n",
        "s-82": "\n    # Calculating the lateral surface area of the pyramid\n    lsa = 0.5 * b * s\n\n    # Calculating the base area of the pyramid\n    ba = b ** 2\n\n    # Adding the lateral surface area and the base area of the pyramid\n    sa = lsa + ba\n\n    # Returning the surface area of the pyramid\n    return sa\n",
        "s-83": "\nimport math\n\ndef surface_Area(b, s):\n    area = b**2 + 2*b*math.sqrt((b**2)/4 + s**2)\n    return area\n",
        "s-84": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height using the Pythagorean theorem\n    l = (b**2 + 4*s**2)**0.5\n\n    # calculate the base area\n    base_area = b**2\n\n    # calculate the lateral area\n    lateral_area = 2*b*l/2\n\n    # calculate the total surface area\n    total_area = base_area + lateral_area\n\n    # return the total surface area\n    return total_area\n",
        "s-85": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # Calculate the slant height of the triangular faces\n    slant_height = (s ** 2 + (b / 2) ** 2) ** 0.5\n    \n    # Calculate the area of each triangular face\n    area_triangle = (b * slant_height) / 2\n    \n    # Calculate the area of the square base\n    area_base = b ** 2\n    \n    # Calculate the total surface area of the square pyramid\n    surface_area = area_triangle * 4 + area_base\n    \n    # Return the surface area\n    return surface_area\n",
        "s-86": "\n    # calculate the slant height of the pyramid\n    l = (b**2 + 4*s**2)**0.5\n    # calculate the area of each triangular face\n    face_area = 0.5 * b * l\n    # calculate the area of the square base\n    base_area = b**2\n    # calculate the total surface area by adding up the areas of all faces\n    total_area = 2 * face_area + base_area\n    # return the total surface area\n    return total_area\n",
        "s-87": "\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height\n    l = (s**2 + b**2)**0.5\n    \n    # calculate the surface area of the square pyramid\n    surface_area = b**2 + 2*b*l\n    \n    return surface_area\n",
        "s-88": "\n    # Calculate the slant height of the pyramid\n    l = (b**2 + 4*s**2)**0.5 / 2.0\n\n    # Calculate the surface area of the pyramid\n    A = b**2 + 2 * b * l\n\n    return A\n",
        "s-89": "\n    base_area = b * b\n    side_area = (2 * b * s) / 2\n    surface_area = base_area + side_area\n    return surface_area\n",
        "s-90": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    '''\n    Calculates the surface area of a square pyramid with a given base edge and height.\n\n    Parameters:\n    b (float): The base edge of the pyramid.\n    s (float): The slant height of the pyramid.\n\n    Returns:\n    float: The surface area of the square pyramid.\n    '''\n    # Calculate the surface area of the square pyramid\n    area = b * (b + 2 * (s**2 + (b**2)/4)**0.5)\n\n    # Return the surface area\n    return area\n",
        "s-91": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    side_area = b**2\n    triangle_area = b * s / 2\n    surface_area = side_area + 2 * b * ((b**2/4 + s**2)**0.5)\n    return surface_area",
        "s-92": "\ndef surface_Area(b, s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n \n    area = b ** 2 + 2 * b * (s ** 2 + (b ** 2) / 4) ** 0.5 # Calculate the surface area of the square pyramid using the given formula\n    return area # Return the calculated surface area\n",
        "s-93": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    import math\n\n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    area = b * (b + (2 * math.sqrt((b/2)**2 + s**2)))\n    return round(area, 8)",
        "s-94": "\n    # Calculate the slant height\n    l = (b ** 2 + 4 * s ** 2) ** 0.5\n\n    # Calculate the surface area\n    area = b ** 2 + 2 * b * l\n\n    # Return the result\n    return area\n",
        "s-95": " \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n    # calculate the slant height of the pyramid\n    l = ((b/2)**2 + s**2)**0.5\n    \n    # calculate the lateral surface area of the pyramid\n    LSA = 0.5 * b * l\n    \n    # calculate the base area of the pyramid\n    BA = b**2\n    \n    # calculate the total surface area of the pyramid\n    TSA = LSA + BA\n    \n    return TSA\n",
        "s-96": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    base_area = b**2\n    lateral_area = b * s / 2\n    surface_area = base_area + 4 * lateral_area\n    return surface_area\n",
        "s-97": "\ndef surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n\n    '''\n    Calculate the surface area of a square pyramid with a given base edge and height.\n\n    Parameters:\n    b (float): Base edge of the square pyramid.\n    s (float): Slant height of the square pyramid.\n\n    Returns:\n    float: Surface area of the square pyramid.\n    '''\n    area = b * (b + 2 * (s**2 + (b/2)**2)**0.5)\n    return area\n",
        "s-98": "\nimport math\n\ndef surface_Area(b, s):\n    area = b**2 + 2 * b * math.sqrt((b/2)**2 + s**2)\n    return area",
        "s-99": "\n    # calculate the slant height\n    l = (b**2 + 4*s**2)**0.5\n    # calculate the surface area\n    area = b**2 + 2*b*l\n    return area\n"
    }
}