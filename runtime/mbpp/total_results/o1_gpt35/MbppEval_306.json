{
    "task_id": "MbppEval/306",
    "iter_num": 40,
    "already_test_oracle_gt": {
        "t-46": 60
    },
    "pass_num_dict": {
        "s-0": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-1": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-2": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-3": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-5": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-7": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-8": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-12": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-13": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-14": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-16": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-20": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-23": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-24": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-25": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-26": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-27": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-28": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-29": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-30": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-31": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-32": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-37": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-38": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-39": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-41": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-43": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-44": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-48": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-49": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-50": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-51": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-52": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-53": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-54": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-56": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-58": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-59": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-64": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-65": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-66": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-69": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-71": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-73": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-76": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-77": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-78": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-81": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-82": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-84": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-86": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-89": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-91": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-92": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-93": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-95": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-99": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-15": [
            "t-0",
            "t-5",
            "t-6",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-57": [
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-45",
            "t-46"
        ],
        "s-83": [
            "t-0",
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-46"
        ],
        "s-68": [
            "t-5",
            "t-6",
            "t-28",
            "t-31",
            "t-33",
            "t-38",
            "t-41",
            "t-46"
        ],
        "s-94": [
            "t-0",
            "t-5",
            "t-24",
            "t-28",
            "t-31",
            "t-38",
            "t-41",
            "t-46"
        ],
        "s-80": [
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33"
        ],
        "s-98": [
            "t-5",
            "t-6",
            "t-24",
            "t-28",
            "t-31",
            "t-33"
        ],
        "s-21": [
            "t-0",
            "t-24",
            "t-28",
            "t-45",
            "t-46"
        ],
        "s-85": [
            "t-5",
            "t-6",
            "t-28",
            "t-31",
            "t-33"
        ],
        "s-36": [
            "t-5",
            "t-28",
            "t-31",
            "t-41"
        ],
        "s-67": [
            "t-5",
            "t-31",
            "t-33",
            "t-45"
        ],
        "s-47": [
            "t-28",
            "t-45",
            "t-46"
        ],
        "s-6": [
            "t-24",
            "t-45"
        ],
        "s-11": [
            "t-24",
            "t-41"
        ],
        "s-17": [
            "t-24",
            "t-45"
        ],
        "s-18": [
            "t-24",
            "t-45"
        ],
        "s-22": [
            "t-24",
            "t-45"
        ],
        "s-35": [
            "t-24",
            "t-45"
        ],
        "s-55": [
            "t-24",
            "t-45"
        ],
        "s-88": [
            "t-24",
            "t-45"
        ],
        "s-90": [
            "t-24",
            "t-45"
        ],
        "s-96": [
            "t-24",
            "t-45"
        ],
        "s-4": [
            "t-45"
        ],
        "s-9": [
            "t-45"
        ],
        "s-45": [
            "t-45"
        ],
        "s-46": [
            "t-45"
        ],
        "s-61": [
            "t-45"
        ],
        "s-62": [
            "t-24"
        ],
        "s-63": [
            "t-41"
        ],
        "s-70": [
            "t-24"
        ],
        "s-72": [
            "t-28"
        ],
        "s-74": [
            "t-45"
        ],
        "s-75": [
            "t-28"
        ],
        "s-79": [
            "t-45"
        ],
        "s-87": [
            "t-45"
        ],
        "s-97": [
            "t-45"
        ],
        "s-10": [],
        "s-19": [],
        "s-33": [],
        "s-34": [],
        "s-40": [],
        "s-42": [],
        "s-60": []
    },
    "code_test_output": {
        "s-0": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-1": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-2": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-3": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-4": {
            "t-0": 103,
            "t-5": 12,
            "t-6": 1,
            "t-24": 103,
            "t-28": 1,
            "t-31": 12,
            "t-33": 3,
            "t-38": 19,
            "t-41": 30,
            "t-45": 10,
            "t-46": 40
        },
        "s-5": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-6": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-7": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-8": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-9": {
            "t-0": null,
            "t-5": null,
            "t-6": null,
            "t-24": null,
            "t-28": null,
            "t-31": null,
            "t-33": null,
            "t-38": null,
            "t-41": null,
            "t-45": 10,
            "t-46": null
        },
        "s-10": {
            "t-0": 101,
            "t-5": 10,
            "t-6": 8,
            "t-24": 101,
            "t-28": 101,
            "t-31": 10,
            "t-33": 4,
            "t-38": 5,
            "t-41": 30,
            "t-45": 0,
            "t-46": 30
        },
        "s-11": {
            "t-0": 102,
            "t-5": 10,
            "t-6": 8,
            "t-24": 102,
            "t-28": 101,
            "t-31": 10,
            "t-33": 4,
            "t-38": 9,
            "t-41": 50,
            "t-45": 50,
            "t-46": 30
        },
        "s-12": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-13": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-14": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-15": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 6,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-16": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-17": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-18": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-19": {
            "t-0": null,
            "t-5": null,
            "t-6": null,
            "t-24": null,
            "t-28": null,
            "t-31": null,
            "t-33": null,
            "t-38": null,
            "t-41": null,
            "t-45": null,
            "t-46": 70
        },
        "s-20": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-21": {
            "t-0": 106,
            "t-5": 13,
            "t-6": 10,
            "t-24": 102,
            "t-28": 102,
            "t-31": 13,
            "t-33": 5,
            "t-38": 13,
            "t-41": 40,
            "t-45": 10,
            "t-46": 60
        },
        "s-22": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-23": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-24": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-25": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-26": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-27": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-28": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-29": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-30": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-31": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-32": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-33": {
            "t-0": 101,
            "t-5": 12,
            "t-6": 7,
            "t-24": 101,
            "t-28": 0,
            "t-31": 12,
            "t-33": 4,
            "t-38": 10,
            "t-41": 30,
            "t-45": 0,
            "t-46": 0
        },
        "s-34": {
            "t-0": 101,
            "t-5": 10,
            "t-6": 8,
            "t-24": 101,
            "t-28": 101,
            "t-31": 10,
            "t-33": 4,
            "t-38": 5,
            "t-41": 30,
            "t-45": 0,
            "t-46": 30
        },
        "s-35": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-36": {
            "t-0": 101,
            "t-5": 15,
            "t-6": 13,
            "t-24": 4,
            "t-28": 102,
            "t-31": 15,
            "t-33": 7,
            "t-38": 7,
            "t-41": 50,
            "t-45": null,
            "t-46": 40
        },
        "s-37": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-38": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-39": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-40": {
            "t-0": 101,
            "t-5": 0,
            "t-6": 0,
            "t-24": 101,
            "t-28": 0,
            "t-31": 0,
            "t-33": 0,
            "t-38": 7,
            "t-41": 0,
            "t-45": 0,
            "t-46": 20
        },
        "s-41": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-42": {
            "t-0": 105,
            "t-5": 10,
            "t-6": 8,
            "t-24": 101,
            "t-28": 101,
            "t-31": 10,
            "t-33": 4,
            "t-38": 12,
            "t-41": 30,
            "t-45": -Infinity,
            "t-46": 50
        },
        "s-43": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-44": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-45": {
            "t-0": 103,
            "t-5": 12,
            "t-6": 1,
            "t-24": 103,
            "t-28": 1,
            "t-31": 12,
            "t-33": 3,
            "t-38": 13,
            "t-41": 30,
            "t-45": 10,
            "t-46": 40
        },
        "s-46": {
            "t-0": null,
            "t-5": 5,
            "t-6": 1,
            "t-24": null,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": null,
            "t-41": 20,
            "t-45": 10,
            "t-46": null
        },
        "s-47": {
            "t-0": 105,
            "t-5": 22,
            "t-6": 15,
            "t-24": 5,
            "t-28": 102,
            "t-31": 22,
            "t-33": 8,
            "t-38": 15,
            "t-41": 60,
            "t-45": 10,
            "t-46": 60
        },
        "s-48": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-49": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-50": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-51": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-52": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-53": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-54": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-55": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-56": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-57": {
            "t-0": 105,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-58": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-59": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-60": {
            "t-0": 102,
            "t-5": 20,
            "t-6": 10,
            "t-24": 5,
            "t-28": 103,
            "t-31": 20,
            "t-33": 8,
            "t-38": 9,
            "t-41": 70,
            "t-45": 20,
            "t-46": 50
        },
        "s-61": {
            "t-0": 105,
            "t-5": 10,
            "t-6": 8,
            "t-24": 101,
            "t-28": 101,
            "t-31": 10,
            "t-33": 4,
            "t-38": 12,
            "t-41": 30,
            "t-45": 10,
            "t-46": 50
        },
        "s-62": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": null,
            "t-46": 30
        },
        "s-63": {
            "t-0": 202,
            "t-5": 10,
            "t-6": 8,
            "t-24": 202,
            "t-28": 101,
            "t-31": 10,
            "t-33": 4,
            "t-38": 10,
            "t-41": 50,
            "t-45": 50,
            "t-46": 40
        },
        "s-64": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-65": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-66": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-67": {
            "t-0": 5,
            "t-5": 15,
            "t-6": 7,
            "t-24": 4,
            "t-28": 2,
            "t-31": 15,
            "t-33": 6,
            "t-38": 7,
            "t-41": 32,
            "t-45": 10,
            "t-46": 12
        },
        "s-68": {
            "t-0": 202,
            "t-5": 15,
            "t-6": 9,
            "t-24": 105,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 20,
            "t-46": 60
        },
        "s-69": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-70": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": null,
            "t-46": 30
        },
        "s-71": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-72": {
            "t-0": 101,
            "t-5": 22,
            "t-6": 15,
            "t-24": 4,
            "t-28": 102,
            "t-31": 22,
            "t-33": 8,
            "t-38": 8,
            "t-41": 60,
            "t-45": 20,
            "t-46": 40
        },
        "s-73": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-74": {
            "t-0": null,
            "t-5": null,
            "t-6": null,
            "t-24": null,
            "t-28": null,
            "t-31": null,
            "t-33": null,
            "t-38": null,
            "t-41": null,
            "t-45": 10,
            "t-46": null
        },
        "s-75": {
            "t-0": 101,
            "t-5": 22,
            "t-6": 8,
            "t-24": 4,
            "t-28": 102,
            "t-31": 22,
            "t-33": 7,
            "t-38": 8,
            "t-41": 60,
            "t-45": 20,
            "t-46": 40
        },
        "s-76": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-77": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-78": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-79": {
            "t-0": 1,
            "t-5": 5,
            "t-6": 1,
            "t-24": 1,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 2,
            "t-41": 20,
            "t-45": 10,
            "t-46": 10
        },
        "s-80": {
            "t-0": 102,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 7,
            "t-41": 70,
            "t-45": 60,
            "t-46": 40
        },
        "s-81": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-82": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-83": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 0,
            "t-46": 60
        },
        "s-84": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-85": {
            "t-0": 201,
            "t-5": 15,
            "t-6": 9,
            "t-24": 108,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 7,
            "t-41": 150,
            "t-45": 150,
            "t-46": 40
        },
        "s-86": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-87": {
            "t-0": 107,
            "t-5": 5,
            "t-6": 8,
            "t-24": 104,
            "t-28": 1,
            "t-31": 5,
            "t-33": 5,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-88": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-89": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-90": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 1,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 2,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-91": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-92": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-93": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-94": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 13,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 7,
            "t-38": 14,
            "t-41": 50,
            "t-45": 50,
            "t-46": 60
        },
        "s-95": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        },
        "s-96": {
            "t-0": 102,
            "t-5": 5,
            "t-6": 5,
            "t-24": 102,
            "t-28": 1,
            "t-31": 5,
            "t-33": 3,
            "t-38": 9,
            "t-41": 20,
            "t-45": 10,
            "t-46": 30
        },
        "s-97": {
            "t-0": 100,
            "t-5": 10,
            "t-6": 15,
            "t-24": 3,
            "t-28": 101,
            "t-31": 10,
            "t-33": 7,
            "t-38": 5,
            "t-41": 30,
            "t-45": 10,
            "t-46": 30
        },
        "s-98": {
            "t-0": 102,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 9,
            "t-41": 70,
            "t-45": 60,
            "t-46": 40
        },
        "s-99": {
            "t-0": 106,
            "t-5": 15,
            "t-6": 9,
            "t-24": 102,
            "t-28": 102,
            "t-31": 15,
            "t-33": 6,
            "t-38": 14,
            "t-41": 50,
            "t-45": 10,
            "t-46": 60
        }
    },
    "code_test_res": {
        "s-0": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-1": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-2": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-3": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-4": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-5": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-6": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-7": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-8": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-9": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-10": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-11": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": true,
            "t-45": false,
            "t-46": false
        },
        "s-12": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-13": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-14": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-15": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": false,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-16": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-17": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-18": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-19": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-20": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-21": {
            "t-0": true,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": true,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": true
        },
        "s-22": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-23": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-24": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-25": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-26": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-27": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-28": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-29": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-30": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-31": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-32": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-33": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-34": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-35": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-36": {
            "t-0": false,
            "t-5": true,
            "t-6": false,
            "t-24": false,
            "t-28": true,
            "t-31": true,
            "t-33": false,
            "t-38": false,
            "t-41": true,
            "t-45": false,
            "t-46": false
        },
        "s-37": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-38": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-39": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-40": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-41": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-42": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-43": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-44": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-45": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-46": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-47": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": true,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": true
        },
        "s-48": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-49": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-50": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-51": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-52": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-53": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-54": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-55": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-56": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-57": {
            "t-0": false,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-58": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-59": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-60": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-61": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-62": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-63": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": true,
            "t-45": false,
            "t-46": false
        },
        "s-64": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-65": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-66": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-67": {
            "t-0": false,
            "t-5": true,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": true,
            "t-33": true,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-68": {
            "t-0": false,
            "t-5": true,
            "t-6": true,
            "t-24": false,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": false,
            "t-46": true
        },
        "s-69": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-70": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-71": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-72": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": true,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-73": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-74": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-75": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": true,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-76": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-77": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-78": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-79": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-80": {
            "t-0": false,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-81": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-82": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-83": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": false,
            "t-46": true
        },
        "s-84": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-85": {
            "t-0": false,
            "t-5": true,
            "t-6": true,
            "t-24": false,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-86": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-87": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-88": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-89": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-90": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-91": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-92": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-93": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-94": {
            "t-0": true,
            "t-5": true,
            "t-6": false,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": false,
            "t-38": true,
            "t-41": true,
            "t-45": false,
            "t-46": true
        },
        "s-95": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        },
        "s-96": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": true,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-97": {
            "t-0": false,
            "t-5": false,
            "t-6": false,
            "t-24": false,
            "t-28": false,
            "t-31": false,
            "t-33": false,
            "t-38": false,
            "t-41": false,
            "t-45": true,
            "t-46": false
        },
        "s-98": {
            "t-0": false,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": false,
            "t-41": false,
            "t-45": false,
            "t-46": false
        },
        "s-99": {
            "t-0": true,
            "t-5": true,
            "t-6": true,
            "t-24": true,
            "t-28": true,
            "t-31": true,
            "t-33": true,
            "t-38": true,
            "t-41": true,
            "t-45": true,
            "t-46": true
        }
    },
    "solution_dict": {
        "s-0": "\n    dp = [0] * (n+1) # initialize an array to store the maximum sum of increasing subsequence until ith index\n    dp[index] = a[index] # set the value of dp[index] as the value of a[index]\n    for i in range(index+1, k+1): # loop from index+1 to k\n        dp[i] = a[i] # set the value of dp[i] as the value of a[i]\n        for j in range(index, i): # loop from index to i-1\n            if a[j] < a[i]: # if a[j] is less than a[i]\n                dp[i] = max(dp[i], dp[j]+a[i]) # update dp[i] with the maximum of dp[i] and dp[j]+a[i]\n    return max(dp) # return the maximum value in dp array\n",
        "s-1": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    dp = [0] * n\n    dp[index] = a[index]\n    \n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    \n    return max(dp)",
        "s-2": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n\n    for i in range(index + 1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n\n        dp[i] += a[i]\n\n    return max(dp)",
        "s-3": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    dp = [0] * n\n    dp[index] = a[index]\n\n    for i in range(index + 1, k+1):  # fixed range\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n\n        dp[i] += a[i]\n\n    return max(dp[index:k+1])  # fixed range",
        "s-4": "\n    dp = [0] * n\n    for i in range(n):\n        dp[i] = a[i]\n        for j in range(i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    res = dp[index]\n    for i in range(index+1, k):\n        if a[i] > a[index]:\n            res = max(res, dp[index] + max_sum_increasing_subseq(a, n, i, k))\n    return res\n",
        "s-5": "\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n    dp = [0] * (n+1)\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j]+a[i])\n    return max(dp)\n",
        "s-6": "\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n    dp = [0]*n\n    dp[index] = a[index]\n    for i in range(index+1,k):\n        for j in range(index,i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-7": "\n    dp = [0] * (n+1)\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-8": "\n    sum_increasing = [0]*n\n    sum_increasing[index] = a[index]\n    for i in range(index+1, k+1):\n        sum_increasing[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                sum_increasing[i] = max(sum_increasing[i], sum_increasing[j]+a[i])\n    return max(sum_increasing[index:k+1])\n",
        "s-9": "\n    max_sum = a[index]\n    for i in range(index):\n        if a[i] < a[index]:\n            max_sum = max(max_sum, a[index] + max_sum_increasing_subseq(a, n, i, k))\n    if k > index:\n        max_sum = max(max_sum, a[index] + max_sum_increasing_subseq(a, n, k, k))\n    return max_sum\n",
        "s-10": "\n    dp = [0]*n\n    for i in range(index+1, k+1):\n        for j in range(index+1):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-11": "\n    dp = [a[i] for i in range(n)]\n    for i in range(index+1, k):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j]+a[i])\n    return max(dp)\n",
        "s-12": "\n    dp = [0] * n\n    dp[index] = a[index]\n\n    for i in range(index + 1, k + 1):\n        max_val = 0\n        for j in range(index, i):\n            if a[j] < a[i]:\n                max_val = max(max_val, dp[j])\n        dp[i] = max_val + a[i]\n\n    return max(dp)\n",
        "s-13": "\n    max_sum = 0\n    dp = [0] * n\n    for i in range(index):\n        dp[i] = a[i]\n        for j in range(i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n        max_sum = max(max_sum, dp[i])\n    dp2 = [0] * n\n    for i in range(index, k+1):\n        dp2[i] = a[i]\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp2[i] = max(dp2[i], dp2[j] + a[i])\n        max_sum = max(max_sum, dp2[i])\n    return max_sum\n",
        "s-14": "\n    inc_sum = [0]*n\n    inc_sum[index] = a[index]\n    for i in range(index+1, k+1):\n        inc_sum[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                inc_sum[i] = max(inc_sum[i], inc_sum[j]+a[i])\n    return max(inc_sum)\n",
        "s-15": "\n    # Initialize an array to store the maximum sum of increasing subsequences\n    # until each index, including the given kth element\n    dp = [0] * n\n\n    # Initialize the maximum sum to be the value of the kth element\n    max_sum = a[k]\n\n    # Iterate over all elements from i to k\n    for i in range(index, k + 1):\n        # Find the maximum sum of increasing subsequences ending at i\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n\n        # Update the maximum sum if the sum including the kth element is greater\n        if i == k:\n            max_sum = max(max_sum, dp[i])\n\n    # Return the maximum sum\n    return max_sum\n",
        "s-16": "\n    dp = [0]*n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-17": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index + 1, k):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-18": "\n    dp = [0]*n    # Initialize dp array with zeros\n    dp[index] = a[index]   # Set value at index as starting point\n    for i in range(index+1, k):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-19": "\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(0, i):\n            if a[j] < a[i] and dp[i] < dp[j]:\n                dp[i] = dp[j]\n        dp[i] += a[i]\n    ans = dp[index]\n    for i in range(index + 1, k + 1):\n        if a[i] > a[index]:\n            ans = max(ans, dp[index] + max_sum_increasing_subseq(a, n, i, k))\n    return ans\n",
        "s-20": "\n    dp = [0]*n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-21": "\n    dp = [a[i] for i in range(index + 1)]\n    for i in range(index + 1, k + 1):\n        dp.append(a[i])\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i - index] = max(dp[i - index], dp[j - index] + a[i])\n    return max(dp)\n",
        "s-22": "\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n    dp = [0] * n\n    for i in range(n):\n        if i == index:\n            dp[i] = a[i]\n        else:\n            dp[i] = a[i]\n            for j in range(i):\n                if a[j] < a[i]:\n                    dp[i] = max(dp[i], dp[j] + a[i])\n    res = dp[index]\n    for i in range(index + 1, k):\n        if a[i] > a[index]:\n            res = max(res, dp[index] + max_sum_increasing_subseq(a, n, i, k))\n    return res\n",
        "s-23": "\n    # Initialize a list to store the maximum sum of increasing subsequence\n    # for each index up to k, including k.\n    dp = [0] * (n + 1)\n    \n    # Initialize the maximum sum to the value at index i.\n    dp[index] = a[index]\n    \n    # Iterate over all indices from i+1 up to k.\n    for i in range(index + 1, k + 1):\n        # Find the maximum sum for all indices j < i that have a value less than a[i].\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    \n    # Return the maximum sum of increasing subsequence up to k, including k.\n    return max(dp)\n",
        "s-24": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-25": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    dp = [0] * n\n    dp[index] = a[index]\n    \n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n                \n    return max(dp)",
        "s-26": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    max_sum = a[index]\n    dp = [0] * n\n    dp[index] = a[index]\n\n    for i in range(index + 1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n        max_sum = max(max_sum, dp[i])\n\n    return max_sum",
        "s-27": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n\n    for i in range(index + 1, k + 1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n\n    return max(dp)\n",
        "s-28": "\n    dp = [0]*n\n    dp[index] = a[index]\n\n    for i in range(index+1, k+1):\n        curr_max = 0\n        for j in range(index, i):\n            if a[i] > a[j]:\n                curr_max = max(curr_max, dp[j])\n        dp[i] = curr_max + a[i]\n\n    return max(dp)\n",
        "s-29": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-30": "\n    dp = [0]*(n+1)\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp[index:k+1])\n",
        "s-31": "\n    dp = [0] * (n+1)\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-32": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-33": "\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = a[i - 1]\n        for j in range(1, i):\n            if a[i - 1] > a[j - 1]:\n                dp[i] = max(dp[i], dp[j] + a[i - 1])\n    ans = dp[index]\n    for i in range(index + 1, k + 1):\n        if a[i - 1] > a[index - 1]:\n            ans = max(ans, dp[index] + max_sum_increasing_subseq(a[i - 1:], n - i + 1, 1, k - i + 1))\n    return ans\n",
        "s-34": "\n    dp = [0] * n\n    for i in range(index+1, k+1):\n        for j in range(index+1):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-35": "\n    dp = [0] * n\n    dp[index] = a[index]\n\n    for i in range(index + 1, k):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n\n    return max(dp)\n",
        "s-36": "\n    # Initialize an array to hold the maximum sum of increasing subsequence up to index i\n    # and including element a[i]\n    dp = [a[i] if i <= index else float('-inf') for i in range(n)]\n    \n    # Iterate over the elements after index i up to k\n    for i in range(index+1, k):\n        # For each element, iterate over all the previous elements up to index i\n        # and update the maximum sum of increasing subsequence with that element\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    \n    # Return the maximum sum of increasing subsequence up to index i\n    # and including element a[k]\n    return max(dp[i] + a[k] for i in range(k) if i <= index)\n",
        "s-37": "\n    dp = [0] * n\n    for i in range(index + 1):\n        dp[i] = a[i]\n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-38": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index + 1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n\n    return max(dp)",
        "s-39": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    dp = [0] * n\n    dp[index] = a[index]\n\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n\n        dp[i] += a[i]\n\n    return max(dp)",
        "s-40": "\n    # initializing dp array with 0\n    dp = [0] * n\n\n    # fill the dp array\n    for i in range(index+1, k):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n\n    return max(dp)\n",
        "s-41": "\n    dp = [0 for i in range(n)]\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-42": "\n    dp = [0]*n\n    ans = float('-inf')\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n        ans = max(ans, dp[i])\n    return ans\n",
        "s-43": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n\n    return max(dp[index:k+1])\n",
        "s-44": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    \n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n                \n    return max(dp)\n",
        "s-45": "\n    inc_sum = [0] * n\n    inc_sum[0] = a[0]\n    for i in range(1, n):\n        for j in range(i):\n            if a[i] > a[j] and inc_sum[i] < inc_sum[j]:\n                inc_sum[i] = inc_sum[j]\n        inc_sum[i] += a[i]\n        \n    max_sum = inc_sum[index]\n    inc_sum_k = 0\n    for i in range(index+1, k):\n        if a[i] > a[index] and inc_sum_k < inc_sum[i]:\n            inc_sum_k = inc_sum[i]\n    max_sum += inc_sum_k\n    \n    return max_sum\n",
        "s-46": "\n    # initialize the maximum sum to the current element\n    max_sum = a[index]\n    \n    # iterate from i to k\n    for i in range(index, k):\n        # initialize the sum to the current element\n        curr_sum = a[i]\n        \n        # iterate from j to i\n        for j in range(index, i):\n            # if the j-th element is less than the i-th element\n            if a[j] < a[i]:\n                # update the current sum\n                curr_sum = max(curr_sum, a[i] + max_sum_increasing_subseq(a, n, j, k))\n        \n        # update the maximum sum\n        max_sum = max(max_sum, curr_sum)\n    \n    # return the maximum sum\n    return max_sum\n",
        "s-47": "\n    # Define a list to store the maximum sum of increasing subsequence up to each index\n    dp = [0] * n\n  \n    # Initialize the first element of the list with the value of the first element in the array\n    dp[0] = a[0]\n  \n    # Loop through the array starting from the second element\n    for i in range(1, n):\n        # Check if the current element is greater than the element at the previous index\n        if a[i] > a[i-1]:\n            # If yes, add the value of the current element to the maximum sum up to the previous index\n            dp[i] = dp[i-1] + a[i]\n        else:\n            # If not, the maximum sum up to the current index is the value of the current element\n            dp[i] = a[i]\n  \n    # Initialize the maximum sum with the value of the kth element\n    max_sum = a[k]\n  \n    # Loop through the array starting from the kth element\n    for i in range(k):\n        # If the current element is less than the kth element and the maximum sum up to the current index plus the value of the kth element is greater than the current maximum sum, update the maximum sum\n        if a[i] < a[k] and dp[i] + a[k] > max_sum:\n            max_sum = dp[i] + a[k]\n  \n    # Return the maximum sum\n    return max_sum\n",
        "s-48": "\n    dp = [0]*n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-49": "\n    dp = [0]*n\n    for i in range(index, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    \n    return max(dp[index:k+1])\n",
        "s-50": "\n    dp = [0]*n\n    dp[index] = a[index]\n\n    for i in range(index+1, k+1):\n        max_val = 0\n        for j in range(index, i):\n            if a[j] < a[i]:\n                max_val = max(max_val, dp[j])\n        dp[i] = max_val + a[i]\n\n    return max(dp[index:k+1])\n",
        "s-51": "\n    dp = [0]*n\n    dp[index] = a[index]\n    \n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        \n        dp[i] += a[i]\n    \n    return max(dp)\n",
        "s-52": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    dp = [0 for i in range(n)]\n    dp[index] = a[index]\n\n    for i in range(index + 1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n\n    return max(dp)",
        "s-53": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    \n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    \n    return max(dp)\n",
        "s-54": "\n    dp = [0 for i in range(n)]\n    dp[index] = a[index]\n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-55": "\n    dp = [0] * n\n    dp[index] = a[index]\n\n    for i in range(index + 1, k):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n\n        dp[i] += a[i]\n\n    return max(dp)\n",
        "s-56": "\n    dp = [0] * n\n    dp[index] = a[index]\n    \n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n                \n    return max(dp)\n",
        "s-57": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    max_sum = a[index]\n    curr_sum = a[index]\n    for i in range(index+1, k+1):\n        if a[i] > a[i-1]:\n            curr_sum += a[i]\n        else:\n            curr_sum = a[i]\n        if curr_sum > max_sum:\n            max_sum = curr_sum\n    return max_sum",
        "s-58": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    # Initialize an array to store the maximum sum of increasing subsequence until ith index\n    dp = [0] * n\n  \n    # Set the maximum sum to the value of the ith element\n    dp[index] = a[index]\n  \n    # Iterate over the array starting from i+1 to k\n    for i in range(index + 1, k+1):\n        # Iterate over the array from 0 to i and find the maximum sum of increasing subsequence\n        for j in range(i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n  \n        # Add the value of the ith element to the maximum sum\n        dp[i] += a[i]\n  \n    # Find the maximum sum from the dp array\n    max_sum = max(dp)\n  \n    # Return the maximum sum\n    return max_sum",
        "s-59": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp[index:k+1])\n",
        "s-60": "\n    dp = [0 for i in range(n)]\n    dp[index] = a[index]\n    for i in range(index+1, n):\n        if a[i] > a[index]:\n            dp[i] = max(dp[i], dp[index] + a[i])\n    return dp[k] + a[index] if k < n else max(dp)\n",
        "s-61": "\n    dp = [0] * n\n    for i in range(index+1):\n        dp[i] = a[i]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index+1, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-62": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index + 1, k):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp[index:k])\n",
        "s-63": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    dp = [0] * n\n\n    for i in range(index + 1):\n        dp[i] = a[i]\n\n    for i in range(index + 1, n):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n\n        dp[i] += a[i] if k > i else 0\n\n    return max(dp)",
        "s-64": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-65": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-66": "\n    dp = [0] * n\n    dp[index] = a[index]\n    \n    for i in range(index+1, k+1):\n        max_sum = 0\n        for j in range(index, i):\n            if a[j] < a[i]:\n                max_sum = max(max_sum, dp[j])\n        dp[i] = max_sum + a[i]\n    \n    return max(dp)\n",
        "s-67": "\n    dp = [0]*n\n    for i in range(n):\n        dp[i] = a[i]\n        for j in range(i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j]+a[i])\n        if i == index:\n            dp[i] += k\n    return max(dp[:index+1])\n",
        "s-68": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    # Initialize dp array with the value of a[index]\n    dp = [a[index]]\n    \n    # Traverse the array from index + 1 to k\n    for i in range(index + 1, k):\n        # If the current element is greater than the last element of dp array, then append it to the dp array\n        if a[i] > dp[-1]:\n            dp.append(a[i])\n    \n    # Add the sum of dp array to the value of a[index] and return the result\n    return sum(dp) + a[k]\n",
        "s-69": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    for i in range(index + 1, k + 1):\n        max_sum = 0\n        for j in range(index, i):\n            if a[j] < a[i]:\n                max_sum = max(max_sum, dp[j])\n        dp[i] = max_sum + a[i]\n    return max(dp)\n",
        "s-70": "\n    dp = [0]*n\n    dp[index] = a[index]\n\n    for i in range(index+1, k):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n\n        dp[i] += a[i]\n\n    return max(dp[index:k])\n",
        "s-71": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)",
        "s-72": "\n    # Initialize dp array with values of a\n    dp = [a[i] for i in range(n)]\n \n    # Iterate over the array from 0 to k\n    for i in range(k):\n \n        # Iterate over the array from 0 to i\n        for j in range(i):\n \n            # Check if the element at j is less than the element at i\n            if a[j] < a[i]:\n \n                # Update the dp array at index i with the maximum value\n                dp[i] = max(dp[i], dp[j] + a[i])\n \n    # Return the maximum value in the dp array\n    return max(dp[:index+1]) + a[k]\n",
        "s-73": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    dp = [0]*n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)",
        "s-74": "\n    max_sum = 0\n    \n    for i in range(index+1):\n        if a[i] < a[k] and i < k:\n            max_sum = max(max_sum, max_sum_increasing_subseq(a, n, i, k))\n            \n    return max_sum + a[index]\n",
        "s-75": "\n    # Initialize an empty list to store the max sum of increasing subsequences\n    dp = [0] * n\n    # Initialize the first element of dp array with the value of the first element of a\n    dp[0] = a[0]\n\n    # Loop through the array a from the second element to the kth element\n    for i in range(1, k):\n        # Loop through the array a from the first element to i\n        for j in range(i):\n            # If the current element is greater than the previous element\n            if a[i] > a[j]:\n                # Update the max sum of increasing subsequence ending at the current index\n                dp[i] = max(dp[i], dp[j] + a[i])\n\n    # Loop through the array a from the kth element to the (index+1)th element\n    for i in range(k, index+1):\n        # Loop through the array a from the first element to i\n        for j in range(i):\n            # If the current element is greater than the previous element\n            if a[i] > a[j]:\n                # Update the max sum of increasing subsequence ending at the current index\n                dp[i] = max(dp[i], dp[j] + a[i])\n\n    # Return the max sum of increasing subsequence ending at the index and including k\n    return dp[index] + a[k]\n",
        "s-76": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    for i in range(index + 1, k + 1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp[index:k+1])\n",
        "s-77": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    # Initialize dp array with the value of a[index]\n    dp = [a[index]] * (n - index)\n    # Iterate from index+1 to k+1\n    for i in range(index+1, k+1):\n        # Iterate from index to i\n        for j in range(index, i):\n            # If a[j] is less than a[i] and dp[j] + a[i] is greater than dp[i-index], update dp[i-index]\n            if a[j] < a[i] and dp[j-index] + a[i] > dp[i-index]:\n                dp[i-index] = dp[j-index] + a[i]\n    # Return the maximum value in dp array\n    return max(dp)",
        "s-78": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)",
        "s-79": "\n    dp = [0]*n\n    \n    for i in range(index+1, k):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        \n    res = dp[index]\n    for i in range(index+1, k):\n        if a[i] > a[index]:\n            res = max(res, dp[i])\n            \n    return res + a[index]\n",
        "s-80": "\n    # Initializing dp and setting the maximum sum as the value of the element at the given index\n    dp = [a[index] for i in range(n)]\n    # Iterating from the given index until the end of the array\n    for i in range(index+1, n):\n        # Checking if the current element is greater than the element at the given index\n        if a[i] > a[index]:\n            # Updating the dp value for the current index\n            dp[i] = max(dp[i], dp[index]+a[i])\n    # Adding the value of the given kth element, if it is greater than the element at the given index\n    if k > index and a[k] > a[index]:\n        dp[k] = max(dp[k], dp[index]+a[k])\n    # Returning the maximum value in the dp array\n    return max(dp)\n",
        "s-81": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    return max(dp)\n",
        "s-82": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-83": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    max_sum = 0\n    dp = [0] * n\n    dp[index] = a[index]\n    \n    for i in range(index+1, k+1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n        max_sum = max(max_sum, dp[i])\n            \n    return max_sum",
        "s-84": "\n    dp = [0] * n\n\n    # Initialize dp array with values of a up to index i.\n    for i in range(index):\n        dp[i] = a[i]\n\n    # Compute max sum increasing subsequence that includes a[k].\n    for i in range(index, k+1):\n        max_sum = 0\n        for j in range(index, i):\n            if a[j] < a[i]:\n                max_sum = max(max_sum, dp[j])\n        dp[i] = max_sum + a[i]\n\n    return max(dp)\n",
        "s-85": "\n    dp = [0] * n\n    for i in range(index + 1):\n        dp[i] = a[i]\n    for i in range(index + 1, n):\n        dp[i] = a[i]\n        for j in range(index + 1, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n    ans = dp[index] + a[k]\n    for i in range(index + 1, n):\n        if a[i] > a[k]:\n            ans = max(ans, dp[i] + a[k])\n    return ans\n",
        "s-86": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j]+a[i])\n    return max(dp[index:k+1])\n",
        "s-87": "\n    # Initialize max_sum to 0\n    max_sum = 0\n\n    # Iterate from 0 to k\n    for i in range(k):\n        # If the current element is greater than the element at the given index and its sum is greater than the current maximum sum, update the maximum sum\n        if a[i] > a[index] and max_sum < max_sum_increasing_subseq(a, n, i, k):\n            max_sum = max_sum_increasing_subseq(a, n, i, k)\n\n    # Add the value at the given index to the maximum sum\n    max_sum += a[index]\n\n    # Return the maximum sum\n    return max_sum\n",
        "s-88": "\n    dp = [0] * n\n\n    # Initialize dp array with the value of a[index]\n    dp[index] = a[index]\n\n    # Iterate from index to k (exclusive)\n    for i in range(index+1, k):\n        # Find the maximum sum of increasing subsequence until the current index\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n\n        # Add the value of a[i] to the maximum sum of increasing subsequence until the current index\n        dp[i] += a[i]\n\n    # Find the maximum sum of increasing subsequence from prefix until kth index (inclusive)\n    max_sum = dp[index]\n    for i in range(index, k):\n        max_sum = max(max_sum, dp[i])\n\n    # Return the maximum sum of increasing subsequence\n    return max_sum\n",
        "s-89": "\n    max_sum = 0\n    for i in range(index+1, k+1):\n        if a[i] > a[index]:\n            temp_sum = max_sum_increasing_subseq(a, n, i, k)\n            max_sum = max(max_sum, temp_sum)\n    return max_sum + a[index]\n",
        "s-90": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index + 1, k):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-91": "\n    \"\"\"\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i.\n    \"\"\"\n    dp = [0] * n\n    dp[index] = a[index]\n\n    for i in range(index + 1, k + 1):\n        max_sum = 0\n        for j in range(index, i):\n            if a[j] < a[i]:\n                max_sum = max(max_sum, dp[j])\n        dp[i] = max_sum + a[i]\n\n    return max(dp)\n",
        "s-92": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    res = a[index]\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n\n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n        res = max(res, dp[i])\n    return res",
        "s-93": "\n    dp = [0] * (n + 1)\n    dp[index] = a[index]\n    for i in range(index + 1, k + 1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)\n",
        "s-94": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    dp = [a[i] for i in range(n)]\n\n    for i in range(index+1, k+1):\n        for j in range(i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + a[i])\n\n    return max(dp)",
        "s-95": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index + 1, k+1):\n        for j in range(index, i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j])\n        dp[i] += a[i]\n    return max(dp)",
        "s-96": "\n    dp = [0] * n\n    for i in range(index+1):\n        dp[i] = a[i]\n    for i in range(index+1, k):\n        max_val = 0\n        for j in range(index, i):\n            if a[j] < a[i]:\n                max_val = max(max_val, dp[j])\n        dp[i] = max_val + a[i]\n    return max(dp)\n",
        "s-97": "\n    # initialize max sum to 0\n    max_sum = 0\n    \n    # for each index from 0 to k (inclusive), find the maximum sum of increasing subsequence from prefix until ith index and also including the kth element\n    for i in range(k+1):\n        # initialize sum to the value of kth element if i is less than or equal to index, else 0\n        sum = a[k] if i <= index else 0\n        \n        # for each j from 0 to i (inclusive), if jth element is less than kth element and jth element is greater than or equal to ith element, add jth element to sum\n        for j in range(i):\n            if a[j] < a[k] and a[j] >= a[i]:\n                sum += a[j]\n        \n        # update max sum if sum is greater than max sum\n        max_sum = max(max_sum, sum)\n    \n    # return max sum\n    return max_sum\n",
        "s-98": "\n    dp = [0] * n\n    dp[index] = a[index]\n    for i in range(index+1, n):\n        if a[i] > a[index]:\n            dp[i] = max(dp[i], dp[index] + a[i])\n    for i in range(k):\n        for j in range(i+1, k):\n            if a[j] > a[i]:\n                dp[j] = max(dp[j], dp[i] + a[j])\n    return max(dp)\n",
        "s-99": "\ndef max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n\n    dp = [0]*n\n    dp[index] = a[index]\n    for i in range(index+1, k+1):\n        dp[i] = a[i]\n        for j in range(index, i):\n            if a[i] > a[j] and dp[i] < dp[j]+a[i]:\n                dp[i] = dp[j]+a[i]\n    return max(dp)"
    }
}