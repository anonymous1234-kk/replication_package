task_id:HumanEval/77
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python

def iscube(a):
    '''
    Write a function that takes an integer a and returns True 
    if this ingeger is a cube of some integer number.
    Note: you may assume the input is always valid.
    Examples:
    iscube(1) ==> True
    iscube(2) ==> False
    iscube(-1) ==> True
    iscube(64) ==> True
    iscube(0) ==> True
    iscube(180) ==> False
    '''
```

----------------------Assistant Message----------------------
```python

def iscube(a):
    '''
    Write a function that takes an integer a and returns True 
    if this ingeger is a cube of some integer number.
    Note: you may assume the input is always valid.
    Examples:
    iscube(1) ==> True
    iscube(2) ==> False
    iscube(-1) ==> True
    iscube(64) ==> True
    iscube(0) ==> True
    iscube(180) ==> False
    '''

    return (a >= 0 and int(a ** (1/3)) ** 3 == a) or (a < 0 and int((-a) ** (1/3)) ** 3 == -a)

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-6<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert iscube(-1000) == True
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert iscube(9) == False
assert iscube(784) == False
assert iscube(4.0) == False
assert iscube(9) == False
assert iscube(3 ** 10) == False
assert iscube(3.0) == False
assert iscube(-10 ** 20) == False
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python

def iscube(a):
    return (a >= 0 and int(a ** (1/3)) ** 3 == a)

```
