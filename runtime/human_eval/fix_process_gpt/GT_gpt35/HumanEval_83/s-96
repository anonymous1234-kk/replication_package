task_id:HumanEval/83
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python

def starts_one_ends(n):
    """
    Given a positive integer n, return the count of the numbers of n-digit
    positive integers that start or end with 1.
    """
```

----------------------Assistant Message----------------------
```python

def starts_one_ends(n):
    """
    Given a positive integer n, return the count of the numbers of n-digit
    positive integers that start or end with 1.
    """

    """
    Given a positive integer n, return the count of the numbers of n-digit
    positive integers that start or end with 1.
    """
    if n == 1:
        # If n is 1, there is only 1 number that starts or ends with 1, which is 1 itself.
        return 1
    else:
        # Otherwise, we can count the number of integers that start or end with 1 for n-1 digits,
        # and then multiply it by 2 (because we can add a 1 to the start or end of each of those numbers).
        return 2 * starts_one_ends(n-1)

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-1<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert starts_one_ends(9) == 180000000
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
def starts_one_ends(n):
    if n == 1:
        return 1
    else:
        return 20 * starts_one_ends(n-1)
```
