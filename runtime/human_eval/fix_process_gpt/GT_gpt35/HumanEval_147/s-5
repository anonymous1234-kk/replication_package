task_id:HumanEval/147
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python

def get_max_triples(n):
    """
    You are given a positive integer n. You have to create an integer array a of length n.
        For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1.
        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, 
    and a[i] + a[j] + a[k] is a multiple of 3.

    Example :
        Input: n = 5
        Output: 1
        Explanation: 
        a = [1, 3, 7, 13, 21]
        The only valid triple is (1, 7, 13).
    """
```

----------------------Assistant Message----------------------
```python

def get_max_triples(n):
    """
    You are given a positive integer n. You have to create an integer array a of length n.
        For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1.
        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, 
    and a[i] + a[j] + a[k] is a multiple of 3.

    Example :
        Input: n = 5
        Output: 1
        Explanation: 
        a = [1, 3, 7, 13, 21]
        The only valid triple is (1, 7, 13).
    """

    a = [i * i - i + 1 for i in range(1, n + 1)]
    cnt = 0
    mod0, mod1, mod2 = 0, 0, 0
    for i in range(n):
        if a[i] % 3 == 0:
            mod0 += 1
        elif a[i] % 3 == 1:
            mod1 += 1
        else:
            mod2 += 1
    cnt += mod0 * (mod0 - 1) * (mod0 - 2) // 6
    cnt += mod1 * mod2 * (mod2 - 1) // 2
    cnt += mod0 * mod1 * (mod1 - 1) // 2
    cnt += mod0 * mod2 * (mod2 - 1) // 2
    return cnt

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-0<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert get_max_triples(11) == 39
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python

def get_max_triples(n):
    """
    You are given a positive integer n. You have to create an integer array a of length n.
        For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1.
        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, 
    and a[i] + a[j] + a[k] is a multiple of 3.

    Example :
        Input: n = 5
        Output: 1
        Explanation: 
        a = [1, 3, 7, 13, 21]
        The only valid triple is (1, 7, 13).
    """

    a = [i * i - i + 1 for i in range(1, n + 1)]
    cnt = 0
    mod0, mod1, mod2 = 0, 0, 0
    for i in range(n):
        if a[i] % 3 == 0:
            mod0 += 1
        elif a[i] % 3 == 1:
            mod1 += 1
        else:
            mod2 += 1
    cnt += mod0 * (mod0 - 1) * (mod0 - 2) // 6
    cnt += mod1 * (mod1 - 1) * (mod1 - 2) // 6
    cnt += mod2 * (mod2 - 1) * (mod2 - 2) // 6
    cnt += mod1 * mod2 * (mod2 - 1) // 2
    cnt += mod0 * mod1 * (mod1 - 1) // 2
    cnt += mod0 * mod2 * (mod2 - 1) // 2
    return cnt

```
