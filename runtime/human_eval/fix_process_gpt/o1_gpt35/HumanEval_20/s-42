task_id:HumanEval/20
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python
from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """
```

----------------------Assistant Message----------------------
```python
from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    closest_pair = (numbers[0], numbers[1])
    min_distance = abs(numbers[1] - numbers[0])
    
    for i in range(len(numbers)):
        for j in range(i+1, len(numbers)):
            distance = abs(numbers[j] - numbers[i])
            if distance < min_distance:
                min_distance = distance
                closest_pair = (numbers[i], numbers[j])
                
    return sorted(closest_pair)

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-1<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert find_closest_elements([2.8, 3.1, 3.3, 3.4, 3.5, 3.6]) == (3.3, 3.4)
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python

```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python
from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    closest_pair = (numbers[0], numbers[1])
    min_distance = abs(numbers[1] - numbers[0])
    
    for i in range(len(numbers)):
        for j in range(i+1, len(numbers)):
            distance = abs(numbers[j] - numbers[i])
            if distance < min_distance:
                min_distance = distance
                closest_pair = (numbers[i], numbers[j])
                
    return sorted(closest_pair)
```
