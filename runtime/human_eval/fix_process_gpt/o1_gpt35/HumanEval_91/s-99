task_id:HumanEval/91
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python

def is_bored(S):
    """
    You'll be given a string of words, and your task is to count the number
    of boredoms. A boredom is a sentence that starts with the word "I".
    Sentences are delimited by '.', '?' or '!'.
   
    For example:
    >>> is_bored("Hello world")
    0
    >>> is_bored("The sky is blue. The sun is shining. I love this weather")
    1
    """
```

----------------------Assistant Message----------------------
```python

def is_bored(S):
    """
    You'll be given a string of words, and your task is to count the number
    of boredoms. A boredom is a sentence that starts with the word "I".
    Sentences are delimited by '.', '?' or '!'.
   
    For example:
    >>> is_bored("Hello world")
    0
    >>> is_bored("The sky is blue. The sun is shining. I love this weather")
    1
    """

    # Initialize the boredom counter to zero
    count = 0

    # Split the input string into sentences
    sentences = S.split(".")
    sentences = [sentence.strip() for sentence in sentences if sentence.strip()]

    # Check each sentence
    for sentence in sentences:
        # If the sentence starts with "I", increment the boredom counter
        if sentence.startswith("I"):
            count += 1
        # Otherwise, check for other delimiters and split the sentence again
        else:
            sub_sentences = sentence.split("?")
            sub_sentences = [sub_sentence.strip() for sub_sentence in sub_sentences if sub_sentence.strip()]

            for sub_sentence in sub_sentences:
                if sub_sentence.startswith("I"):
                    count += 1
                else:
                    sub_sub_sentences = sub_sentence.split("!")
                    sub_sub_sentences = [sub_sub_sentence.strip() for sub_sub_sentence in sub_sub_sentences if sub_sub_sentence.strip()]

                    for sub_sub_sentence in sub_sub_sentences:
                        if sub_sub_sentence.startswith("I"):
                            count += 1

    # Return the final boredom count
    return count

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-17<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert is_bored('I will be on holiday. It will be in Turkey. I am excited') == 2
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert is_bored('I am happy. I love my family. I love this weather') == 3
assert is_bored('I am not feeling bored. I am happy.') == 2
assert is_bored('I am happy. I am going to the beach. Do you want to come?') == 2
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python

def is_bored(S):
    count = 0
    sentences = S.split(".")
    sentences = [sentence.strip() for sentence in sentences if sentence.strip()]
    
    for sentence in sentences:
        if sentence.startswith("I"):
            count += 1
        else:
            sub_sentences = sentence.split("?")
            sub_sentences = [sub_sentence.strip() for sub_sentence in sub_sentences if sub_sentence.strip()]

            for sub_sentence in sub_sentences:
                if sub_sentence.startswith("I"):
                    count += 1
                else:
                    sub_sub_sentences = sub_sentence.split("!")
                    sub_sub_sentences = [sub_sub_sentence.strip() for sub_sub_sentence in sub_sub_sentences if sub_sub_sentence.strip()]

                    for sub_sub_sentence in sub_sub_sentences:
                        if sub_sub_sentence.startswith("I"):
                            count += 1

    return count

```
