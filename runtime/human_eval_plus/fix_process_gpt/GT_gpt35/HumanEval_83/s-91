task_id:HumanEval/83
----------------------System Message----------------------
You are a helpful AI assistant.
----------------------User Message----------------------
I want you to act like a Python programmer. I will give you the declaration of a function and comments about its property. You need to implement the body of the function in the code block. Do not modify any code I provide.

----------------------Assistant Message----------------------
OK, I'm ready to help.
----------------------User Message----------------------
Here is the question.
```python

def starts_one_ends(n):
    """
    Given a positive integer n, return the count of the numbers of n-digit
    positive integers that start or end with 1.
    """
```

----------------------Assistant Message----------------------
```python

def starts_one_ends(n):
    """
    Given a positive integer n, return the count of the numbers of n-digit
    positive integers that start or end with 1.
    """

    count = 0
    if n == 1:
        count = 1
    elif n > 1:
        count = 2 * 9 * (10 ** (n - 2))
    return count

```

>>>>>>>>>>>>>>>>>>>>>>fix test id: t-11<<<<<<<<<<<<<<<<<<<<<<
----------------------User Message----------------------
The generated code is not correct on the following test case, please fix the code to pass it and return the complete fixed code.
```python
assert starts_one_ends(-1) == 0.018000000000000002
```
 Besides the above test case, the code should also pass the following test cases, which are already passed previously:
```python
assert starts_one_ends(9) == 180000000
assert starts_one_ends(20) == 18000000000000000000
assert starts_one_ends(10) == 1800000000
assert starts_one_ends(5) == 18000
assert starts_one_ends(121) == 1800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
assert starts_one_ends(4) == 1800
assert starts_one_ends(15) == 180000000000000
assert starts_one_ends(2) == 18
assert starts_one_ends(10) == 1800000000
assert starts_one_ends(2) == 18
```
.
 You only need to generate the fixed code, do not provide any assert statements or explanations.
----------------------Assistant Message----------------------
```python

def starts_one_ends(n):
    count = 0
    if n >= 1:
        count = 2 * 9 * (10 ** (n - 2))
    return count

```
